// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: udorx_ws_comm.proto

#ifndef PROTOBUF_udorx_5fws_5fcomm_2eproto__INCLUDED
#define PROTOBUF_udorx_5fws_5fcomm_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "udorx_comm.pb.h"
#include "udorx_common.pb.h"
// @@protoc_insertion_point(includes)

namespace udorx_pbf {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_udorx_5fws_5fcomm_2eproto();
void protobuf_AssignDesc_udorx_5fws_5fcomm_2eproto();
void protobuf_ShutdownFile_udorx_5fws_5fcomm_2eproto();

class AssetData;
class ClsGroup;
class ClsLogin;
class PEmplList;
class PPointLL;
class PoiData;
class RttHBList;

// ===================================================================

class AssetData : public ::google::protobuf::Message {
 public:
  AssetData();
  virtual ~AssetData();

  AssetData(const AssetData& from);

  inline AssetData& operator=(const AssetData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AssetData& default_instance();

  void Swap(AssetData* other);

  // implements Message ----------------------------------------------

  inline AssetData* New() const { return New(NULL); }

  AssetData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AssetData& from);
  void MergeFrom(const AssetData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AssetData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ID = 1;
  bool has_id() const;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 cid = 2;
  bool has_cid() const;
  void clear_cid();
  static const int kCidFieldNumber = 2;
  ::google::protobuf::int32 cid() const;
  void set_cid(::google::protobuf::int32 value);

  // required int32 grID = 3;
  bool has_grid() const;
  void clear_grid();
  static const int kGrIDFieldNumber = 3;
  ::google::protobuf::int32 grid() const;
  void set_grid(::google::protobuf::int32 value);

  // required string username = 4;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 4;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // required string Desc = 5;
  bool has_desc() const;
  void clear_desc();
  static const int kDescFieldNumber = 5;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // required string Did = 6;
  bool has_did() const;
  void clear_did();
  static const int kDidFieldNumber = 6;
  const ::std::string& did() const;
  void set_did(const ::std::string& value);
  void set_did(const char* value);
  void set_did(const char* value, size_t size);
  ::std::string* mutable_did();
  ::std::string* release_did();
  void set_allocated_did(::std::string* did);

  // required float lat = 7;
  bool has_lat() const;
  void clear_lat();
  static const int kLatFieldNumber = 7;
  float lat() const;
  void set_lat(float value);

  // required float lon = 8;
  bool has_lon() const;
  void clear_lon();
  static const int kLonFieldNumber = 8;
  float lon() const;
  void set_lon(float value);

  // required int32 Spd = 9;
  bool has_spd() const;
  void clear_spd();
  static const int kSpdFieldNumber = 9;
  ::google::protobuf::int32 spd() const;
  void set_spd(::google::protobuf::int32 value);

  // required float Cog = 10;
  bool has_cog() const;
  void clear_cog();
  static const int kCogFieldNumber = 10;
  float cog() const;
  void set_cog(float value);

  // required int64 TS = 11;
  bool has_ts() const;
  void clear_ts();
  static const int kTSFieldNumber = 11;
  ::google::protobuf::int64 ts() const;
  void set_ts(::google::protobuf::int64 value);

  // required int64 ITS = 12;
  bool has_its() const;
  void clear_its();
  static const int kITSFieldNumber = 12;
  ::google::protobuf::int64 its() const;
  void set_its(::google::protobuf::int64 value);

  // required string Sensors = 13;
  bool has_sensors() const;
  void clear_sensors();
  static const int kSensorsFieldNumber = 13;
  const ::std::string& sensors() const;
  void set_sensors(const ::std::string& value);
  void set_sensors(const char* value);
  void set_sensors(const char* value, size_t size);
  ::std::string* mutable_sensors();
  ::std::string* release_sensors();
  void set_allocated_sensors(::std::string* sensors);

  // required string Address = 14;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 14;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // required int32 type = 15;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 15;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:udorx_pbf.AssetData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_grid();
  inline void clear_has_grid();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_did();
  inline void clear_has_did();
  inline void set_has_lat();
  inline void clear_has_lat();
  inline void set_has_lon();
  inline void clear_has_lon();
  inline void set_has_spd();
  inline void clear_has_spd();
  inline void set_has_cog();
  inline void clear_has_cog();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_its();
  inline void clear_has_its();
  inline void set_has_sensors();
  inline void clear_has_sensors();
  inline void set_has_address();
  inline void clear_has_address();
  inline void set_has_type();
  inline void clear_has_type();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 cid_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::int32 grid_;
  float lat_;
  ::google::protobuf::internal::ArenaStringPtr did_;
  float lon_;
  ::google::protobuf::int32 spd_;
  ::google::protobuf::int64 ts_;
  ::google::protobuf::int64 its_;
  float cog_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::internal::ArenaStringPtr sensors_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  friend void  protobuf_AddDesc_udorx_5fws_5fcomm_2eproto();
  friend void protobuf_AssignDesc_udorx_5fws_5fcomm_2eproto();
  friend void protobuf_ShutdownFile_udorx_5fws_5fcomm_2eproto();

  void InitAsDefaultInstance();
  static AssetData* default_instance_;
};
// -------------------------------------------------------------------

class ClsGroup : public ::google::protobuf::Message {
 public:
  ClsGroup();
  virtual ~ClsGroup();

  ClsGroup(const ClsGroup& from);

  inline ClsGroup& operator=(const ClsGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClsGroup& default_instance();

  void Swap(ClsGroup* other);

  // implements Message ----------------------------------------------

  inline ClsGroup* New() const { return New(NULL); }

  ClsGroup* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClsGroup& from);
  void MergeFrom(const ClsGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClsGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ID = 1;
  bool has_id() const;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required string Desc = 2;
  bool has_desc() const;
  void clear_desc();
  static const int kDescFieldNumber = 2;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // required string Img = 3;
  bool has_img() const;
  void clear_img();
  static const int kImgFieldNumber = 3;
  const ::std::string& img() const;
  void set_img(const ::std::string& value);
  void set_img(const char* value);
  void set_img(const char* value, size_t size);
  ::std::string* mutable_img();
  ::std::string* release_img();
  void set_allocated_img(::std::string* img);

  // required int32 Type = 4;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:udorx_pbf.ClsGroup)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_img();
  inline void clear_has_img();
  inline void set_has_type();
  inline void clear_has_type();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::internal::ArenaStringPtr img_;
  friend void  protobuf_AddDesc_udorx_5fws_5fcomm_2eproto();
  friend void protobuf_AssignDesc_udorx_5fws_5fcomm_2eproto();
  friend void protobuf_ShutdownFile_udorx_5fws_5fcomm_2eproto();

  void InitAsDefaultInstance();
  static ClsGroup* default_instance_;
};
// -------------------------------------------------------------------

class PPointLL : public ::google::protobuf::Message {
 public:
  PPointLL();
  virtual ~PPointLL();

  PPointLL(const PPointLL& from);

  inline PPointLL& operator=(const PPointLL& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PPointLL& default_instance();

  void Swap(PPointLL* other);

  // implements Message ----------------------------------------------

  inline PPointLL* New() const { return New(NULL); }

  PPointLL* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PPointLL& from);
  void MergeFrom(const PPointLL& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PPointLL* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float lat = 1;
  bool has_lat() const;
  void clear_lat();
  static const int kLatFieldNumber = 1;
  float lat() const;
  void set_lat(float value);

  // required float lon = 2;
  bool has_lon() const;
  void clear_lon();
  static const int kLonFieldNumber = 2;
  float lon() const;
  void set_lon(float value);

  // @@protoc_insertion_point(class_scope:udorx_pbf.PPointLL)
 private:
  inline void set_has_lat();
  inline void clear_has_lat();
  inline void set_has_lon();
  inline void clear_has_lon();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float lat_;
  float lon_;
  friend void  protobuf_AddDesc_udorx_5fws_5fcomm_2eproto();
  friend void protobuf_AssignDesc_udorx_5fws_5fcomm_2eproto();
  friend void protobuf_ShutdownFile_udorx_5fws_5fcomm_2eproto();

  void InitAsDefaultInstance();
  static PPointLL* default_instance_;
};
// -------------------------------------------------------------------

class PoiData : public ::google::protobuf::Message {
 public:
  PoiData();
  virtual ~PoiData();

  PoiData(const PoiData& from);

  inline PoiData& operator=(const PoiData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PoiData& default_instance();

  void Swap(PoiData* other);

  // implements Message ----------------------------------------------

  inline PoiData* New() const { return New(NULL); }

  PoiData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PoiData& from);
  void MergeFrom(const PoiData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PoiData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string ID = 1;
  bool has_id() const;
  void clear_id();
  static const int kIDFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required int32 grID = 2;
  bool has_grid() const;
  void clear_grid();
  static const int kGrIDFieldNumber = 2;
  ::google::protobuf::int32 grid() const;
  void set_grid(::google::protobuf::int32 value);

  // required string Name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required float Radius = 4;
  bool has_radius() const;
  void clear_radius();
  static const int kRadiusFieldNumber = 4;
  float radius() const;
  void set_radius(float value);

  // required int32 Type = 5;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // required int32 color = 6;
  bool has_color() const;
  void clear_color();
  static const int kColorFieldNumber = 6;
  ::google::protobuf::int32 color() const;
  void set_color(::google::protobuf::int32 value);

  // repeated .udorx_pbf.PPointLL pnts = 7;
  int pnts_size() const;
  void clear_pnts();
  static const int kPntsFieldNumber = 7;
  const ::udorx_pbf::PPointLL& pnts(int index) const;
  ::udorx_pbf::PPointLL* mutable_pnts(int index);
  ::udorx_pbf::PPointLL* add_pnts();
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PPointLL >*
      mutable_pnts();
  const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PPointLL >&
      pnts() const;

  // @@protoc_insertion_point(class_scope:udorx_pbf.PoiData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_grid();
  inline void clear_has_grid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_radius();
  inline void clear_has_radius();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_color();
  inline void clear_has_color();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 grid_;
  float radius_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 color_;
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PPointLL > pnts_;
  friend void  protobuf_AddDesc_udorx_5fws_5fcomm_2eproto();
  friend void protobuf_AssignDesc_udorx_5fws_5fcomm_2eproto();
  friend void protobuf_ShutdownFile_udorx_5fws_5fcomm_2eproto();

  void InitAsDefaultInstance();
  static PoiData* default_instance_;
};
// -------------------------------------------------------------------

class ClsLogin : public ::google::protobuf::Message {
 public:
  ClsLogin();
  virtual ~ClsLogin();

  ClsLogin(const ClsLogin& from);

  inline ClsLogin& operator=(const ClsLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClsLogin& default_instance();

  void Swap(ClsLogin* other);

  // implements Message ----------------------------------------------

  inline ClsLogin* New() const { return New(NULL); }

  ClsLogin* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClsLogin& from);
  void MergeFrom(const ClsLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClsLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .udorx_pbf.CLogin lgn = 1;
  bool has_lgn() const;
  void clear_lgn();
  static const int kLgnFieldNumber = 1;
  const ::udorx_pbf::CLogin& lgn() const;
  ::udorx_pbf::CLogin* mutable_lgn();
  ::udorx_pbf::CLogin* release_lgn();
  void set_allocated_lgn(::udorx_pbf::CLogin* lgn);

  // repeated .udorx_pbf.AssetData assets = 2;
  int assets_size() const;
  void clear_assets();
  static const int kAssetsFieldNumber = 2;
  const ::udorx_pbf::AssetData& assets(int index) const;
  ::udorx_pbf::AssetData* mutable_assets(int index);
  ::udorx_pbf::AssetData* add_assets();
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::AssetData >*
      mutable_assets();
  const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::AssetData >&
      assets() const;

  // repeated .udorx_pbf.ClsGroup a_groups = 3;
  int a_groups_size() const;
  void clear_a_groups();
  static const int kAGroupsFieldNumber = 3;
  const ::udorx_pbf::ClsGroup& a_groups(int index) const;
  ::udorx_pbf::ClsGroup* mutable_a_groups(int index);
  ::udorx_pbf::ClsGroup* add_a_groups();
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::ClsGroup >*
      mutable_a_groups();
  const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::ClsGroup >&
      a_groups() const;

  // repeated .udorx_pbf.PoiData pois = 4;
  int pois_size() const;
  void clear_pois();
  static const int kPoisFieldNumber = 4;
  const ::udorx_pbf::PoiData& pois(int index) const;
  ::udorx_pbf::PoiData* mutable_pois(int index);
  ::udorx_pbf::PoiData* add_pois();
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PoiData >*
      mutable_pois();
  const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PoiData >&
      pois() const;

  // repeated .udorx_pbf.ClsGroup p_groups = 5;
  int p_groups_size() const;
  void clear_p_groups();
  static const int kPGroupsFieldNumber = 5;
  const ::udorx_pbf::ClsGroup& p_groups(int index) const;
  ::udorx_pbf::ClsGroup* mutable_p_groups(int index);
  ::udorx_pbf::ClsGroup* add_p_groups();
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::ClsGroup >*
      mutable_p_groups();
  const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::ClsGroup >&
      p_groups() const;

  // @@protoc_insertion_point(class_scope:udorx_pbf.ClsLogin)
 private:
  inline void set_has_lgn();
  inline void clear_has_lgn();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::udorx_pbf::CLogin* lgn_;
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::AssetData > assets_;
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::ClsGroup > a_groups_;
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PoiData > pois_;
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::ClsGroup > p_groups_;
  friend void  protobuf_AddDesc_udorx_5fws_5fcomm_2eproto();
  friend void protobuf_AssignDesc_udorx_5fws_5fcomm_2eproto();
  friend void protobuf_ShutdownFile_udorx_5fws_5fcomm_2eproto();

  void InitAsDefaultInstance();
  static ClsLogin* default_instance_;
};
// -------------------------------------------------------------------

class PEmplList : public ::google::protobuf::Message {
 public:
  PEmplList();
  virtual ~PEmplList();

  PEmplList(const PEmplList& from);

  inline PEmplList& operator=(const PEmplList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PEmplList& default_instance();

  void Swap(PEmplList* other);

  // implements Message ----------------------------------------------

  inline PEmplList* New() const { return New(NULL); }

  PEmplList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PEmplList& from);
  void MergeFrom(const PEmplList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PEmplList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .udorx_pbf.PEmpl list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  const ::udorx_pbf::PEmpl& list(int index) const;
  ::udorx_pbf::PEmpl* mutable_list(int index);
  ::udorx_pbf::PEmpl* add_list();
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PEmpl >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PEmpl >&
      list() const;

  // @@protoc_insertion_point(class_scope:udorx_pbf.PEmplList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PEmpl > list_;
  friend void  protobuf_AddDesc_udorx_5fws_5fcomm_2eproto();
  friend void protobuf_AssignDesc_udorx_5fws_5fcomm_2eproto();
  friend void protobuf_ShutdownFile_udorx_5fws_5fcomm_2eproto();

  void InitAsDefaultInstance();
  static PEmplList* default_instance_;
};
// -------------------------------------------------------------------

class RttHBList : public ::google::protobuf::Message {
 public:
  RttHBList();
  virtual ~RttHBList();

  RttHBList(const RttHBList& from);

  inline RttHBList& operator=(const RttHBList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RttHBList& default_instance();

  void Swap(RttHBList* other);

  // implements Message ----------------------------------------------

  inline RttHBList* New() const { return New(NULL); }

  RttHBList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RttHBList& from);
  void MergeFrom(const RttHBList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RttHBList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .udorx_pbf.RttHB events = 1;
  int events_size() const;
  void clear_events();
  static const int kEventsFieldNumber = 1;
  const ::udorx_pbf::RttHB& events(int index) const;
  ::udorx_pbf::RttHB* mutable_events(int index);
  ::udorx_pbf::RttHB* add_events();
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::RttHB >*
      mutable_events();
  const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::RttHB >&
      events() const;

  // optional .udorx_pbf.PCSList cs_list = 2;
  bool has_cs_list() const;
  void clear_cs_list();
  static const int kCsListFieldNumber = 2;
  const ::udorx_pbf::PCSList& cs_list() const;
  ::udorx_pbf::PCSList* mutable_cs_list();
  ::udorx_pbf::PCSList* release_cs_list();
  void set_allocated_cs_list(::udorx_pbf::PCSList* cs_list);

  // @@protoc_insertion_point(class_scope:udorx_pbf.RttHBList)
 private:
  inline void set_has_cs_list();
  inline void clear_has_cs_list();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::RttHB > events_;
  ::udorx_pbf::PCSList* cs_list_;
  friend void  protobuf_AddDesc_udorx_5fws_5fcomm_2eproto();
  friend void protobuf_AssignDesc_udorx_5fws_5fcomm_2eproto();
  friend void protobuf_ShutdownFile_udorx_5fws_5fcomm_2eproto();

  void InitAsDefaultInstance();
  static RttHBList* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AssetData

// required int32 ID = 1;
inline bool AssetData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AssetData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AssetData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AssetData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 AssetData::id() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.AssetData.ID)
  return id_;
}
inline void AssetData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.AssetData.ID)
}

// required int32 cid = 2;
inline bool AssetData::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AssetData::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AssetData::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AssetData::clear_cid() {
  cid_ = 0;
  clear_has_cid();
}
inline ::google::protobuf::int32 AssetData::cid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.AssetData.cid)
  return cid_;
}
inline void AssetData::set_cid(::google::protobuf::int32 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.AssetData.cid)
}

// required int32 grID = 3;
inline bool AssetData::has_grid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AssetData::set_has_grid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AssetData::clear_has_grid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AssetData::clear_grid() {
  grid_ = 0;
  clear_has_grid();
}
inline ::google::protobuf::int32 AssetData::grid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.AssetData.grID)
  return grid_;
}
inline void AssetData::set_grid(::google::protobuf::int32 value) {
  set_has_grid();
  grid_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.AssetData.grID)
}

// required string username = 4;
inline bool AssetData::has_username() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AssetData::set_has_username() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AssetData::clear_has_username() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AssetData::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& AssetData::username() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.AssetData.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AssetData::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.AssetData.username)
}
inline void AssetData::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.AssetData.username)
}
inline void AssetData::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.AssetData.username)
}
inline ::std::string* AssetData::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.AssetData.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AssetData::release_username() {
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AssetData::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.AssetData.username)
}

// required string Desc = 5;
inline bool AssetData::has_desc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AssetData::set_has_desc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AssetData::clear_has_desc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AssetData::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
inline const ::std::string& AssetData::desc() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.AssetData.Desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AssetData::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.AssetData.Desc)
}
inline void AssetData::set_desc(const char* value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.AssetData.Desc)
}
inline void AssetData::set_desc(const char* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.AssetData.Desc)
}
inline ::std::string* AssetData::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.AssetData.Desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AssetData::release_desc() {
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AssetData::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.AssetData.Desc)
}

// required string Did = 6;
inline bool AssetData::has_did() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AssetData::set_has_did() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AssetData::clear_has_did() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AssetData::clear_did() {
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_did();
}
inline const ::std::string& AssetData::did() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.AssetData.Did)
  return did_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AssetData::set_did(const ::std::string& value) {
  set_has_did();
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.AssetData.Did)
}
inline void AssetData::set_did(const char* value) {
  set_has_did();
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.AssetData.Did)
}
inline void AssetData::set_did(const char* value, size_t size) {
  set_has_did();
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.AssetData.Did)
}
inline ::std::string* AssetData::mutable_did() {
  set_has_did();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.AssetData.Did)
  return did_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AssetData::release_did() {
  clear_has_did();
  return did_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AssetData::set_allocated_did(::std::string* did) {
  if (did != NULL) {
    set_has_did();
  } else {
    clear_has_did();
  }
  did_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), did);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.AssetData.Did)
}

// required float lat = 7;
inline bool AssetData::has_lat() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AssetData::set_has_lat() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AssetData::clear_has_lat() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AssetData::clear_lat() {
  lat_ = 0;
  clear_has_lat();
}
inline float AssetData::lat() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.AssetData.lat)
  return lat_;
}
inline void AssetData::set_lat(float value) {
  set_has_lat();
  lat_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.AssetData.lat)
}

// required float lon = 8;
inline bool AssetData::has_lon() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AssetData::set_has_lon() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AssetData::clear_has_lon() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AssetData::clear_lon() {
  lon_ = 0;
  clear_has_lon();
}
inline float AssetData::lon() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.AssetData.lon)
  return lon_;
}
inline void AssetData::set_lon(float value) {
  set_has_lon();
  lon_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.AssetData.lon)
}

// required int32 Spd = 9;
inline bool AssetData::has_spd() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AssetData::set_has_spd() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AssetData::clear_has_spd() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AssetData::clear_spd() {
  spd_ = 0;
  clear_has_spd();
}
inline ::google::protobuf::int32 AssetData::spd() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.AssetData.Spd)
  return spd_;
}
inline void AssetData::set_spd(::google::protobuf::int32 value) {
  set_has_spd();
  spd_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.AssetData.Spd)
}

// required float Cog = 10;
inline bool AssetData::has_cog() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AssetData::set_has_cog() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AssetData::clear_has_cog() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AssetData::clear_cog() {
  cog_ = 0;
  clear_has_cog();
}
inline float AssetData::cog() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.AssetData.Cog)
  return cog_;
}
inline void AssetData::set_cog(float value) {
  set_has_cog();
  cog_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.AssetData.Cog)
}

// required int64 TS = 11;
inline bool AssetData::has_ts() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AssetData::set_has_ts() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AssetData::clear_has_ts() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AssetData::clear_ts() {
  ts_ = GOOGLE_LONGLONG(0);
  clear_has_ts();
}
inline ::google::protobuf::int64 AssetData::ts() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.AssetData.TS)
  return ts_;
}
inline void AssetData::set_ts(::google::protobuf::int64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.AssetData.TS)
}

// required int64 ITS = 12;
inline bool AssetData::has_its() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AssetData::set_has_its() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AssetData::clear_has_its() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AssetData::clear_its() {
  its_ = GOOGLE_LONGLONG(0);
  clear_has_its();
}
inline ::google::protobuf::int64 AssetData::its() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.AssetData.ITS)
  return its_;
}
inline void AssetData::set_its(::google::protobuf::int64 value) {
  set_has_its();
  its_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.AssetData.ITS)
}

// required string Sensors = 13;
inline bool AssetData::has_sensors() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void AssetData::set_has_sensors() {
  _has_bits_[0] |= 0x00001000u;
}
inline void AssetData::clear_has_sensors() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void AssetData::clear_sensors() {
  sensors_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sensors();
}
inline const ::std::string& AssetData::sensors() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.AssetData.Sensors)
  return sensors_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AssetData::set_sensors(const ::std::string& value) {
  set_has_sensors();
  sensors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.AssetData.Sensors)
}
inline void AssetData::set_sensors(const char* value) {
  set_has_sensors();
  sensors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.AssetData.Sensors)
}
inline void AssetData::set_sensors(const char* value, size_t size) {
  set_has_sensors();
  sensors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.AssetData.Sensors)
}
inline ::std::string* AssetData::mutable_sensors() {
  set_has_sensors();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.AssetData.Sensors)
  return sensors_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AssetData::release_sensors() {
  clear_has_sensors();
  return sensors_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AssetData::set_allocated_sensors(::std::string* sensors) {
  if (sensors != NULL) {
    set_has_sensors();
  } else {
    clear_has_sensors();
  }
  sensors_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sensors);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.AssetData.Sensors)
}

// required string Address = 14;
inline bool AssetData::has_address() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void AssetData::set_has_address() {
  _has_bits_[0] |= 0x00002000u;
}
inline void AssetData::clear_has_address() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void AssetData::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address();
}
inline const ::std::string& AssetData::address() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.AssetData.Address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AssetData::set_address(const ::std::string& value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.AssetData.Address)
}
inline void AssetData::set_address(const char* value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.AssetData.Address)
}
inline void AssetData::set_address(const char* value, size_t size) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.AssetData.Address)
}
inline ::std::string* AssetData::mutable_address() {
  set_has_address();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.AssetData.Address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AssetData::release_address() {
  clear_has_address();
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AssetData::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    set_has_address();
  } else {
    clear_has_address();
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.AssetData.Address)
}

// required int32 type = 15;
inline bool AssetData::has_type() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void AssetData::set_has_type() {
  _has_bits_[0] |= 0x00004000u;
}
inline void AssetData::clear_has_type() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void AssetData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 AssetData::type() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.AssetData.type)
  return type_;
}
inline void AssetData::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.AssetData.type)
}

// -------------------------------------------------------------------

// ClsGroup

// required int32 ID = 1;
inline bool ClsGroup::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClsGroup::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClsGroup::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClsGroup::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ClsGroup::id() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.ClsGroup.ID)
  return id_;
}
inline void ClsGroup::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.ClsGroup.ID)
}

// required string Desc = 2;
inline bool ClsGroup::has_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClsGroup::set_has_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClsGroup::clear_has_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClsGroup::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
inline const ::std::string& ClsGroup::desc() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.ClsGroup.Desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClsGroup::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.ClsGroup.Desc)
}
inline void ClsGroup::set_desc(const char* value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.ClsGroup.Desc)
}
inline void ClsGroup::set_desc(const char* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.ClsGroup.Desc)
}
inline ::std::string* ClsGroup::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.ClsGroup.Desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClsGroup::release_desc() {
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClsGroup::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.ClsGroup.Desc)
}

// required string Img = 3;
inline bool ClsGroup::has_img() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClsGroup::set_has_img() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClsGroup::clear_has_img() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClsGroup::clear_img() {
  img_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_img();
}
inline const ::std::string& ClsGroup::img() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.ClsGroup.Img)
  return img_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClsGroup::set_img(const ::std::string& value) {
  set_has_img();
  img_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.ClsGroup.Img)
}
inline void ClsGroup::set_img(const char* value) {
  set_has_img();
  img_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.ClsGroup.Img)
}
inline void ClsGroup::set_img(const char* value, size_t size) {
  set_has_img();
  img_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.ClsGroup.Img)
}
inline ::std::string* ClsGroup::mutable_img() {
  set_has_img();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.ClsGroup.Img)
  return img_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClsGroup::release_img() {
  clear_has_img();
  return img_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClsGroup::set_allocated_img(::std::string* img) {
  if (img != NULL) {
    set_has_img();
  } else {
    clear_has_img();
  }
  img_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), img);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.ClsGroup.Img)
}

// required int32 Type = 4;
inline bool ClsGroup::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClsGroup::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClsGroup::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClsGroup::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ClsGroup::type() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.ClsGroup.Type)
  return type_;
}
inline void ClsGroup::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.ClsGroup.Type)
}

// -------------------------------------------------------------------

// PPointLL

// required float lat = 1;
inline bool PPointLL::has_lat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PPointLL::set_has_lat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PPointLL::clear_has_lat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PPointLL::clear_lat() {
  lat_ = 0;
  clear_has_lat();
}
inline float PPointLL::lat() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PPointLL.lat)
  return lat_;
}
inline void PPointLL::set_lat(float value) {
  set_has_lat();
  lat_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PPointLL.lat)
}

// required float lon = 2;
inline bool PPointLL::has_lon() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PPointLL::set_has_lon() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PPointLL::clear_has_lon() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PPointLL::clear_lon() {
  lon_ = 0;
  clear_has_lon();
}
inline float PPointLL::lon() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PPointLL.lon)
  return lon_;
}
inline void PPointLL::set_lon(float value) {
  set_has_lon();
  lon_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PPointLL.lon)
}

// -------------------------------------------------------------------

// PoiData

// required string ID = 1;
inline bool PoiData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PoiData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PoiData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PoiData::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& PoiData::id() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PoiData.ID)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PoiData::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PoiData.ID)
}
inline void PoiData::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PoiData.ID)
}
inline void PoiData::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PoiData.ID)
}
inline ::std::string* PoiData::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PoiData.ID)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PoiData::release_id() {
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PoiData::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PoiData.ID)
}

// required int32 grID = 2;
inline bool PoiData::has_grid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PoiData::set_has_grid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PoiData::clear_has_grid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PoiData::clear_grid() {
  grid_ = 0;
  clear_has_grid();
}
inline ::google::protobuf::int32 PoiData::grid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PoiData.grID)
  return grid_;
}
inline void PoiData::set_grid(::google::protobuf::int32 value) {
  set_has_grid();
  grid_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PoiData.grID)
}

// required string Name = 3;
inline bool PoiData::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PoiData::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PoiData::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PoiData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& PoiData::name() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PoiData.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PoiData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PoiData.Name)
}
inline void PoiData::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PoiData.Name)
}
inline void PoiData::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PoiData.Name)
}
inline ::std::string* PoiData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PoiData.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PoiData::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PoiData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PoiData.Name)
}

// required float Radius = 4;
inline bool PoiData::has_radius() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PoiData::set_has_radius() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PoiData::clear_has_radius() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PoiData::clear_radius() {
  radius_ = 0;
  clear_has_radius();
}
inline float PoiData::radius() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PoiData.Radius)
  return radius_;
}
inline void PoiData::set_radius(float value) {
  set_has_radius();
  radius_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PoiData.Radius)
}

// required int32 Type = 5;
inline bool PoiData::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PoiData::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PoiData::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PoiData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 PoiData::type() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PoiData.Type)
  return type_;
}
inline void PoiData::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PoiData.Type)
}

// required int32 color = 6;
inline bool PoiData::has_color() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PoiData::set_has_color() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PoiData::clear_has_color() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PoiData::clear_color() {
  color_ = 0;
  clear_has_color();
}
inline ::google::protobuf::int32 PoiData::color() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PoiData.color)
  return color_;
}
inline void PoiData::set_color(::google::protobuf::int32 value) {
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PoiData.color)
}

// repeated .udorx_pbf.PPointLL pnts = 7;
inline int PoiData::pnts_size() const {
  return pnts_.size();
}
inline void PoiData::clear_pnts() {
  pnts_.Clear();
}
inline const ::udorx_pbf::PPointLL& PoiData::pnts(int index) const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PoiData.pnts)
  return pnts_.Get(index);
}
inline ::udorx_pbf::PPointLL* PoiData::mutable_pnts(int index) {
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PoiData.pnts)
  return pnts_.Mutable(index);
}
inline ::udorx_pbf::PPointLL* PoiData::add_pnts() {
  // @@protoc_insertion_point(field_add:udorx_pbf.PoiData.pnts)
  return pnts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PPointLL >*
PoiData::mutable_pnts() {
  // @@protoc_insertion_point(field_mutable_list:udorx_pbf.PoiData.pnts)
  return &pnts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PPointLL >&
PoiData::pnts() const {
  // @@protoc_insertion_point(field_list:udorx_pbf.PoiData.pnts)
  return pnts_;
}

// -------------------------------------------------------------------

// ClsLogin

// required .udorx_pbf.CLogin lgn = 1;
inline bool ClsLogin::has_lgn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClsLogin::set_has_lgn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClsLogin::clear_has_lgn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClsLogin::clear_lgn() {
  if (lgn_ != NULL) lgn_->::udorx_pbf::CLogin::Clear();
  clear_has_lgn();
}
inline const ::udorx_pbf::CLogin& ClsLogin::lgn() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.ClsLogin.lgn)
  return lgn_ != NULL ? *lgn_ : *default_instance_->lgn_;
}
inline ::udorx_pbf::CLogin* ClsLogin::mutable_lgn() {
  set_has_lgn();
  if (lgn_ == NULL) {
    lgn_ = new ::udorx_pbf::CLogin;
  }
  // @@protoc_insertion_point(field_mutable:udorx_pbf.ClsLogin.lgn)
  return lgn_;
}
inline ::udorx_pbf::CLogin* ClsLogin::release_lgn() {
  clear_has_lgn();
  ::udorx_pbf::CLogin* temp = lgn_;
  lgn_ = NULL;
  return temp;
}
inline void ClsLogin::set_allocated_lgn(::udorx_pbf::CLogin* lgn) {
  delete lgn_;
  lgn_ = lgn;
  if (lgn) {
    set_has_lgn();
  } else {
    clear_has_lgn();
  }
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.ClsLogin.lgn)
}

// repeated .udorx_pbf.AssetData assets = 2;
inline int ClsLogin::assets_size() const {
  return assets_.size();
}
inline void ClsLogin::clear_assets() {
  assets_.Clear();
}
inline const ::udorx_pbf::AssetData& ClsLogin::assets(int index) const {
  // @@protoc_insertion_point(field_get:udorx_pbf.ClsLogin.assets)
  return assets_.Get(index);
}
inline ::udorx_pbf::AssetData* ClsLogin::mutable_assets(int index) {
  // @@protoc_insertion_point(field_mutable:udorx_pbf.ClsLogin.assets)
  return assets_.Mutable(index);
}
inline ::udorx_pbf::AssetData* ClsLogin::add_assets() {
  // @@protoc_insertion_point(field_add:udorx_pbf.ClsLogin.assets)
  return assets_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::udorx_pbf::AssetData >*
ClsLogin::mutable_assets() {
  // @@protoc_insertion_point(field_mutable_list:udorx_pbf.ClsLogin.assets)
  return &assets_;
}
inline const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::AssetData >&
ClsLogin::assets() const {
  // @@protoc_insertion_point(field_list:udorx_pbf.ClsLogin.assets)
  return assets_;
}

// repeated .udorx_pbf.ClsGroup a_groups = 3;
inline int ClsLogin::a_groups_size() const {
  return a_groups_.size();
}
inline void ClsLogin::clear_a_groups() {
  a_groups_.Clear();
}
inline const ::udorx_pbf::ClsGroup& ClsLogin::a_groups(int index) const {
  // @@protoc_insertion_point(field_get:udorx_pbf.ClsLogin.a_groups)
  return a_groups_.Get(index);
}
inline ::udorx_pbf::ClsGroup* ClsLogin::mutable_a_groups(int index) {
  // @@protoc_insertion_point(field_mutable:udorx_pbf.ClsLogin.a_groups)
  return a_groups_.Mutable(index);
}
inline ::udorx_pbf::ClsGroup* ClsLogin::add_a_groups() {
  // @@protoc_insertion_point(field_add:udorx_pbf.ClsLogin.a_groups)
  return a_groups_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::udorx_pbf::ClsGroup >*
ClsLogin::mutable_a_groups() {
  // @@protoc_insertion_point(field_mutable_list:udorx_pbf.ClsLogin.a_groups)
  return &a_groups_;
}
inline const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::ClsGroup >&
ClsLogin::a_groups() const {
  // @@protoc_insertion_point(field_list:udorx_pbf.ClsLogin.a_groups)
  return a_groups_;
}

// repeated .udorx_pbf.PoiData pois = 4;
inline int ClsLogin::pois_size() const {
  return pois_.size();
}
inline void ClsLogin::clear_pois() {
  pois_.Clear();
}
inline const ::udorx_pbf::PoiData& ClsLogin::pois(int index) const {
  // @@protoc_insertion_point(field_get:udorx_pbf.ClsLogin.pois)
  return pois_.Get(index);
}
inline ::udorx_pbf::PoiData* ClsLogin::mutable_pois(int index) {
  // @@protoc_insertion_point(field_mutable:udorx_pbf.ClsLogin.pois)
  return pois_.Mutable(index);
}
inline ::udorx_pbf::PoiData* ClsLogin::add_pois() {
  // @@protoc_insertion_point(field_add:udorx_pbf.ClsLogin.pois)
  return pois_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PoiData >*
ClsLogin::mutable_pois() {
  // @@protoc_insertion_point(field_mutable_list:udorx_pbf.ClsLogin.pois)
  return &pois_;
}
inline const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PoiData >&
ClsLogin::pois() const {
  // @@protoc_insertion_point(field_list:udorx_pbf.ClsLogin.pois)
  return pois_;
}

// repeated .udorx_pbf.ClsGroup p_groups = 5;
inline int ClsLogin::p_groups_size() const {
  return p_groups_.size();
}
inline void ClsLogin::clear_p_groups() {
  p_groups_.Clear();
}
inline const ::udorx_pbf::ClsGroup& ClsLogin::p_groups(int index) const {
  // @@protoc_insertion_point(field_get:udorx_pbf.ClsLogin.p_groups)
  return p_groups_.Get(index);
}
inline ::udorx_pbf::ClsGroup* ClsLogin::mutable_p_groups(int index) {
  // @@protoc_insertion_point(field_mutable:udorx_pbf.ClsLogin.p_groups)
  return p_groups_.Mutable(index);
}
inline ::udorx_pbf::ClsGroup* ClsLogin::add_p_groups() {
  // @@protoc_insertion_point(field_add:udorx_pbf.ClsLogin.p_groups)
  return p_groups_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::udorx_pbf::ClsGroup >*
ClsLogin::mutable_p_groups() {
  // @@protoc_insertion_point(field_mutable_list:udorx_pbf.ClsLogin.p_groups)
  return &p_groups_;
}
inline const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::ClsGroup >&
ClsLogin::p_groups() const {
  // @@protoc_insertion_point(field_list:udorx_pbf.ClsLogin.p_groups)
  return p_groups_;
}

// -------------------------------------------------------------------

// PEmplList

// repeated .udorx_pbf.PEmpl list = 1;
inline int PEmplList::list_size() const {
  return list_.size();
}
inline void PEmplList::clear_list() {
  list_.Clear();
}
inline const ::udorx_pbf::PEmpl& PEmplList::list(int index) const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmplList.list)
  return list_.Get(index);
}
inline ::udorx_pbf::PEmpl* PEmplList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmplList.list)
  return list_.Mutable(index);
}
inline ::udorx_pbf::PEmpl* PEmplList::add_list() {
  // @@protoc_insertion_point(field_add:udorx_pbf.PEmplList.list)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PEmpl >*
PEmplList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:udorx_pbf.PEmplList.list)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PEmpl >&
PEmplList::list() const {
  // @@protoc_insertion_point(field_list:udorx_pbf.PEmplList.list)
  return list_;
}

// -------------------------------------------------------------------

// RttHBList

// repeated .udorx_pbf.RttHB events = 1;
inline int RttHBList::events_size() const {
  return events_.size();
}
inline void RttHBList::clear_events() {
  events_.Clear();
}
inline const ::udorx_pbf::RttHB& RttHBList::events(int index) const {
  // @@protoc_insertion_point(field_get:udorx_pbf.RttHBList.events)
  return events_.Get(index);
}
inline ::udorx_pbf::RttHB* RttHBList::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:udorx_pbf.RttHBList.events)
  return events_.Mutable(index);
}
inline ::udorx_pbf::RttHB* RttHBList::add_events() {
  // @@protoc_insertion_point(field_add:udorx_pbf.RttHBList.events)
  return events_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::udorx_pbf::RttHB >*
RttHBList::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:udorx_pbf.RttHBList.events)
  return &events_;
}
inline const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::RttHB >&
RttHBList::events() const {
  // @@protoc_insertion_point(field_list:udorx_pbf.RttHBList.events)
  return events_;
}

// optional .udorx_pbf.PCSList cs_list = 2;
inline bool RttHBList::has_cs_list() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RttHBList::set_has_cs_list() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RttHBList::clear_has_cs_list() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RttHBList::clear_cs_list() {
  if (cs_list_ != NULL) cs_list_->::udorx_pbf::PCSList::Clear();
  clear_has_cs_list();
}
inline const ::udorx_pbf::PCSList& RttHBList::cs_list() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.RttHBList.cs_list)
  return cs_list_ != NULL ? *cs_list_ : *default_instance_->cs_list_;
}
inline ::udorx_pbf::PCSList* RttHBList::mutable_cs_list() {
  set_has_cs_list();
  if (cs_list_ == NULL) {
    cs_list_ = new ::udorx_pbf::PCSList;
  }
  // @@protoc_insertion_point(field_mutable:udorx_pbf.RttHBList.cs_list)
  return cs_list_;
}
inline ::udorx_pbf::PCSList* RttHBList::release_cs_list() {
  clear_has_cs_list();
  ::udorx_pbf::PCSList* temp = cs_list_;
  cs_list_ = NULL;
  return temp;
}
inline void RttHBList::set_allocated_cs_list(::udorx_pbf::PCSList* cs_list) {
  delete cs_list_;
  cs_list_ = cs_list;
  if (cs_list) {
    set_has_cs_list();
  } else {
    clear_has_cs_list();
  }
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.RttHBList.cs_list)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace udorx_pbf

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_udorx_5fws_5fcomm_2eproto__INCLUDED
