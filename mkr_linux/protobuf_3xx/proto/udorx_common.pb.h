// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: udorx_common.proto

#ifndef PROTOBUF_udorx_5fcommon_2eproto__INCLUDED
#define PROTOBUF_udorx_5fcommon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace udorx_pbf {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_udorx_5fcommon_2eproto();
void protobuf_AssignDesc_udorx_5fcommon_2eproto();
void protobuf_ShutdownFile_udorx_5fcommon_2eproto();

class CommPacket;
class MeterValue;
class MeterValues;
class PCSIStatus;
class PCSIStatusList;
class PCSItem;
class PCSList;
class PConf;
class PEmpl;
class PMsg;
class PMsgList;
class PRegister;
class SampledValue;
class TrData;
class TrDataList;

// ===================================================================

class PCSIStatus : public ::google::protobuf::Message {
 public:
  PCSIStatus();
  virtual ~PCSIStatus();

  PCSIStatus(const PCSIStatus& from);

  inline PCSIStatus& operator=(const PCSIStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PCSIStatus& default_instance();

  void Swap(PCSIStatus* other);

  // implements Message ----------------------------------------------

  inline PCSIStatus* New() const { return New(NULL); }

  PCSIStatus* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PCSIStatus& from);
  void MergeFrom(const PCSIStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PCSIStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 ID = 1;
  bool has_id() const;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // required int32 status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // required bytes ObjB = 3;
  bool has_objb() const;
  void clear_objb();
  static const int kObjBFieldNumber = 3;
  const ::std::string& objb() const;
  void set_objb(const ::std::string& value);
  void set_objb(const char* value);
  void set_objb(const void* value, size_t size);
  ::std::string* mutable_objb();
  ::std::string* release_objb();
  void set_allocated_objb(::std::string* objb);

  // @@protoc_insertion_point(class_scope:udorx_pbf.PCSIStatus)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_objb();
  inline void clear_has_objb();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::internal::ArenaStringPtr objb_;
  ::google::protobuf::int32 status_;
  friend void  protobuf_AddDesc_udorx_5fcommon_2eproto();
  friend void protobuf_AssignDesc_udorx_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_udorx_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static PCSIStatus* default_instance_;
};
// -------------------------------------------------------------------

class PCSItem : public ::google::protobuf::Message {
 public:
  PCSItem();
  virtual ~PCSItem();

  PCSItem(const PCSItem& from);

  inline PCSItem& operator=(const PCSItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PCSItem& default_instance();

  void Swap(PCSItem* other);

  // implements Message ----------------------------------------------

  inline PCSItem* New() const { return New(NULL); }

  PCSItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PCSItem& from);
  void MergeFrom(const PCSItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PCSItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 ID = 1;
  bool has_id() const;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // required int32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // required string Caller = 3;
  bool has_caller() const;
  void clear_caller();
  static const int kCallerFieldNumber = 3;
  const ::std::string& caller() const;
  void set_caller(const ::std::string& value);
  void set_caller(const char* value);
  void set_caller(const char* value, size_t size);
  ::std::string* mutable_caller();
  ::std::string* release_caller();
  void set_allocated_caller(::std::string* caller);

  // optional string Param1 = 4;
  bool has_param1() const;
  void clear_param1();
  static const int kParam1FieldNumber = 4;
  const ::std::string& param1() const;
  void set_param1(const ::std::string& value);
  void set_param1(const char* value);
  void set_param1(const char* value, size_t size);
  ::std::string* mutable_param1();
  ::std::string* release_param1();
  void set_allocated_param1(::std::string* param1);

  // required string Reference = 5;
  bool has_reference() const;
  void clear_reference();
  static const int kReferenceFieldNumber = 5;
  const ::std::string& reference() const;
  void set_reference(const ::std::string& value);
  void set_reference(const char* value);
  void set_reference(const char* value, size_t size);
  ::std::string* mutable_reference();
  ::std::string* release_reference();
  void set_allocated_reference(::std::string* reference);

  // required string SerialN = 6;
  bool has_serialn() const;
  void clear_serialn();
  static const int kSerialNFieldNumber = 6;
  const ::std::string& serialn() const;
  void set_serialn(const ::std::string& value);
  void set_serialn(const char* value);
  void set_serialn(const char* value, size_t size);
  ::std::string* mutable_serialn();
  ::std::string* release_serialn();
  void set_allocated_serialn(::std::string* serialn);

  // optional string Address = 7;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 7;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // required string Instrs = 8;
  bool has_instrs() const;
  void clear_instrs();
  static const int kInstrsFieldNumber = 8;
  const ::std::string& instrs() const;
  void set_instrs(const ::std::string& value);
  void set_instrs(const char* value);
  void set_instrs(const char* value, size_t size);
  ::std::string* mutable_instrs();
  ::std::string* release_instrs();
  void set_allocated_instrs(::std::string* instrs);

  // required int32 CertFlag = 9;
  bool has_certflag() const;
  void clear_certflag();
  static const int kCertFlagFieldNumber = 9;
  ::google::protobuf::int32 certflag() const;
  void set_certflag(::google::protobuf::int32 value);

  // optional int64 CreatedTS = 10;
  bool has_createdts() const;
  void clear_createdts();
  static const int kCreatedTSFieldNumber = 10;
  ::google::protobuf::int64 createdts() const;
  void set_createdts(::google::protobuf::int64 value);

  // optional int64 LastUpdtdTS = 11;
  bool has_lastupdtdts() const;
  void clear_lastupdtdts();
  static const int kLastUpdtdTSFieldNumber = 11;
  ::google::protobuf::int64 lastupdtdts() const;
  void set_lastupdtdts(::google::protobuf::int64 value);

  // required int32 status = 12;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 12;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // required int32 serviceGroup = 13;
  bool has_servicegroup() const;
  void clear_servicegroup();
  static const int kServiceGroupFieldNumber = 13;
  ::google::protobuf::int32 servicegroup() const;
  void set_servicegroup(::google::protobuf::int32 value);

  // required int32 ClientID = 14;
  bool has_clientid() const;
  void clear_clientid();
  static const int kClientIDFieldNumber = 14;
  ::google::protobuf::int32 clientid() const;
  void set_clientid(::google::protobuf::int32 value);

  // required float Lat = 15;
  bool has_lat() const;
  void clear_lat();
  static const int kLatFieldNumber = 15;
  float lat() const;
  void set_lat(float value);

  // required float Lon = 16;
  bool has_lon() const;
  void clear_lon();
  static const int kLonFieldNumber = 16;
  float lon() const;
  void set_lon(float value);

  // optional int32 ProfID = 17;
  bool has_profid() const;
  void clear_profid();
  static const int kProfIDFieldNumber = 17;
  ::google::protobuf::int32 profid() const;
  void set_profid(::google::protobuf::int32 value);

  // optional bytes ObjB = 18;
  bool has_objb() const;
  void clear_objb();
  static const int kObjBFieldNumber = 18;
  const ::std::string& objb() const;
  void set_objb(const ::std::string& value);
  void set_objb(const char* value);
  void set_objb(const void* value, size_t size);
  ::std::string* mutable_objb();
  ::std::string* release_objb();
  void set_allocated_objb(::std::string* objb);

  // optional string IPAddr = 19;
  bool has_ipaddr() const;
  void clear_ipaddr();
  static const int kIPAddrFieldNumber = 19;
  const ::std::string& ipaddr() const;
  void set_ipaddr(const ::std::string& value);
  void set_ipaddr(const char* value);
  void set_ipaddr(const char* value, size_t size);
  ::std::string* mutable_ipaddr();
  ::std::string* release_ipaddr();
  void set_allocated_ipaddr(::std::string* ipaddr);

  // optional string FWVer = 20;
  bool has_fwver() const;
  void clear_fwver();
  static const int kFWVerFieldNumber = 20;
  const ::std::string& fwver() const;
  void set_fwver(const ::std::string& value);
  void set_fwver(const char* value);
  void set_fwver(const char* value, size_t size);
  ::std::string* mutable_fwver();
  ::std::string* release_fwver();
  void set_allocated_fwver(::std::string* fwver);

  // optional int32 tz = 21;
  bool has_tz() const;
  void clear_tz();
  static const int kTzFieldNumber = 21;
  ::google::protobuf::int32 tz() const;
  void set_tz(::google::protobuf::int32 value);

  // optional int32 dls = 22;
  bool has_dls() const;
  void clear_dls();
  static const int kDlsFieldNumber = 22;
  ::google::protobuf::int32 dls() const;
  void set_dls(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:udorx_pbf.PCSItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_caller();
  inline void clear_has_caller();
  inline void set_has_param1();
  inline void clear_has_param1();
  inline void set_has_reference();
  inline void clear_has_reference();
  inline void set_has_serialn();
  inline void clear_has_serialn();
  inline void set_has_address();
  inline void clear_has_address();
  inline void set_has_instrs();
  inline void clear_has_instrs();
  inline void set_has_certflag();
  inline void clear_has_certflag();
  inline void set_has_createdts();
  inline void clear_has_createdts();
  inline void set_has_lastupdtdts();
  inline void clear_has_lastupdtdts();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_servicegroup();
  inline void clear_has_servicegroup();
  inline void set_has_clientid();
  inline void clear_has_clientid();
  inline void set_has_lat();
  inline void clear_has_lat();
  inline void set_has_lon();
  inline void clear_has_lon();
  inline void set_has_profid();
  inline void clear_has_profid();
  inline void set_has_objb();
  inline void clear_has_objb();
  inline void set_has_ipaddr();
  inline void clear_has_ipaddr();
  inline void set_has_fwver();
  inline void clear_has_fwver();
  inline void set_has_tz();
  inline void clear_has_tz();
  inline void set_has_dls();
  inline void clear_has_dls();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::internal::ArenaStringPtr caller_;
  ::google::protobuf::internal::ArenaStringPtr param1_;
  ::google::protobuf::internal::ArenaStringPtr reference_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 certflag_;
  ::google::protobuf::internal::ArenaStringPtr serialn_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::internal::ArenaStringPtr instrs_;
  ::google::protobuf::int64 createdts_;
  ::google::protobuf::int64 lastupdtdts_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 servicegroup_;
  ::google::protobuf::int32 clientid_;
  float lat_;
  float lon_;
  ::google::protobuf::int32 profid_;
  ::google::protobuf::internal::ArenaStringPtr objb_;
  ::google::protobuf::internal::ArenaStringPtr ipaddr_;
  ::google::protobuf::internal::ArenaStringPtr fwver_;
  ::google::protobuf::int32 tz_;
  ::google::protobuf::int32 dls_;
  friend void  protobuf_AddDesc_udorx_5fcommon_2eproto();
  friend void protobuf_AssignDesc_udorx_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_udorx_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static PCSItem* default_instance_;
};
// -------------------------------------------------------------------

class PCSList : public ::google::protobuf::Message {
 public:
  PCSList();
  virtual ~PCSList();

  PCSList(const PCSList& from);

  inline PCSList& operator=(const PCSList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PCSList& default_instance();

  void Swap(PCSList* other);

  // implements Message ----------------------------------------------

  inline PCSList* New() const { return New(NULL); }

  PCSList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PCSList& from);
  void MergeFrom(const PCSList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PCSList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .udorx_pbf.PCSItem cs_items = 1;
  int cs_items_size() const;
  void clear_cs_items();
  static const int kCsItemsFieldNumber = 1;
  const ::udorx_pbf::PCSItem& cs_items(int index) const;
  ::udorx_pbf::PCSItem* mutable_cs_items(int index);
  ::udorx_pbf::PCSItem* add_cs_items();
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PCSItem >*
      mutable_cs_items();
  const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PCSItem >&
      cs_items() const;

  // @@protoc_insertion_point(class_scope:udorx_pbf.PCSList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PCSItem > cs_items_;
  friend void  protobuf_AddDesc_udorx_5fcommon_2eproto();
  friend void protobuf_AssignDesc_udorx_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_udorx_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static PCSList* default_instance_;
};
// -------------------------------------------------------------------

class PCSIStatusList : public ::google::protobuf::Message {
 public:
  PCSIStatusList();
  virtual ~PCSIStatusList();

  PCSIStatusList(const PCSIStatusList& from);

  inline PCSIStatusList& operator=(const PCSIStatusList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PCSIStatusList& default_instance();

  void Swap(PCSIStatusList* other);

  // implements Message ----------------------------------------------

  inline PCSIStatusList* New() const { return New(NULL); }

  PCSIStatusList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PCSIStatusList& from);
  void MergeFrom(const PCSIStatusList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PCSIStatusList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .udorx_pbf.PCSIStatus cs_sts_items = 1;
  int cs_sts_items_size() const;
  void clear_cs_sts_items();
  static const int kCsStsItemsFieldNumber = 1;
  const ::udorx_pbf::PCSIStatus& cs_sts_items(int index) const;
  ::udorx_pbf::PCSIStatus* mutable_cs_sts_items(int index);
  ::udorx_pbf::PCSIStatus* add_cs_sts_items();
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PCSIStatus >*
      mutable_cs_sts_items();
  const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PCSIStatus >&
      cs_sts_items() const;

  // @@protoc_insertion_point(class_scope:udorx_pbf.PCSIStatusList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PCSIStatus > cs_sts_items_;
  friend void  protobuf_AddDesc_udorx_5fcommon_2eproto();
  friend void protobuf_AssignDesc_udorx_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_udorx_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static PCSIStatusList* default_instance_;
};
// -------------------------------------------------------------------

class PConf : public ::google::protobuf::Message {
 public:
  PConf();
  virtual ~PConf();

  PConf(const PConf& from);

  inline PConf& operator=(const PConf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PConf& default_instance();

  void Swap(PConf* other);

  // implements Message ----------------------------------------------

  inline PConf* New() const { return New(NULL); }

  PConf* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PConf& from);
  void MergeFrom(const PConf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PConf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 utcOff = 1;
  bool has_utcoff() const;
  void clear_utcoff();
  static const int kUtcOffFieldNumber = 1;
  ::google::protobuf::int32 utcoff() const;
  void set_utcoff(::google::protobuf::int32 value);

  // required int32 dls = 2;
  bool has_dls() const;
  void clear_dls();
  static const int kDlsFieldNumber = 2;
  ::google::protobuf::int32 dls() const;
  void set_dls(::google::protobuf::int32 value);

  // optional int32 param1 = 3;
  bool has_param1() const;
  void clear_param1();
  static const int kParam1FieldNumber = 3;
  ::google::protobuf::int32 param1() const;
  void set_param1(::google::protobuf::int32 value);

  // optional int32 param2 = 4;
  bool has_param2() const;
  void clear_param2();
  static const int kParam2FieldNumber = 4;
  ::google::protobuf::int32 param2() const;
  void set_param2(::google::protobuf::int32 value);

  // optional string param3 = 5;
  bool has_param3() const;
  void clear_param3();
  static const int kParam3FieldNumber = 5;
  const ::std::string& param3() const;
  void set_param3(const ::std::string& value);
  void set_param3(const char* value);
  void set_param3(const char* value, size_t size);
  ::std::string* mutable_param3();
  ::std::string* release_param3();
  void set_allocated_param3(::std::string* param3);

  // optional string param4 = 6;
  bool has_param4() const;
  void clear_param4();
  static const int kParam4FieldNumber = 6;
  const ::std::string& param4() const;
  void set_param4(const ::std::string& value);
  void set_param4(const char* value);
  void set_param4(const char* value, size_t size);
  ::std::string* mutable_param4();
  ::std::string* release_param4();
  void set_allocated_param4(::std::string* param4);

  // @@protoc_insertion_point(class_scope:udorx_pbf.PConf)
 private:
  inline void set_has_utcoff();
  inline void clear_has_utcoff();
  inline void set_has_dls();
  inline void clear_has_dls();
  inline void set_has_param1();
  inline void clear_has_param1();
  inline void set_has_param2();
  inline void clear_has_param2();
  inline void set_has_param3();
  inline void clear_has_param3();
  inline void set_has_param4();
  inline void clear_has_param4();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 utcoff_;
  ::google::protobuf::int32 dls_;
  ::google::protobuf::int32 param1_;
  ::google::protobuf::int32 param2_;
  ::google::protobuf::internal::ArenaStringPtr param3_;
  ::google::protobuf::internal::ArenaStringPtr param4_;
  friend void  protobuf_AddDesc_udorx_5fcommon_2eproto();
  friend void protobuf_AssignDesc_udorx_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_udorx_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static PConf* default_instance_;
};
// -------------------------------------------------------------------

class PEmpl : public ::google::protobuf::Message {
 public:
  PEmpl();
  virtual ~PEmpl();

  PEmpl(const PEmpl& from);

  inline PEmpl& operator=(const PEmpl& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PEmpl& default_instance();

  void Swap(PEmpl* other);

  // implements Message ----------------------------------------------

  inline PEmpl* New() const { return New(NULL); }

  PEmpl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PEmpl& from);
  void MergeFrom(const PEmpl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PEmpl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ID = 1;
  bool has_id() const;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required string DrName = 2;
  bool has_drname() const;
  void clear_drname();
  static const int kDrNameFieldNumber = 2;
  const ::std::string& drname() const;
  void set_drname(const ::std::string& value);
  void set_drname(const char* value);
  void set_drname(const char* value, size_t size);
  ::std::string* mutable_drname();
  ::std::string* release_drname();
  void set_allocated_drname(::std::string* drname);

  // optional string User = 3;
  bool has_user() const;
  void clear_user();
  static const int kUserFieldNumber = 3;
  const ::std::string& user() const;
  void set_user(const ::std::string& value);
  void set_user(const char* value);
  void set_user(const char* value, size_t size);
  ::std::string* mutable_user();
  ::std::string* release_user();
  void set_allocated_user(::std::string* user);

  // optional string Email = 4;
  bool has_email() const;
  void clear_email();
  static const int kEmailFieldNumber = 4;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // optional string Pass = 5;
  bool has_pass() const;
  void clear_pass();
  static const int kPassFieldNumber = 5;
  const ::std::string& pass() const;
  void set_pass(const ::std::string& value);
  void set_pass(const char* value);
  void set_pass(const char* value, size_t size);
  ::std::string* mutable_pass();
  ::std::string* release_pass();
  void set_allocated_pass(::std::string* pass);

  // optional string License = 6;
  bool has_license() const;
  void clear_license();
  static const int kLicenseFieldNumber = 6;
  const ::std::string& license() const;
  void set_license(const ::std::string& value);
  void set_license(const char* value);
  void set_license(const char* value, size_t size);
  ::std::string* mutable_license();
  ::std::string* release_license();
  void set_allocated_license(::std::string* license);

  // optional string Country = 7;
  bool has_country() const;
  void clear_country();
  static const int kCountryFieldNumber = 7;
  const ::std::string& country() const;
  void set_country(const ::std::string& value);
  void set_country(const char* value);
  void set_country(const char* value, size_t size);
  ::std::string* mutable_country();
  ::std::string* release_country();
  void set_allocated_country(::std::string* country);

  // optional bytes Sign = 8;
  bool has_sign() const;
  void clear_sign();
  static const int kSignFieldNumber = 8;
  const ::std::string& sign() const;
  void set_sign(const ::std::string& value);
  void set_sign(const char* value);
  void set_sign(const void* value, size_t size);
  ::std::string* mutable_sign();
  ::std::string* release_sign();
  void set_allocated_sign(::std::string* sign);

  // optional int32 CID = 9;
  bool has_cid() const;
  void clear_cid();
  static const int kCIDFieldNumber = 9;
  ::google::protobuf::int32 cid() const;
  void set_cid(::google::protobuf::int32 value);

  // optional int32 Cycle = 10;
  bool has_cycle() const;
  void clear_cycle();
  static const int kCycleFieldNumber = 10;
  ::google::protobuf::int32 cycle() const;
  void set_cycle(::google::protobuf::int32 value);

  // optional int32 h_exc = 11;
  bool has_h_exc() const;
  void clear_h_exc();
  static const int kHExcFieldNumber = 11;
  ::google::protobuf::int32 h_exc() const;
  void set_h_exc(::google::protobuf::int32 value);

  // optional int32 TZ = 12;
  bool has_tz() const;
  void clear_tz();
  static const int kTZFieldNumber = 12;
  ::google::protobuf::int32 tz() const;
  void set_tz(::google::protobuf::int32 value);

  // optional string haddr = 13;
  bool has_haddr() const;
  void clear_haddr();
  static const int kHaddrFieldNumber = 13;
  const ::std::string& haddr() const;
  void set_haddr(const ::std::string& value);
  void set_haddr(const char* value);
  void set_haddr(const char* value, size_t size);
  ::std::string* mutable_haddr();
  ::std::string* release_haddr();
  void set_allocated_haddr(::std::string* haddr);

  // optional int32 superv = 14;
  bool has_superv() const;
  void clear_superv();
  static const int kSupervFieldNumber = 14;
  ::google::protobuf::int32 superv() const;
  void set_superv(::google::protobuf::int32 value);

  // optional string State = 15;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 15;
  const ::std::string& state() const;
  void set_state(const ::std::string& value);
  void set_state(const char* value);
  void set_state(const char* value, size_t size);
  ::std::string* mutable_state();
  ::std::string* release_state();
  void set_allocated_state(::std::string* state);

  // optional string OrgName = 16;
  bool has_orgname() const;
  void clear_orgname();
  static const int kOrgNameFieldNumber = 16;
  const ::std::string& orgname() const;
  void set_orgname(const ::std::string& value);
  void set_orgname(const char* value);
  void set_orgname(const char* value, size_t size);
  ::std::string* mutable_orgname();
  ::std::string* release_orgname();
  void set_allocated_orgname(::std::string* orgname);

  // optional string OrgAddr = 17;
  bool has_orgaddr() const;
  void clear_orgaddr();
  static const int kOrgAddrFieldNumber = 17;
  const ::std::string& orgaddr() const;
  void set_orgaddr(const ::std::string& value);
  void set_orgaddr(const char* value);
  void set_orgaddr(const char* value, size_t size);
  ::std::string* mutable_orgaddr();
  ::std::string* release_orgaddr();
  void set_allocated_orgaddr(::std::string* orgaddr);

  // optional string photo = 18;
  bool has_photo() const;
  void clear_photo();
  static const int kPhotoFieldNumber = 18;
  const ::std::string& photo() const;
  void set_photo(const ::std::string& value);
  void set_photo(const char* value);
  void set_photo(const char* value, size_t size);
  ::std::string* mutable_photo();
  ::std::string* release_photo();
  void set_allocated_photo(::std::string* photo);

  // @@protoc_insertion_point(class_scope:udorx_pbf.PEmpl)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_drname();
  inline void clear_has_drname();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_pass();
  inline void clear_has_pass();
  inline void set_has_license();
  inline void clear_has_license();
  inline void set_has_country();
  inline void clear_has_country();
  inline void set_has_sign();
  inline void clear_has_sign();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_cycle();
  inline void clear_has_cycle();
  inline void set_has_h_exc();
  inline void clear_has_h_exc();
  inline void set_has_tz();
  inline void clear_has_tz();
  inline void set_has_haddr();
  inline void clear_has_haddr();
  inline void set_has_superv();
  inline void clear_has_superv();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_orgname();
  inline void clear_has_orgname();
  inline void set_has_orgaddr();
  inline void clear_has_orgaddr();
  inline void set_has_photo();
  inline void clear_has_photo();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr drname_;
  ::google::protobuf::internal::ArenaStringPtr user_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr pass_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 cid_;
  ::google::protobuf::internal::ArenaStringPtr license_;
  ::google::protobuf::internal::ArenaStringPtr country_;
  ::google::protobuf::internal::ArenaStringPtr sign_;
  ::google::protobuf::int32 cycle_;
  ::google::protobuf::int32 h_exc_;
  ::google::protobuf::internal::ArenaStringPtr haddr_;
  ::google::protobuf::int32 tz_;
  ::google::protobuf::int32 superv_;
  ::google::protobuf::internal::ArenaStringPtr state_;
  ::google::protobuf::internal::ArenaStringPtr orgname_;
  ::google::protobuf::internal::ArenaStringPtr orgaddr_;
  ::google::protobuf::internal::ArenaStringPtr photo_;
  friend void  protobuf_AddDesc_udorx_5fcommon_2eproto();
  friend void protobuf_AssignDesc_udorx_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_udorx_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static PEmpl* default_instance_;
};
// -------------------------------------------------------------------

class PRegister : public ::google::protobuf::Message {
 public:
  PRegister();
  virtual ~PRegister();

  PRegister(const PRegister& from);

  inline PRegister& operator=(const PRegister& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PRegister& default_instance();

  void Swap(PRegister* other);

  // implements Message ----------------------------------------------

  inline PRegister* New() const { return New(NULL); }

  PRegister* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PRegister& from);
  void MergeFrom(const PRegister& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PRegister* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string user = 1;
  bool has_user() const;
  void clear_user();
  static const int kUserFieldNumber = 1;
  const ::std::string& user() const;
  void set_user(const ::std::string& value);
  void set_user(const char* value);
  void set_user(const char* value, size_t size);
  ::std::string* mutable_user();
  ::std::string* release_user();
  void set_allocated_user(::std::string* user);

  // required string pass = 2;
  bool has_pass() const;
  void clear_pass();
  static const int kPassFieldNumber = 2;
  const ::std::string& pass() const;
  void set_pass(const ::std::string& value);
  void set_pass(const char* value);
  void set_pass(const char* value, size_t size);
  ::std::string* mutable_pass();
  ::std::string* release_pass();
  void set_allocated_pass(::std::string* pass);

  // required string fname = 3;
  bool has_fname() const;
  void clear_fname();
  static const int kFnameFieldNumber = 3;
  const ::std::string& fname() const;
  void set_fname(const ::std::string& value);
  void set_fname(const char* value);
  void set_fname(const char* value, size_t size);
  ::std::string* mutable_fname();
  ::std::string* release_fname();
  void set_allocated_fname(::std::string* fname);

  // required string email = 4;
  bool has_email() const;
  void clear_email();
  static const int kEmailFieldNumber = 4;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // @@protoc_insertion_point(class_scope:udorx_pbf.PRegister)
 private:
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_pass();
  inline void clear_has_pass();
  inline void set_has_fname();
  inline void clear_has_fname();
  inline void set_has_email();
  inline void clear_has_email();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_;
  ::google::protobuf::internal::ArenaStringPtr pass_;
  ::google::protobuf::internal::ArenaStringPtr fname_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  friend void  protobuf_AddDesc_udorx_5fcommon_2eproto();
  friend void protobuf_AssignDesc_udorx_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_udorx_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static PRegister* default_instance_;
};
// -------------------------------------------------------------------

class CommPacket : public ::google::protobuf::Message {
 public:
  CommPacket();
  virtual ~CommPacket();

  CommPacket(const CommPacket& from);

  inline CommPacket& operator=(const CommPacket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommPacket& default_instance();

  void Swap(CommPacket* other);

  // implements Message ----------------------------------------------

  inline CommPacket* New() const { return New(NULL); }

  CommPacket* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CommPacket& from);
  void MergeFrom(const CommPacket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CommPacket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 req = 1;
  bool has_req() const;
  void clear_req();
  static const int kReqFieldNumber = 1;
  ::google::protobuf::int32 req() const;
  void set_req(::google::protobuf::int32 value);

  // required sint32 rID = 2;
  bool has_rid() const;
  void clear_rid();
  static const int kRIDFieldNumber = 2;
  ::google::protobuf::int32 rid() const;
  void set_rid(::google::protobuf::int32 value);

  // required sint32 cID = 3;
  bool has_cid() const;
  void clear_cid();
  static const int kCIDFieldNumber = 3;
  ::google::protobuf::int32 cid() const;
  void set_cid(::google::protobuf::int32 value);

  // required string user = 4;
  bool has_user() const;
  void clear_user();
  static const int kUserFieldNumber = 4;
  const ::std::string& user() const;
  void set_user(const ::std::string& value);
  void set_user(const char* value);
  void set_user(const char* value, size_t size);
  ::std::string* mutable_user();
  ::std::string* release_user();
  void set_allocated_user(::std::string* user);

  // required bytes payload = 5;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 5;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:udorx_pbf.CommPacket)
 private:
  inline void set_has_req();
  inline void clear_has_req();
  inline void set_has_rid();
  inline void clear_has_rid();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_payload();
  inline void clear_has_payload();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 req_;
  ::google::protobuf::int32 rid_;
  ::google::protobuf::internal::ArenaStringPtr user_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  ::google::protobuf::int32 cid_;
  friend void  protobuf_AddDesc_udorx_5fcommon_2eproto();
  friend void protobuf_AssignDesc_udorx_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_udorx_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static CommPacket* default_instance_;
};
// -------------------------------------------------------------------

class PMsg : public ::google::protobuf::Message {
 public:
  PMsg();
  virtual ~PMsg();

  PMsg(const PMsg& from);

  inline PMsg& operator=(const PMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PMsg& default_instance();

  void Swap(PMsg* other);

  // implements Message ----------------------------------------------

  inline PMsg* New() const { return New(NULL); }

  PMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PMsg& from);
  void MergeFrom(const PMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string mid = 1;
  bool has_mid() const;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  const ::std::string& mid() const;
  void set_mid(const ::std::string& value);
  void set_mid(const char* value);
  void set_mid(const char* value, size_t size);
  ::std::string* mutable_mid();
  ::std::string* release_mid();
  void set_allocated_mid(::std::string* mid);

  // required string sN = 2;
  bool has_sn() const;
  void clear_sn();
  static const int kSNFieldNumber = 2;
  const ::std::string& sn() const;
  void set_sn(const ::std::string& value);
  void set_sn(const char* value);
  void set_sn(const char* value, size_t size);
  ::std::string* mutable_sn();
  ::std::string* release_sn();
  void set_allocated_sn(::std::string* sn);

  // required int32 sCID = 3;
  bool has_scid() const;
  void clear_scid();
  static const int kSCIDFieldNumber = 3;
  ::google::protobuf::int32 scid() const;
  void set_scid(::google::protobuf::int32 value);

  // required int32 dDID = 4;
  bool has_ddid() const;
  void clear_ddid();
  static const int kDDIDFieldNumber = 4;
  ::google::protobuf::int32 ddid() const;
  void set_ddid(::google::protobuf::int32 value);

  // required int32 dCID = 5;
  bool has_dcid() const;
  void clear_dcid();
  static const int kDCIDFieldNumber = 5;
  ::google::protobuf::int32 dcid() const;
  void set_dcid(::google::protobuf::int32 value);

  // required string dN = 6;
  bool has_dn() const;
  void clear_dn();
  static const int kDNFieldNumber = 6;
  const ::std::string& dn() const;
  void set_dn(const ::std::string& value);
  void set_dn(const char* value);
  void set_dn(const char* value, size_t size);
  ::std::string* mutable_dn();
  ::std::string* release_dn();
  void set_allocated_dn(::std::string* dn);

  // required string msg = 7;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 7;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // required int32 mT = 8;
  bool has_mt() const;
  void clear_mt();
  static const int kMTFieldNumber = 8;
  ::google::protobuf::int32 mt() const;
  void set_mt(::google::protobuf::int32 value);

  // repeated string media_files = 9;
  int media_files_size() const;
  void clear_media_files();
  static const int kMediaFilesFieldNumber = 9;
  const ::std::string& media_files(int index) const;
  ::std::string* mutable_media_files(int index);
  void set_media_files(int index, const ::std::string& value);
  void set_media_files(int index, const char* value);
  void set_media_files(int index, const char* value, size_t size);
  ::std::string* add_media_files();
  void add_media_files(const ::std::string& value);
  void add_media_files(const char* value);
  void add_media_files(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& media_files() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_media_files();

  // @@protoc_insertion_point(class_scope:udorx_pbf.PMsg)
 private:
  inline void set_has_mid();
  inline void clear_has_mid();
  inline void set_has_sn();
  inline void clear_has_sn();
  inline void set_has_scid();
  inline void clear_has_scid();
  inline void set_has_ddid();
  inline void clear_has_ddid();
  inline void set_has_dcid();
  inline void clear_has_dcid();
  inline void set_has_dn();
  inline void clear_has_dn();
  inline void set_has_msg();
  inline void clear_has_msg();
  inline void set_has_mt();
  inline void clear_has_mt();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr mid_;
  ::google::protobuf::internal::ArenaStringPtr sn_;
  ::google::protobuf::int32 scid_;
  ::google::protobuf::int32 ddid_;
  ::google::protobuf::internal::ArenaStringPtr dn_;
  ::google::protobuf::int32 dcid_;
  ::google::protobuf::int32 mt_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::RepeatedPtrField< ::std::string> media_files_;
  friend void  protobuf_AddDesc_udorx_5fcommon_2eproto();
  friend void protobuf_AssignDesc_udorx_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_udorx_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static PMsg* default_instance_;
};
// -------------------------------------------------------------------

class PMsgList : public ::google::protobuf::Message {
 public:
  PMsgList();
  virtual ~PMsgList();

  PMsgList(const PMsgList& from);

  inline PMsgList& operator=(const PMsgList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PMsgList& default_instance();

  void Swap(PMsgList* other);

  // implements Message ----------------------------------------------

  inline PMsgList* New() const { return New(NULL); }

  PMsgList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PMsgList& from);
  void MergeFrom(const PMsgList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PMsgList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .udorx_pbf.PMsg msgs = 1;
  int msgs_size() const;
  void clear_msgs();
  static const int kMsgsFieldNumber = 1;
  const ::udorx_pbf::PMsg& msgs(int index) const;
  ::udorx_pbf::PMsg* mutable_msgs(int index);
  ::udorx_pbf::PMsg* add_msgs();
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PMsg >*
      mutable_msgs();
  const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PMsg >&
      msgs() const;

  // @@protoc_insertion_point(class_scope:udorx_pbf.PMsgList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PMsg > msgs_;
  friend void  protobuf_AddDesc_udorx_5fcommon_2eproto();
  friend void protobuf_AssignDesc_udorx_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_udorx_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static PMsgList* default_instance_;
};
// -------------------------------------------------------------------

class SampledValue : public ::google::protobuf::Message {
 public:
  SampledValue();
  virtual ~SampledValue();

  SampledValue(const SampledValue& from);

  inline SampledValue& operator=(const SampledValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SampledValue& default_instance();

  void Swap(SampledValue* other);

  // implements Message ----------------------------------------------

  inline SampledValue* New() const { return New(NULL); }

  SampledValue* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SampledValue& from);
  void MergeFrom(const SampledValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SampledValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional string context = 2;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 2;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  void set_context(const char* value);
  void set_context(const char* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // optional string format = 3;
  bool has_format() const;
  void clear_format();
  static const int kFormatFieldNumber = 3;
  const ::std::string& format() const;
  void set_format(const ::std::string& value);
  void set_format(const char* value);
  void set_format(const char* value, size_t size);
  ::std::string* mutable_format();
  ::std::string* release_format();
  void set_allocated_format(::std::string* format);

  // optional string measurand = 4;
  bool has_measurand() const;
  void clear_measurand();
  static const int kMeasurandFieldNumber = 4;
  const ::std::string& measurand() const;
  void set_measurand(const ::std::string& value);
  void set_measurand(const char* value);
  void set_measurand(const char* value, size_t size);
  ::std::string* mutable_measurand();
  ::std::string* release_measurand();
  void set_allocated_measurand(::std::string* measurand);

  // optional string phase = 5;
  bool has_phase() const;
  void clear_phase();
  static const int kPhaseFieldNumber = 5;
  const ::std::string& phase() const;
  void set_phase(const ::std::string& value);
  void set_phase(const char* value);
  void set_phase(const char* value, size_t size);
  ::std::string* mutable_phase();
  ::std::string* release_phase();
  void set_allocated_phase(::std::string* phase);

  // optional string location = 6;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 6;
  const ::std::string& location() const;
  void set_location(const ::std::string& value);
  void set_location(const char* value);
  void set_location(const char* value, size_t size);
  ::std::string* mutable_location();
  ::std::string* release_location();
  void set_allocated_location(::std::string* location);

  // optional string unit = 7;
  bool has_unit() const;
  void clear_unit();
  static const int kUnitFieldNumber = 7;
  const ::std::string& unit() const;
  void set_unit(const ::std::string& value);
  void set_unit(const char* value);
  void set_unit(const char* value, size_t size);
  ::std::string* mutable_unit();
  ::std::string* release_unit();
  void set_allocated_unit(::std::string* unit);

  // @@protoc_insertion_point(class_scope:udorx_pbf.SampledValue)
 private:
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_context();
  inline void clear_has_context();
  inline void set_has_format();
  inline void clear_has_format();
  inline void set_has_measurand();
  inline void clear_has_measurand();
  inline void set_has_phase();
  inline void clear_has_phase();
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_unit();
  inline void clear_has_unit();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  ::google::protobuf::internal::ArenaStringPtr format_;
  ::google::protobuf::internal::ArenaStringPtr measurand_;
  ::google::protobuf::internal::ArenaStringPtr phase_;
  ::google::protobuf::internal::ArenaStringPtr location_;
  ::google::protobuf::internal::ArenaStringPtr unit_;
  friend void  protobuf_AddDesc_udorx_5fcommon_2eproto();
  friend void protobuf_AssignDesc_udorx_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_udorx_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static SampledValue* default_instance_;
};
// -------------------------------------------------------------------

class MeterValue : public ::google::protobuf::Message {
 public:
  MeterValue();
  virtual ~MeterValue();

  MeterValue(const MeterValue& from);

  inline MeterValue& operator=(const MeterValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MeterValue& default_instance();

  void Swap(MeterValue* other);

  // implements Message ----------------------------------------------

  inline MeterValue* New() const { return New(NULL); }

  MeterValue* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MeterValue& from);
  void MergeFrom(const MeterValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MeterValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // repeated .udorx_pbf.SampledValue sampledValue = 2;
  int sampledvalue_size() const;
  void clear_sampledvalue();
  static const int kSampledValueFieldNumber = 2;
  const ::udorx_pbf::SampledValue& sampledvalue(int index) const;
  ::udorx_pbf::SampledValue* mutable_sampledvalue(int index);
  ::udorx_pbf::SampledValue* add_sampledvalue();
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::SampledValue >*
      mutable_sampledvalue();
  const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::SampledValue >&
      sampledvalue() const;

  // @@protoc_insertion_point(class_scope:udorx_pbf.MeterValue)
 private:
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::SampledValue > sampledvalue_;
  friend void  protobuf_AddDesc_udorx_5fcommon_2eproto();
  friend void protobuf_AssignDesc_udorx_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_udorx_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static MeterValue* default_instance_;
};
// -------------------------------------------------------------------

class MeterValues : public ::google::protobuf::Message {
 public:
  MeterValues();
  virtual ~MeterValues();

  MeterValues(const MeterValues& from);

  inline MeterValues& operator=(const MeterValues& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MeterValues& default_instance();

  void Swap(MeterValues* other);

  // implements Message ----------------------------------------------

  inline MeterValues* New() const { return New(NULL); }

  MeterValues* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MeterValues& from);
  void MergeFrom(const MeterValues& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MeterValues* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .udorx_pbf.MeterValue transactionData = 1;
  int transactiondata_size() const;
  void clear_transactiondata();
  static const int kTransactionDataFieldNumber = 1;
  const ::udorx_pbf::MeterValue& transactiondata(int index) const;
  ::udorx_pbf::MeterValue* mutable_transactiondata(int index);
  ::udorx_pbf::MeterValue* add_transactiondata();
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::MeterValue >*
      mutable_transactiondata();
  const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::MeterValue >&
      transactiondata() const;

  // @@protoc_insertion_point(class_scope:udorx_pbf.MeterValues)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::MeterValue > transactiondata_;
  friend void  protobuf_AddDesc_udorx_5fcommon_2eproto();
  friend void protobuf_AssignDesc_udorx_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_udorx_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static MeterValues* default_instance_;
};
// -------------------------------------------------------------------

class TrData : public ::google::protobuf::Message {
 public:
  TrData();
  virtual ~TrData();

  TrData(const TrData& from);

  inline TrData& operator=(const TrData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrData& default_instance();

  void Swap(TrData* other);

  // implements Message ----------------------------------------------

  inline TrData* New() const { return New(NULL); }

  TrData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrData& from);
  void MergeFrom(const TrData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TrData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string sern = 1;
  bool has_sern() const;
  void clear_sern();
  static const int kSernFieldNumber = 1;
  const ::std::string& sern() const;
  void set_sern(const ::std::string& value);
  void set_sern(const char* value);
  void set_sern(const char* value, size_t size);
  ::std::string* mutable_sern();
  ::std::string* release_sern();
  void set_allocated_sern(::std::string* sern);

  // required int32 transId = 2;
  bool has_transid() const;
  void clear_transid();
  static const int kTransIdFieldNumber = 2;
  ::google::protobuf::int32 transid() const;
  void set_transid(::google::protobuf::int32 value);

  // required int32 connId = 3;
  bool has_connid() const;
  void clear_connid();
  static const int kConnIdFieldNumber = 3;
  ::google::protobuf::int32 connid() const;
  void set_connid(::google::protobuf::int32 value);

  // repeated .udorx_pbf.MeterValues mvalues = 4;
  int mvalues_size() const;
  void clear_mvalues();
  static const int kMvaluesFieldNumber = 4;
  const ::udorx_pbf::MeterValues& mvalues(int index) const;
  ::udorx_pbf::MeterValues* mutable_mvalues(int index);
  ::udorx_pbf::MeterValues* add_mvalues();
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::MeterValues >*
      mutable_mvalues();
  const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::MeterValues >&
      mvalues() const;

  // @@protoc_insertion_point(class_scope:udorx_pbf.TrData)
 private:
  inline void set_has_sern();
  inline void clear_has_sern();
  inline void set_has_transid();
  inline void clear_has_transid();
  inline void set_has_connid();
  inline void clear_has_connid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr sern_;
  ::google::protobuf::int32 transid_;
  ::google::protobuf::int32 connid_;
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::MeterValues > mvalues_;
  friend void  protobuf_AddDesc_udorx_5fcommon_2eproto();
  friend void protobuf_AssignDesc_udorx_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_udorx_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static TrData* default_instance_;
};
// -------------------------------------------------------------------

class TrDataList : public ::google::protobuf::Message {
 public:
  TrDataList();
  virtual ~TrDataList();

  TrDataList(const TrDataList& from);

  inline TrDataList& operator=(const TrDataList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrDataList& default_instance();

  void Swap(TrDataList* other);

  // implements Message ----------------------------------------------

  inline TrDataList* New() const { return New(NULL); }

  TrDataList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrDataList& from);
  void MergeFrom(const TrDataList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TrDataList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .udorx_pbf.TrData tdlist = 4;
  int tdlist_size() const;
  void clear_tdlist();
  static const int kTdlistFieldNumber = 4;
  const ::udorx_pbf::TrData& tdlist(int index) const;
  ::udorx_pbf::TrData* mutable_tdlist(int index);
  ::udorx_pbf::TrData* add_tdlist();
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::TrData >*
      mutable_tdlist();
  const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::TrData >&
      tdlist() const;

  // @@protoc_insertion_point(class_scope:udorx_pbf.TrDataList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::udorx_pbf::TrData > tdlist_;
  friend void  protobuf_AddDesc_udorx_5fcommon_2eproto();
  friend void protobuf_AssignDesc_udorx_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_udorx_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static TrDataList* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PCSIStatus

// required int64 ID = 1;
inline bool PCSIStatus::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PCSIStatus::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PCSIStatus::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PCSIStatus::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 PCSIStatus::id() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSIStatus.ID)
  return id_;
}
inline void PCSIStatus::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSIStatus.ID)
}

// required int32 status = 2;
inline bool PCSIStatus::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PCSIStatus::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PCSIStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PCSIStatus::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 PCSIStatus::status() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSIStatus.status)
  return status_;
}
inline void PCSIStatus::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSIStatus.status)
}

// required bytes ObjB = 3;
inline bool PCSIStatus::has_objb() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PCSIStatus::set_has_objb() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PCSIStatus::clear_has_objb() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PCSIStatus::clear_objb() {
  objb_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_objb();
}
inline const ::std::string& PCSIStatus::objb() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSIStatus.ObjB)
  return objb_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PCSIStatus::set_objb(const ::std::string& value) {
  set_has_objb();
  objb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSIStatus.ObjB)
}
inline void PCSIStatus::set_objb(const char* value) {
  set_has_objb();
  objb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PCSIStatus.ObjB)
}
inline void PCSIStatus::set_objb(const void* value, size_t size) {
  set_has_objb();
  objb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PCSIStatus.ObjB)
}
inline ::std::string* PCSIStatus::mutable_objb() {
  set_has_objb();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSIStatus.ObjB)
  return objb_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PCSIStatus::release_objb() {
  clear_has_objb();
  return objb_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PCSIStatus::set_allocated_objb(::std::string* objb) {
  if (objb != NULL) {
    set_has_objb();
  } else {
    clear_has_objb();
  }
  objb_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), objb);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PCSIStatus.ObjB)
}

// -------------------------------------------------------------------

// PCSItem

// required int64 ID = 1;
inline bool PCSItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PCSItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PCSItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PCSItem::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 PCSItem::id() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.ID)
  return id_;
}
inline void PCSItem::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.ID)
}

// required int32 type = 2;
inline bool PCSItem::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PCSItem::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PCSItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PCSItem::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 PCSItem::type() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.type)
  return type_;
}
inline void PCSItem::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.type)
}

// required string Caller = 3;
inline bool PCSItem::has_caller() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PCSItem::set_has_caller() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PCSItem::clear_has_caller() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PCSItem::clear_caller() {
  caller_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_caller();
}
inline const ::std::string& PCSItem::caller() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.Caller)
  return caller_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PCSItem::set_caller(const ::std::string& value) {
  set_has_caller();
  caller_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.Caller)
}
inline void PCSItem::set_caller(const char* value) {
  set_has_caller();
  caller_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PCSItem.Caller)
}
inline void PCSItem::set_caller(const char* value, size_t size) {
  set_has_caller();
  caller_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PCSItem.Caller)
}
inline ::std::string* PCSItem::mutable_caller() {
  set_has_caller();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSItem.Caller)
  return caller_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PCSItem::release_caller() {
  clear_has_caller();
  return caller_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PCSItem::set_allocated_caller(::std::string* caller) {
  if (caller != NULL) {
    set_has_caller();
  } else {
    clear_has_caller();
  }
  caller_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), caller);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PCSItem.Caller)
}

// optional string Param1 = 4;
inline bool PCSItem::has_param1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PCSItem::set_has_param1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PCSItem::clear_has_param1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PCSItem::clear_param1() {
  param1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_param1();
}
inline const ::std::string& PCSItem::param1() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.Param1)
  return param1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PCSItem::set_param1(const ::std::string& value) {
  set_has_param1();
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.Param1)
}
inline void PCSItem::set_param1(const char* value) {
  set_has_param1();
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PCSItem.Param1)
}
inline void PCSItem::set_param1(const char* value, size_t size) {
  set_has_param1();
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PCSItem.Param1)
}
inline ::std::string* PCSItem::mutable_param1() {
  set_has_param1();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSItem.Param1)
  return param1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PCSItem::release_param1() {
  clear_has_param1();
  return param1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PCSItem::set_allocated_param1(::std::string* param1) {
  if (param1 != NULL) {
    set_has_param1();
  } else {
    clear_has_param1();
  }
  param1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param1);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PCSItem.Param1)
}

// required string Reference = 5;
inline bool PCSItem::has_reference() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PCSItem::set_has_reference() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PCSItem::clear_has_reference() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PCSItem::clear_reference() {
  reference_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reference();
}
inline const ::std::string& PCSItem::reference() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.Reference)
  return reference_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PCSItem::set_reference(const ::std::string& value) {
  set_has_reference();
  reference_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.Reference)
}
inline void PCSItem::set_reference(const char* value) {
  set_has_reference();
  reference_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PCSItem.Reference)
}
inline void PCSItem::set_reference(const char* value, size_t size) {
  set_has_reference();
  reference_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PCSItem.Reference)
}
inline ::std::string* PCSItem::mutable_reference() {
  set_has_reference();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSItem.Reference)
  return reference_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PCSItem::release_reference() {
  clear_has_reference();
  return reference_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PCSItem::set_allocated_reference(::std::string* reference) {
  if (reference != NULL) {
    set_has_reference();
  } else {
    clear_has_reference();
  }
  reference_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PCSItem.Reference)
}

// required string SerialN = 6;
inline bool PCSItem::has_serialn() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PCSItem::set_has_serialn() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PCSItem::clear_has_serialn() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PCSItem::clear_serialn() {
  serialn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_serialn();
}
inline const ::std::string& PCSItem::serialn() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.SerialN)
  return serialn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PCSItem::set_serialn(const ::std::string& value) {
  set_has_serialn();
  serialn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.SerialN)
}
inline void PCSItem::set_serialn(const char* value) {
  set_has_serialn();
  serialn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PCSItem.SerialN)
}
inline void PCSItem::set_serialn(const char* value, size_t size) {
  set_has_serialn();
  serialn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PCSItem.SerialN)
}
inline ::std::string* PCSItem::mutable_serialn() {
  set_has_serialn();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSItem.SerialN)
  return serialn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PCSItem::release_serialn() {
  clear_has_serialn();
  return serialn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PCSItem::set_allocated_serialn(::std::string* serialn) {
  if (serialn != NULL) {
    set_has_serialn();
  } else {
    clear_has_serialn();
  }
  serialn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serialn);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PCSItem.SerialN)
}

// optional string Address = 7;
inline bool PCSItem::has_address() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PCSItem::set_has_address() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PCSItem::clear_has_address() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PCSItem::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address();
}
inline const ::std::string& PCSItem::address() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.Address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PCSItem::set_address(const ::std::string& value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.Address)
}
inline void PCSItem::set_address(const char* value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PCSItem.Address)
}
inline void PCSItem::set_address(const char* value, size_t size) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PCSItem.Address)
}
inline ::std::string* PCSItem::mutable_address() {
  set_has_address();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSItem.Address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PCSItem::release_address() {
  clear_has_address();
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PCSItem::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    set_has_address();
  } else {
    clear_has_address();
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PCSItem.Address)
}

// required string Instrs = 8;
inline bool PCSItem::has_instrs() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PCSItem::set_has_instrs() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PCSItem::clear_has_instrs() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PCSItem::clear_instrs() {
  instrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instrs();
}
inline const ::std::string& PCSItem::instrs() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.Instrs)
  return instrs_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PCSItem::set_instrs(const ::std::string& value) {
  set_has_instrs();
  instrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.Instrs)
}
inline void PCSItem::set_instrs(const char* value) {
  set_has_instrs();
  instrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PCSItem.Instrs)
}
inline void PCSItem::set_instrs(const char* value, size_t size) {
  set_has_instrs();
  instrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PCSItem.Instrs)
}
inline ::std::string* PCSItem::mutable_instrs() {
  set_has_instrs();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSItem.Instrs)
  return instrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PCSItem::release_instrs() {
  clear_has_instrs();
  return instrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PCSItem::set_allocated_instrs(::std::string* instrs) {
  if (instrs != NULL) {
    set_has_instrs();
  } else {
    clear_has_instrs();
  }
  instrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instrs);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PCSItem.Instrs)
}

// required int32 CertFlag = 9;
inline bool PCSItem::has_certflag() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PCSItem::set_has_certflag() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PCSItem::clear_has_certflag() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PCSItem::clear_certflag() {
  certflag_ = 0;
  clear_has_certflag();
}
inline ::google::protobuf::int32 PCSItem::certflag() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.CertFlag)
  return certflag_;
}
inline void PCSItem::set_certflag(::google::protobuf::int32 value) {
  set_has_certflag();
  certflag_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.CertFlag)
}

// optional int64 CreatedTS = 10;
inline bool PCSItem::has_createdts() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PCSItem::set_has_createdts() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PCSItem::clear_has_createdts() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PCSItem::clear_createdts() {
  createdts_ = GOOGLE_LONGLONG(0);
  clear_has_createdts();
}
inline ::google::protobuf::int64 PCSItem::createdts() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.CreatedTS)
  return createdts_;
}
inline void PCSItem::set_createdts(::google::protobuf::int64 value) {
  set_has_createdts();
  createdts_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.CreatedTS)
}

// optional int64 LastUpdtdTS = 11;
inline bool PCSItem::has_lastupdtdts() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PCSItem::set_has_lastupdtdts() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PCSItem::clear_has_lastupdtdts() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PCSItem::clear_lastupdtdts() {
  lastupdtdts_ = GOOGLE_LONGLONG(0);
  clear_has_lastupdtdts();
}
inline ::google::protobuf::int64 PCSItem::lastupdtdts() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.LastUpdtdTS)
  return lastupdtdts_;
}
inline void PCSItem::set_lastupdtdts(::google::protobuf::int64 value) {
  set_has_lastupdtdts();
  lastupdtdts_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.LastUpdtdTS)
}

// required int32 status = 12;
inline bool PCSItem::has_status() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PCSItem::set_has_status() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PCSItem::clear_has_status() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PCSItem::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 PCSItem::status() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.status)
  return status_;
}
inline void PCSItem::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.status)
}

// required int32 serviceGroup = 13;
inline bool PCSItem::has_servicegroup() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PCSItem::set_has_servicegroup() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PCSItem::clear_has_servicegroup() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PCSItem::clear_servicegroup() {
  servicegroup_ = 0;
  clear_has_servicegroup();
}
inline ::google::protobuf::int32 PCSItem::servicegroup() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.serviceGroup)
  return servicegroup_;
}
inline void PCSItem::set_servicegroup(::google::protobuf::int32 value) {
  set_has_servicegroup();
  servicegroup_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.serviceGroup)
}

// required int32 ClientID = 14;
inline bool PCSItem::has_clientid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PCSItem::set_has_clientid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PCSItem::clear_has_clientid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PCSItem::clear_clientid() {
  clientid_ = 0;
  clear_has_clientid();
}
inline ::google::protobuf::int32 PCSItem::clientid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.ClientID)
  return clientid_;
}
inline void PCSItem::set_clientid(::google::protobuf::int32 value) {
  set_has_clientid();
  clientid_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.ClientID)
}

// required float Lat = 15;
inline bool PCSItem::has_lat() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PCSItem::set_has_lat() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PCSItem::clear_has_lat() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PCSItem::clear_lat() {
  lat_ = 0;
  clear_has_lat();
}
inline float PCSItem::lat() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.Lat)
  return lat_;
}
inline void PCSItem::set_lat(float value) {
  set_has_lat();
  lat_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.Lat)
}

// required float Lon = 16;
inline bool PCSItem::has_lon() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PCSItem::set_has_lon() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PCSItem::clear_has_lon() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PCSItem::clear_lon() {
  lon_ = 0;
  clear_has_lon();
}
inline float PCSItem::lon() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.Lon)
  return lon_;
}
inline void PCSItem::set_lon(float value) {
  set_has_lon();
  lon_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.Lon)
}

// optional int32 ProfID = 17;
inline bool PCSItem::has_profid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PCSItem::set_has_profid() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PCSItem::clear_has_profid() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PCSItem::clear_profid() {
  profid_ = 0;
  clear_has_profid();
}
inline ::google::protobuf::int32 PCSItem::profid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.ProfID)
  return profid_;
}
inline void PCSItem::set_profid(::google::protobuf::int32 value) {
  set_has_profid();
  profid_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.ProfID)
}

// optional bytes ObjB = 18;
inline bool PCSItem::has_objb() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PCSItem::set_has_objb() {
  _has_bits_[0] |= 0x00020000u;
}
inline void PCSItem::clear_has_objb() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void PCSItem::clear_objb() {
  objb_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_objb();
}
inline const ::std::string& PCSItem::objb() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.ObjB)
  return objb_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PCSItem::set_objb(const ::std::string& value) {
  set_has_objb();
  objb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.ObjB)
}
inline void PCSItem::set_objb(const char* value) {
  set_has_objb();
  objb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PCSItem.ObjB)
}
inline void PCSItem::set_objb(const void* value, size_t size) {
  set_has_objb();
  objb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PCSItem.ObjB)
}
inline ::std::string* PCSItem::mutable_objb() {
  set_has_objb();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSItem.ObjB)
  return objb_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PCSItem::release_objb() {
  clear_has_objb();
  return objb_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PCSItem::set_allocated_objb(::std::string* objb) {
  if (objb != NULL) {
    set_has_objb();
  } else {
    clear_has_objb();
  }
  objb_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), objb);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PCSItem.ObjB)
}

// optional string IPAddr = 19;
inline bool PCSItem::has_ipaddr() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void PCSItem::set_has_ipaddr() {
  _has_bits_[0] |= 0x00040000u;
}
inline void PCSItem::clear_has_ipaddr() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void PCSItem::clear_ipaddr() {
  ipaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ipaddr();
}
inline const ::std::string& PCSItem::ipaddr() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.IPAddr)
  return ipaddr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PCSItem::set_ipaddr(const ::std::string& value) {
  set_has_ipaddr();
  ipaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.IPAddr)
}
inline void PCSItem::set_ipaddr(const char* value) {
  set_has_ipaddr();
  ipaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PCSItem.IPAddr)
}
inline void PCSItem::set_ipaddr(const char* value, size_t size) {
  set_has_ipaddr();
  ipaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PCSItem.IPAddr)
}
inline ::std::string* PCSItem::mutable_ipaddr() {
  set_has_ipaddr();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSItem.IPAddr)
  return ipaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PCSItem::release_ipaddr() {
  clear_has_ipaddr();
  return ipaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PCSItem::set_allocated_ipaddr(::std::string* ipaddr) {
  if (ipaddr != NULL) {
    set_has_ipaddr();
  } else {
    clear_has_ipaddr();
  }
  ipaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ipaddr);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PCSItem.IPAddr)
}

// optional string FWVer = 20;
inline bool PCSItem::has_fwver() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void PCSItem::set_has_fwver() {
  _has_bits_[0] |= 0x00080000u;
}
inline void PCSItem::clear_has_fwver() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void PCSItem::clear_fwver() {
  fwver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fwver();
}
inline const ::std::string& PCSItem::fwver() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.FWVer)
  return fwver_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PCSItem::set_fwver(const ::std::string& value) {
  set_has_fwver();
  fwver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.FWVer)
}
inline void PCSItem::set_fwver(const char* value) {
  set_has_fwver();
  fwver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PCSItem.FWVer)
}
inline void PCSItem::set_fwver(const char* value, size_t size) {
  set_has_fwver();
  fwver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PCSItem.FWVer)
}
inline ::std::string* PCSItem::mutable_fwver() {
  set_has_fwver();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSItem.FWVer)
  return fwver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PCSItem::release_fwver() {
  clear_has_fwver();
  return fwver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PCSItem::set_allocated_fwver(::std::string* fwver) {
  if (fwver != NULL) {
    set_has_fwver();
  } else {
    clear_has_fwver();
  }
  fwver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fwver);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PCSItem.FWVer)
}

// optional int32 tz = 21;
inline bool PCSItem::has_tz() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void PCSItem::set_has_tz() {
  _has_bits_[0] |= 0x00100000u;
}
inline void PCSItem::clear_has_tz() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void PCSItem::clear_tz() {
  tz_ = 0;
  clear_has_tz();
}
inline ::google::protobuf::int32 PCSItem::tz() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.tz)
  return tz_;
}
inline void PCSItem::set_tz(::google::protobuf::int32 value) {
  set_has_tz();
  tz_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.tz)
}

// optional int32 dls = 22;
inline bool PCSItem::has_dls() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void PCSItem::set_has_dls() {
  _has_bits_[0] |= 0x00200000u;
}
inline void PCSItem::clear_has_dls() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void PCSItem::clear_dls() {
  dls_ = 0;
  clear_has_dls();
}
inline ::google::protobuf::int32 PCSItem::dls() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.dls)
  return dls_;
}
inline void PCSItem::set_dls(::google::protobuf::int32 value) {
  set_has_dls();
  dls_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.dls)
}

// -------------------------------------------------------------------

// PCSList

// repeated .udorx_pbf.PCSItem cs_items = 1;
inline int PCSList::cs_items_size() const {
  return cs_items_.size();
}
inline void PCSList::clear_cs_items() {
  cs_items_.Clear();
}
inline const ::udorx_pbf::PCSItem& PCSList::cs_items(int index) const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSList.cs_items)
  return cs_items_.Get(index);
}
inline ::udorx_pbf::PCSItem* PCSList::mutable_cs_items(int index) {
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSList.cs_items)
  return cs_items_.Mutable(index);
}
inline ::udorx_pbf::PCSItem* PCSList::add_cs_items() {
  // @@protoc_insertion_point(field_add:udorx_pbf.PCSList.cs_items)
  return cs_items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PCSItem >*
PCSList::mutable_cs_items() {
  // @@protoc_insertion_point(field_mutable_list:udorx_pbf.PCSList.cs_items)
  return &cs_items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PCSItem >&
PCSList::cs_items() const {
  // @@protoc_insertion_point(field_list:udorx_pbf.PCSList.cs_items)
  return cs_items_;
}

// -------------------------------------------------------------------

// PCSIStatusList

// repeated .udorx_pbf.PCSIStatus cs_sts_items = 1;
inline int PCSIStatusList::cs_sts_items_size() const {
  return cs_sts_items_.size();
}
inline void PCSIStatusList::clear_cs_sts_items() {
  cs_sts_items_.Clear();
}
inline const ::udorx_pbf::PCSIStatus& PCSIStatusList::cs_sts_items(int index) const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSIStatusList.cs_sts_items)
  return cs_sts_items_.Get(index);
}
inline ::udorx_pbf::PCSIStatus* PCSIStatusList::mutable_cs_sts_items(int index) {
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSIStatusList.cs_sts_items)
  return cs_sts_items_.Mutable(index);
}
inline ::udorx_pbf::PCSIStatus* PCSIStatusList::add_cs_sts_items() {
  // @@protoc_insertion_point(field_add:udorx_pbf.PCSIStatusList.cs_sts_items)
  return cs_sts_items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PCSIStatus >*
PCSIStatusList::mutable_cs_sts_items() {
  // @@protoc_insertion_point(field_mutable_list:udorx_pbf.PCSIStatusList.cs_sts_items)
  return &cs_sts_items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PCSIStatus >&
PCSIStatusList::cs_sts_items() const {
  // @@protoc_insertion_point(field_list:udorx_pbf.PCSIStatusList.cs_sts_items)
  return cs_sts_items_;
}

// -------------------------------------------------------------------

// PConf

// required int32 utcOff = 1;
inline bool PConf::has_utcoff() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PConf::set_has_utcoff() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PConf::clear_has_utcoff() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PConf::clear_utcoff() {
  utcoff_ = 0;
  clear_has_utcoff();
}
inline ::google::protobuf::int32 PConf::utcoff() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PConf.utcOff)
  return utcoff_;
}
inline void PConf::set_utcoff(::google::protobuf::int32 value) {
  set_has_utcoff();
  utcoff_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PConf.utcOff)
}

// required int32 dls = 2;
inline bool PConf::has_dls() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PConf::set_has_dls() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PConf::clear_has_dls() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PConf::clear_dls() {
  dls_ = 0;
  clear_has_dls();
}
inline ::google::protobuf::int32 PConf::dls() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PConf.dls)
  return dls_;
}
inline void PConf::set_dls(::google::protobuf::int32 value) {
  set_has_dls();
  dls_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PConf.dls)
}

// optional int32 param1 = 3;
inline bool PConf::has_param1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PConf::set_has_param1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PConf::clear_has_param1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PConf::clear_param1() {
  param1_ = 0;
  clear_has_param1();
}
inline ::google::protobuf::int32 PConf::param1() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PConf.param1)
  return param1_;
}
inline void PConf::set_param1(::google::protobuf::int32 value) {
  set_has_param1();
  param1_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PConf.param1)
}

// optional int32 param2 = 4;
inline bool PConf::has_param2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PConf::set_has_param2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PConf::clear_has_param2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PConf::clear_param2() {
  param2_ = 0;
  clear_has_param2();
}
inline ::google::protobuf::int32 PConf::param2() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PConf.param2)
  return param2_;
}
inline void PConf::set_param2(::google::protobuf::int32 value) {
  set_has_param2();
  param2_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PConf.param2)
}

// optional string param3 = 5;
inline bool PConf::has_param3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PConf::set_has_param3() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PConf::clear_has_param3() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PConf::clear_param3() {
  param3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_param3();
}
inline const ::std::string& PConf::param3() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PConf.param3)
  return param3_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PConf::set_param3(const ::std::string& value) {
  set_has_param3();
  param3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PConf.param3)
}
inline void PConf::set_param3(const char* value) {
  set_has_param3();
  param3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PConf.param3)
}
inline void PConf::set_param3(const char* value, size_t size) {
  set_has_param3();
  param3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PConf.param3)
}
inline ::std::string* PConf::mutable_param3() {
  set_has_param3();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PConf.param3)
  return param3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PConf::release_param3() {
  clear_has_param3();
  return param3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PConf::set_allocated_param3(::std::string* param3) {
  if (param3 != NULL) {
    set_has_param3();
  } else {
    clear_has_param3();
  }
  param3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param3);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PConf.param3)
}

// optional string param4 = 6;
inline bool PConf::has_param4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PConf::set_has_param4() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PConf::clear_has_param4() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PConf::clear_param4() {
  param4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_param4();
}
inline const ::std::string& PConf::param4() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PConf.param4)
  return param4_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PConf::set_param4(const ::std::string& value) {
  set_has_param4();
  param4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PConf.param4)
}
inline void PConf::set_param4(const char* value) {
  set_has_param4();
  param4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PConf.param4)
}
inline void PConf::set_param4(const char* value, size_t size) {
  set_has_param4();
  param4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PConf.param4)
}
inline ::std::string* PConf::mutable_param4() {
  set_has_param4();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PConf.param4)
  return param4_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PConf::release_param4() {
  clear_has_param4();
  return param4_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PConf::set_allocated_param4(::std::string* param4) {
  if (param4 != NULL) {
    set_has_param4();
  } else {
    clear_has_param4();
  }
  param4_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param4);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PConf.param4)
}

// -------------------------------------------------------------------

// PEmpl

// required int32 ID = 1;
inline bool PEmpl::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PEmpl::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PEmpl::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PEmpl::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 PEmpl::id() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.ID)
  return id_;
}
inline void PEmpl::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.ID)
}

// required string DrName = 2;
inline bool PEmpl::has_drname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PEmpl::set_has_drname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PEmpl::clear_has_drname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PEmpl::clear_drname() {
  drname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_drname();
}
inline const ::std::string& PEmpl::drname() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.DrName)
  return drname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_drname(const ::std::string& value) {
  set_has_drname();
  drname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.DrName)
}
inline void PEmpl::set_drname(const char* value) {
  set_has_drname();
  drname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.DrName)
}
inline void PEmpl::set_drname(const char* value, size_t size) {
  set_has_drname();
  drname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.DrName)
}
inline ::std::string* PEmpl::mutable_drname() {
  set_has_drname();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.DrName)
  return drname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmpl::release_drname() {
  clear_has_drname();
  return drname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_allocated_drname(::std::string* drname) {
  if (drname != NULL) {
    set_has_drname();
  } else {
    clear_has_drname();
  }
  drname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), drname);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.DrName)
}

// optional string User = 3;
inline bool PEmpl::has_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PEmpl::set_has_user() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PEmpl::clear_has_user() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PEmpl::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user();
}
inline const ::std::string& PEmpl::user() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.User)
  return user_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_user(const ::std::string& value) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.User)
}
inline void PEmpl::set_user(const char* value) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.User)
}
inline void PEmpl::set_user(const char* value, size_t size) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.User)
}
inline ::std::string* PEmpl::mutable_user() {
  set_has_user();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.User)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmpl::release_user() {
  clear_has_user();
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_allocated_user(::std::string* user) {
  if (user != NULL) {
    set_has_user();
  } else {
    clear_has_user();
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.User)
}

// optional string Email = 4;
inline bool PEmpl::has_email() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PEmpl::set_has_email() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PEmpl::clear_has_email() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PEmpl::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
inline const ::std::string& PEmpl::email() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.Email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.Email)
}
inline void PEmpl::set_email(const char* value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.Email)
}
inline void PEmpl::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.Email)
}
inline ::std::string* PEmpl::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.Email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmpl::release_email() {
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.Email)
}

// optional string Pass = 5;
inline bool PEmpl::has_pass() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PEmpl::set_has_pass() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PEmpl::clear_has_pass() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PEmpl::clear_pass() {
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pass();
}
inline const ::std::string& PEmpl::pass() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.Pass)
  return pass_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_pass(const ::std::string& value) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.Pass)
}
inline void PEmpl::set_pass(const char* value) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.Pass)
}
inline void PEmpl::set_pass(const char* value, size_t size) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.Pass)
}
inline ::std::string* PEmpl::mutable_pass() {
  set_has_pass();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.Pass)
  return pass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmpl::release_pass() {
  clear_has_pass();
  return pass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_allocated_pass(::std::string* pass) {
  if (pass != NULL) {
    set_has_pass();
  } else {
    clear_has_pass();
  }
  pass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pass);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.Pass)
}

// optional string License = 6;
inline bool PEmpl::has_license() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PEmpl::set_has_license() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PEmpl::clear_has_license() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PEmpl::clear_license() {
  license_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_license();
}
inline const ::std::string& PEmpl::license() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.License)
  return license_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_license(const ::std::string& value) {
  set_has_license();
  license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.License)
}
inline void PEmpl::set_license(const char* value) {
  set_has_license();
  license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.License)
}
inline void PEmpl::set_license(const char* value, size_t size) {
  set_has_license();
  license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.License)
}
inline ::std::string* PEmpl::mutable_license() {
  set_has_license();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.License)
  return license_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmpl::release_license() {
  clear_has_license();
  return license_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_allocated_license(::std::string* license) {
  if (license != NULL) {
    set_has_license();
  } else {
    clear_has_license();
  }
  license_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), license);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.License)
}

// optional string Country = 7;
inline bool PEmpl::has_country() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PEmpl::set_has_country() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PEmpl::clear_has_country() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PEmpl::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country();
}
inline const ::std::string& PEmpl::country() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.Country)
  return country_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_country(const ::std::string& value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.Country)
}
inline void PEmpl::set_country(const char* value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.Country)
}
inline void PEmpl::set_country(const char* value, size_t size) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.Country)
}
inline ::std::string* PEmpl::mutable_country() {
  set_has_country();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.Country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmpl::release_country() {
  clear_has_country();
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    set_has_country();
  } else {
    clear_has_country();
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.Country)
}

// optional bytes Sign = 8;
inline bool PEmpl::has_sign() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PEmpl::set_has_sign() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PEmpl::clear_has_sign() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PEmpl::clear_sign() {
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sign();
}
inline const ::std::string& PEmpl::sign() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.Sign)
  return sign_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_sign(const ::std::string& value) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.Sign)
}
inline void PEmpl::set_sign(const char* value) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.Sign)
}
inline void PEmpl::set_sign(const void* value, size_t size) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.Sign)
}
inline ::std::string* PEmpl::mutable_sign() {
  set_has_sign();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.Sign)
  return sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmpl::release_sign() {
  clear_has_sign();
  return sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_allocated_sign(::std::string* sign) {
  if (sign != NULL) {
    set_has_sign();
  } else {
    clear_has_sign();
  }
  sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.Sign)
}

// optional int32 CID = 9;
inline bool PEmpl::has_cid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PEmpl::set_has_cid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PEmpl::clear_has_cid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PEmpl::clear_cid() {
  cid_ = 0;
  clear_has_cid();
}
inline ::google::protobuf::int32 PEmpl::cid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.CID)
  return cid_;
}
inline void PEmpl::set_cid(::google::protobuf::int32 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.CID)
}

// optional int32 Cycle = 10;
inline bool PEmpl::has_cycle() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PEmpl::set_has_cycle() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PEmpl::clear_has_cycle() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PEmpl::clear_cycle() {
  cycle_ = 0;
  clear_has_cycle();
}
inline ::google::protobuf::int32 PEmpl::cycle() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.Cycle)
  return cycle_;
}
inline void PEmpl::set_cycle(::google::protobuf::int32 value) {
  set_has_cycle();
  cycle_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.Cycle)
}

// optional int32 h_exc = 11;
inline bool PEmpl::has_h_exc() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PEmpl::set_has_h_exc() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PEmpl::clear_has_h_exc() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PEmpl::clear_h_exc() {
  h_exc_ = 0;
  clear_has_h_exc();
}
inline ::google::protobuf::int32 PEmpl::h_exc() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.h_exc)
  return h_exc_;
}
inline void PEmpl::set_h_exc(::google::protobuf::int32 value) {
  set_has_h_exc();
  h_exc_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.h_exc)
}

// optional int32 TZ = 12;
inline bool PEmpl::has_tz() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PEmpl::set_has_tz() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PEmpl::clear_has_tz() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PEmpl::clear_tz() {
  tz_ = 0;
  clear_has_tz();
}
inline ::google::protobuf::int32 PEmpl::tz() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.TZ)
  return tz_;
}
inline void PEmpl::set_tz(::google::protobuf::int32 value) {
  set_has_tz();
  tz_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.TZ)
}

// optional string haddr = 13;
inline bool PEmpl::has_haddr() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PEmpl::set_has_haddr() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PEmpl::clear_has_haddr() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PEmpl::clear_haddr() {
  haddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_haddr();
}
inline const ::std::string& PEmpl::haddr() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.haddr)
  return haddr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_haddr(const ::std::string& value) {
  set_has_haddr();
  haddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.haddr)
}
inline void PEmpl::set_haddr(const char* value) {
  set_has_haddr();
  haddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.haddr)
}
inline void PEmpl::set_haddr(const char* value, size_t size) {
  set_has_haddr();
  haddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.haddr)
}
inline ::std::string* PEmpl::mutable_haddr() {
  set_has_haddr();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.haddr)
  return haddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmpl::release_haddr() {
  clear_has_haddr();
  return haddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_allocated_haddr(::std::string* haddr) {
  if (haddr != NULL) {
    set_has_haddr();
  } else {
    clear_has_haddr();
  }
  haddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), haddr);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.haddr)
}

// optional int32 superv = 14;
inline bool PEmpl::has_superv() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PEmpl::set_has_superv() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PEmpl::clear_has_superv() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PEmpl::clear_superv() {
  superv_ = 0;
  clear_has_superv();
}
inline ::google::protobuf::int32 PEmpl::superv() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.superv)
  return superv_;
}
inline void PEmpl::set_superv(::google::protobuf::int32 value) {
  set_has_superv();
  superv_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.superv)
}

// optional string State = 15;
inline bool PEmpl::has_state() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PEmpl::set_has_state() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PEmpl::clear_has_state() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PEmpl::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_state();
}
inline const ::std::string& PEmpl::state() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.State)
  return state_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_state(const ::std::string& value) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.State)
}
inline void PEmpl::set_state(const char* value) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.State)
}
inline void PEmpl::set_state(const char* value, size_t size) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.State)
}
inline ::std::string* PEmpl::mutable_state() {
  set_has_state();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmpl::release_state() {
  clear_has_state();
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_allocated_state(::std::string* state) {
  if (state != NULL) {
    set_has_state();
  } else {
    clear_has_state();
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.State)
}

// optional string OrgName = 16;
inline bool PEmpl::has_orgname() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PEmpl::set_has_orgname() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PEmpl::clear_has_orgname() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PEmpl::clear_orgname() {
  orgname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_orgname();
}
inline const ::std::string& PEmpl::orgname() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.OrgName)
  return orgname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_orgname(const ::std::string& value) {
  set_has_orgname();
  orgname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.OrgName)
}
inline void PEmpl::set_orgname(const char* value) {
  set_has_orgname();
  orgname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.OrgName)
}
inline void PEmpl::set_orgname(const char* value, size_t size) {
  set_has_orgname();
  orgname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.OrgName)
}
inline ::std::string* PEmpl::mutable_orgname() {
  set_has_orgname();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.OrgName)
  return orgname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmpl::release_orgname() {
  clear_has_orgname();
  return orgname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_allocated_orgname(::std::string* orgname) {
  if (orgname != NULL) {
    set_has_orgname();
  } else {
    clear_has_orgname();
  }
  orgname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orgname);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.OrgName)
}

// optional string OrgAddr = 17;
inline bool PEmpl::has_orgaddr() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PEmpl::set_has_orgaddr() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PEmpl::clear_has_orgaddr() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PEmpl::clear_orgaddr() {
  orgaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_orgaddr();
}
inline const ::std::string& PEmpl::orgaddr() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.OrgAddr)
  return orgaddr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_orgaddr(const ::std::string& value) {
  set_has_orgaddr();
  orgaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.OrgAddr)
}
inline void PEmpl::set_orgaddr(const char* value) {
  set_has_orgaddr();
  orgaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.OrgAddr)
}
inline void PEmpl::set_orgaddr(const char* value, size_t size) {
  set_has_orgaddr();
  orgaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.OrgAddr)
}
inline ::std::string* PEmpl::mutable_orgaddr() {
  set_has_orgaddr();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.OrgAddr)
  return orgaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmpl::release_orgaddr() {
  clear_has_orgaddr();
  return orgaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_allocated_orgaddr(::std::string* orgaddr) {
  if (orgaddr != NULL) {
    set_has_orgaddr();
  } else {
    clear_has_orgaddr();
  }
  orgaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orgaddr);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.OrgAddr)
}

// optional string photo = 18;
inline bool PEmpl::has_photo() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PEmpl::set_has_photo() {
  _has_bits_[0] |= 0x00020000u;
}
inline void PEmpl::clear_has_photo() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void PEmpl::clear_photo() {
  photo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_photo();
}
inline const ::std::string& PEmpl::photo() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.photo)
  return photo_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_photo(const ::std::string& value) {
  set_has_photo();
  photo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.photo)
}
inline void PEmpl::set_photo(const char* value) {
  set_has_photo();
  photo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.photo)
}
inline void PEmpl::set_photo(const char* value, size_t size) {
  set_has_photo();
  photo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.photo)
}
inline ::std::string* PEmpl::mutable_photo() {
  set_has_photo();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.photo)
  return photo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PEmpl::release_photo() {
  clear_has_photo();
  return photo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PEmpl::set_allocated_photo(::std::string* photo) {
  if (photo != NULL) {
    set_has_photo();
  } else {
    clear_has_photo();
  }
  photo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), photo);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.photo)
}

// -------------------------------------------------------------------

// PRegister

// required string user = 1;
inline bool PRegister::has_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PRegister::set_has_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PRegister::clear_has_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PRegister::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user();
}
inline const ::std::string& PRegister::user() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PRegister.user)
  return user_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PRegister::set_user(const ::std::string& value) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PRegister.user)
}
inline void PRegister::set_user(const char* value) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PRegister.user)
}
inline void PRegister::set_user(const char* value, size_t size) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PRegister.user)
}
inline ::std::string* PRegister::mutable_user() {
  set_has_user();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PRegister.user)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PRegister::release_user() {
  clear_has_user();
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PRegister::set_allocated_user(::std::string* user) {
  if (user != NULL) {
    set_has_user();
  } else {
    clear_has_user();
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PRegister.user)
}

// required string pass = 2;
inline bool PRegister::has_pass() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PRegister::set_has_pass() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PRegister::clear_has_pass() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PRegister::clear_pass() {
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pass();
}
inline const ::std::string& PRegister::pass() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PRegister.pass)
  return pass_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PRegister::set_pass(const ::std::string& value) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PRegister.pass)
}
inline void PRegister::set_pass(const char* value) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PRegister.pass)
}
inline void PRegister::set_pass(const char* value, size_t size) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PRegister.pass)
}
inline ::std::string* PRegister::mutable_pass() {
  set_has_pass();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PRegister.pass)
  return pass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PRegister::release_pass() {
  clear_has_pass();
  return pass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PRegister::set_allocated_pass(::std::string* pass) {
  if (pass != NULL) {
    set_has_pass();
  } else {
    clear_has_pass();
  }
  pass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pass);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PRegister.pass)
}

// required string fname = 3;
inline bool PRegister::has_fname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PRegister::set_has_fname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PRegister::clear_has_fname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PRegister::clear_fname() {
  fname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fname();
}
inline const ::std::string& PRegister::fname() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PRegister.fname)
  return fname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PRegister::set_fname(const ::std::string& value) {
  set_has_fname();
  fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PRegister.fname)
}
inline void PRegister::set_fname(const char* value) {
  set_has_fname();
  fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PRegister.fname)
}
inline void PRegister::set_fname(const char* value, size_t size) {
  set_has_fname();
  fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PRegister.fname)
}
inline ::std::string* PRegister::mutable_fname() {
  set_has_fname();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PRegister.fname)
  return fname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PRegister::release_fname() {
  clear_has_fname();
  return fname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PRegister::set_allocated_fname(::std::string* fname) {
  if (fname != NULL) {
    set_has_fname();
  } else {
    clear_has_fname();
  }
  fname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fname);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PRegister.fname)
}

// required string email = 4;
inline bool PRegister::has_email() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PRegister::set_has_email() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PRegister::clear_has_email() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PRegister::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
inline const ::std::string& PRegister::email() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PRegister.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PRegister::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PRegister.email)
}
inline void PRegister::set_email(const char* value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PRegister.email)
}
inline void PRegister::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PRegister.email)
}
inline ::std::string* PRegister::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PRegister.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PRegister::release_email() {
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PRegister::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PRegister.email)
}

// -------------------------------------------------------------------

// CommPacket

// required int32 req = 1;
inline bool CommPacket::has_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommPacket::set_has_req() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommPacket::clear_has_req() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommPacket::clear_req() {
  req_ = 0;
  clear_has_req();
}
inline ::google::protobuf::int32 CommPacket::req() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.CommPacket.req)
  return req_;
}
inline void CommPacket::set_req(::google::protobuf::int32 value) {
  set_has_req();
  req_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.CommPacket.req)
}

// required sint32 rID = 2;
inline bool CommPacket::has_rid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CommPacket::set_has_rid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CommPacket::clear_has_rid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CommPacket::clear_rid() {
  rid_ = 0;
  clear_has_rid();
}
inline ::google::protobuf::int32 CommPacket::rid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.CommPacket.rID)
  return rid_;
}
inline void CommPacket::set_rid(::google::protobuf::int32 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.CommPacket.rID)
}

// required sint32 cID = 3;
inline bool CommPacket::has_cid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CommPacket::set_has_cid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CommPacket::clear_has_cid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CommPacket::clear_cid() {
  cid_ = 0;
  clear_has_cid();
}
inline ::google::protobuf::int32 CommPacket::cid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.CommPacket.cID)
  return cid_;
}
inline void CommPacket::set_cid(::google::protobuf::int32 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.CommPacket.cID)
}

// required string user = 4;
inline bool CommPacket::has_user() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CommPacket::set_has_user() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CommPacket::clear_has_user() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CommPacket::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user();
}
inline const ::std::string& CommPacket::user() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.CommPacket.user)
  return user_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommPacket::set_user(const ::std::string& value) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.CommPacket.user)
}
inline void CommPacket::set_user(const char* value) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.CommPacket.user)
}
inline void CommPacket::set_user(const char* value, size_t size) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.CommPacket.user)
}
inline ::std::string* CommPacket::mutable_user() {
  set_has_user();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.CommPacket.user)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommPacket::release_user() {
  clear_has_user();
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommPacket::set_allocated_user(::std::string* user) {
  if (user != NULL) {
    set_has_user();
  } else {
    clear_has_user();
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.CommPacket.user)
}

// required bytes payload = 5;
inline bool CommPacket::has_payload() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CommPacket::set_has_payload() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CommPacket::clear_has_payload() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CommPacket::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_payload();
}
inline const ::std::string& CommPacket::payload() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.CommPacket.payload)
  return payload_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommPacket::set_payload(const ::std::string& value) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.CommPacket.payload)
}
inline void CommPacket::set_payload(const char* value) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.CommPacket.payload)
}
inline void CommPacket::set_payload(const void* value, size_t size) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.CommPacket.payload)
}
inline ::std::string* CommPacket::mutable_payload() {
  set_has_payload();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.CommPacket.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommPacket::release_payload() {
  clear_has_payload();
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommPacket::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    set_has_payload();
  } else {
    clear_has_payload();
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.CommPacket.payload)
}

// -------------------------------------------------------------------

// PMsg

// required string mid = 1;
inline bool PMsg::has_mid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PMsg::set_has_mid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PMsg::clear_has_mid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PMsg::clear_mid() {
  mid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mid();
}
inline const ::std::string& PMsg::mid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PMsg.mid)
  return mid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PMsg::set_mid(const ::std::string& value) {
  set_has_mid();
  mid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PMsg.mid)
}
inline void PMsg::set_mid(const char* value) {
  set_has_mid();
  mid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PMsg.mid)
}
inline void PMsg::set_mid(const char* value, size_t size) {
  set_has_mid();
  mid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PMsg.mid)
}
inline ::std::string* PMsg::mutable_mid() {
  set_has_mid();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PMsg.mid)
  return mid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PMsg::release_mid() {
  clear_has_mid();
  return mid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PMsg::set_allocated_mid(::std::string* mid) {
  if (mid != NULL) {
    set_has_mid();
  } else {
    clear_has_mid();
  }
  mid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mid);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PMsg.mid)
}

// required string sN = 2;
inline bool PMsg::has_sn() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PMsg::set_has_sn() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PMsg::clear_has_sn() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PMsg::clear_sn() {
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sn();
}
inline const ::std::string& PMsg::sn() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PMsg.sN)
  return sn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PMsg::set_sn(const ::std::string& value) {
  set_has_sn();
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PMsg.sN)
}
inline void PMsg::set_sn(const char* value) {
  set_has_sn();
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PMsg.sN)
}
inline void PMsg::set_sn(const char* value, size_t size) {
  set_has_sn();
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PMsg.sN)
}
inline ::std::string* PMsg::mutable_sn() {
  set_has_sn();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PMsg.sN)
  return sn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PMsg::release_sn() {
  clear_has_sn();
  return sn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PMsg::set_allocated_sn(::std::string* sn) {
  if (sn != NULL) {
    set_has_sn();
  } else {
    clear_has_sn();
  }
  sn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sn);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PMsg.sN)
}

// required int32 sCID = 3;
inline bool PMsg::has_scid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PMsg::set_has_scid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PMsg::clear_has_scid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PMsg::clear_scid() {
  scid_ = 0;
  clear_has_scid();
}
inline ::google::protobuf::int32 PMsg::scid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PMsg.sCID)
  return scid_;
}
inline void PMsg::set_scid(::google::protobuf::int32 value) {
  set_has_scid();
  scid_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PMsg.sCID)
}

// required int32 dDID = 4;
inline bool PMsg::has_ddid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PMsg::set_has_ddid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PMsg::clear_has_ddid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PMsg::clear_ddid() {
  ddid_ = 0;
  clear_has_ddid();
}
inline ::google::protobuf::int32 PMsg::ddid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PMsg.dDID)
  return ddid_;
}
inline void PMsg::set_ddid(::google::protobuf::int32 value) {
  set_has_ddid();
  ddid_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PMsg.dDID)
}

// required int32 dCID = 5;
inline bool PMsg::has_dcid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PMsg::set_has_dcid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PMsg::clear_has_dcid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PMsg::clear_dcid() {
  dcid_ = 0;
  clear_has_dcid();
}
inline ::google::protobuf::int32 PMsg::dcid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PMsg.dCID)
  return dcid_;
}
inline void PMsg::set_dcid(::google::protobuf::int32 value) {
  set_has_dcid();
  dcid_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PMsg.dCID)
}

// required string dN = 6;
inline bool PMsg::has_dn() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PMsg::set_has_dn() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PMsg::clear_has_dn() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PMsg::clear_dn() {
  dn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dn();
}
inline const ::std::string& PMsg::dn() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PMsg.dN)
  return dn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PMsg::set_dn(const ::std::string& value) {
  set_has_dn();
  dn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PMsg.dN)
}
inline void PMsg::set_dn(const char* value) {
  set_has_dn();
  dn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PMsg.dN)
}
inline void PMsg::set_dn(const char* value, size_t size) {
  set_has_dn();
  dn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PMsg.dN)
}
inline ::std::string* PMsg::mutable_dn() {
  set_has_dn();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PMsg.dN)
  return dn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PMsg::release_dn() {
  clear_has_dn();
  return dn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PMsg::set_allocated_dn(::std::string* dn) {
  if (dn != NULL) {
    set_has_dn();
  } else {
    clear_has_dn();
  }
  dn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dn);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PMsg.dN)
}

// required string msg = 7;
inline bool PMsg::has_msg() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PMsg::set_has_msg() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PMsg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PMsg::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& PMsg::msg() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PMsg.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PMsg::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PMsg.msg)
}
inline void PMsg::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PMsg.msg)
}
inline void PMsg::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PMsg.msg)
}
inline ::std::string* PMsg::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PMsg.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PMsg::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PMsg::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PMsg.msg)
}

// required int32 mT = 8;
inline bool PMsg::has_mt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PMsg::set_has_mt() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PMsg::clear_has_mt() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PMsg::clear_mt() {
  mt_ = 0;
  clear_has_mt();
}
inline ::google::protobuf::int32 PMsg::mt() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PMsg.mT)
  return mt_;
}
inline void PMsg::set_mt(::google::protobuf::int32 value) {
  set_has_mt();
  mt_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PMsg.mT)
}

// repeated string media_files = 9;
inline int PMsg::media_files_size() const {
  return media_files_.size();
}
inline void PMsg::clear_media_files() {
  media_files_.Clear();
}
inline const ::std::string& PMsg::media_files(int index) const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PMsg.media_files)
  return media_files_.Get(index);
}
inline ::std::string* PMsg::mutable_media_files(int index) {
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PMsg.media_files)
  return media_files_.Mutable(index);
}
inline void PMsg::set_media_files(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:udorx_pbf.PMsg.media_files)
  media_files_.Mutable(index)->assign(value);
}
inline void PMsg::set_media_files(int index, const char* value) {
  media_files_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PMsg.media_files)
}
inline void PMsg::set_media_files(int index, const char* value, size_t size) {
  media_files_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PMsg.media_files)
}
inline ::std::string* PMsg::add_media_files() {
  return media_files_.Add();
}
inline void PMsg::add_media_files(const ::std::string& value) {
  media_files_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:udorx_pbf.PMsg.media_files)
}
inline void PMsg::add_media_files(const char* value) {
  media_files_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:udorx_pbf.PMsg.media_files)
}
inline void PMsg::add_media_files(const char* value, size_t size) {
  media_files_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:udorx_pbf.PMsg.media_files)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PMsg::media_files() const {
  // @@protoc_insertion_point(field_list:udorx_pbf.PMsg.media_files)
  return media_files_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PMsg::mutable_media_files() {
  // @@protoc_insertion_point(field_mutable_list:udorx_pbf.PMsg.media_files)
  return &media_files_;
}

// -------------------------------------------------------------------

// PMsgList

// repeated .udorx_pbf.PMsg msgs = 1;
inline int PMsgList::msgs_size() const {
  return msgs_.size();
}
inline void PMsgList::clear_msgs() {
  msgs_.Clear();
}
inline const ::udorx_pbf::PMsg& PMsgList::msgs(int index) const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PMsgList.msgs)
  return msgs_.Get(index);
}
inline ::udorx_pbf::PMsg* PMsgList::mutable_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PMsgList.msgs)
  return msgs_.Mutable(index);
}
inline ::udorx_pbf::PMsg* PMsgList::add_msgs() {
  // @@protoc_insertion_point(field_add:udorx_pbf.PMsgList.msgs)
  return msgs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PMsg >*
PMsgList::mutable_msgs() {
  // @@protoc_insertion_point(field_mutable_list:udorx_pbf.PMsgList.msgs)
  return &msgs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PMsg >&
PMsgList::msgs() const {
  // @@protoc_insertion_point(field_list:udorx_pbf.PMsgList.msgs)
  return msgs_;
}

// -------------------------------------------------------------------

// SampledValue

// required string value = 1;
inline bool SampledValue::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SampledValue::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SampledValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SampledValue::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& SampledValue::value() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.SampledValue.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SampledValue::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.SampledValue.value)
}
inline void SampledValue::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.SampledValue.value)
}
inline void SampledValue::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.SampledValue.value)
}
inline ::std::string* SampledValue::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.SampledValue.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SampledValue::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SampledValue::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.SampledValue.value)
}

// optional string context = 2;
inline bool SampledValue::has_context() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SampledValue::set_has_context() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SampledValue::clear_has_context() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SampledValue::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_context();
}
inline const ::std::string& SampledValue::context() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.SampledValue.context)
  return context_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SampledValue::set_context(const ::std::string& value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.SampledValue.context)
}
inline void SampledValue::set_context(const char* value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.SampledValue.context)
}
inline void SampledValue::set_context(const char* value, size_t size) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.SampledValue.context)
}
inline ::std::string* SampledValue::mutable_context() {
  set_has_context();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.SampledValue.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SampledValue::release_context() {
  clear_has_context();
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SampledValue::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    set_has_context();
  } else {
    clear_has_context();
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.SampledValue.context)
}

// optional string format = 3;
inline bool SampledValue::has_format() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SampledValue::set_has_format() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SampledValue::clear_has_format() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SampledValue::clear_format() {
  format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_format();
}
inline const ::std::string& SampledValue::format() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.SampledValue.format)
  return format_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SampledValue::set_format(const ::std::string& value) {
  set_has_format();
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.SampledValue.format)
}
inline void SampledValue::set_format(const char* value) {
  set_has_format();
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.SampledValue.format)
}
inline void SampledValue::set_format(const char* value, size_t size) {
  set_has_format();
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.SampledValue.format)
}
inline ::std::string* SampledValue::mutable_format() {
  set_has_format();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.SampledValue.format)
  return format_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SampledValue::release_format() {
  clear_has_format();
  return format_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SampledValue::set_allocated_format(::std::string* format) {
  if (format != NULL) {
    set_has_format();
  } else {
    clear_has_format();
  }
  format_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), format);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.SampledValue.format)
}

// optional string measurand = 4;
inline bool SampledValue::has_measurand() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SampledValue::set_has_measurand() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SampledValue::clear_has_measurand() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SampledValue::clear_measurand() {
  measurand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_measurand();
}
inline const ::std::string& SampledValue::measurand() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.SampledValue.measurand)
  return measurand_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SampledValue::set_measurand(const ::std::string& value) {
  set_has_measurand();
  measurand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.SampledValue.measurand)
}
inline void SampledValue::set_measurand(const char* value) {
  set_has_measurand();
  measurand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.SampledValue.measurand)
}
inline void SampledValue::set_measurand(const char* value, size_t size) {
  set_has_measurand();
  measurand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.SampledValue.measurand)
}
inline ::std::string* SampledValue::mutable_measurand() {
  set_has_measurand();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.SampledValue.measurand)
  return measurand_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SampledValue::release_measurand() {
  clear_has_measurand();
  return measurand_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SampledValue::set_allocated_measurand(::std::string* measurand) {
  if (measurand != NULL) {
    set_has_measurand();
  } else {
    clear_has_measurand();
  }
  measurand_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), measurand);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.SampledValue.measurand)
}

// optional string phase = 5;
inline bool SampledValue::has_phase() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SampledValue::set_has_phase() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SampledValue::clear_has_phase() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SampledValue::clear_phase() {
  phase_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phase();
}
inline const ::std::string& SampledValue::phase() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.SampledValue.phase)
  return phase_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SampledValue::set_phase(const ::std::string& value) {
  set_has_phase();
  phase_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.SampledValue.phase)
}
inline void SampledValue::set_phase(const char* value) {
  set_has_phase();
  phase_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.SampledValue.phase)
}
inline void SampledValue::set_phase(const char* value, size_t size) {
  set_has_phase();
  phase_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.SampledValue.phase)
}
inline ::std::string* SampledValue::mutable_phase() {
  set_has_phase();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.SampledValue.phase)
  return phase_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SampledValue::release_phase() {
  clear_has_phase();
  return phase_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SampledValue::set_allocated_phase(::std::string* phase) {
  if (phase != NULL) {
    set_has_phase();
  } else {
    clear_has_phase();
  }
  phase_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phase);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.SampledValue.phase)
}

// optional string location = 6;
inline bool SampledValue::has_location() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SampledValue::set_has_location() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SampledValue::clear_has_location() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SampledValue::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_location();
}
inline const ::std::string& SampledValue::location() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.SampledValue.location)
  return location_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SampledValue::set_location(const ::std::string& value) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.SampledValue.location)
}
inline void SampledValue::set_location(const char* value) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.SampledValue.location)
}
inline void SampledValue::set_location(const char* value, size_t size) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.SampledValue.location)
}
inline ::std::string* SampledValue::mutable_location() {
  set_has_location();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.SampledValue.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SampledValue::release_location() {
  clear_has_location();
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SampledValue::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    set_has_location();
  } else {
    clear_has_location();
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.SampledValue.location)
}

// optional string unit = 7;
inline bool SampledValue::has_unit() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SampledValue::set_has_unit() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SampledValue::clear_has_unit() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SampledValue::clear_unit() {
  unit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_unit();
}
inline const ::std::string& SampledValue::unit() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.SampledValue.unit)
  return unit_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SampledValue::set_unit(const ::std::string& value) {
  set_has_unit();
  unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.SampledValue.unit)
}
inline void SampledValue::set_unit(const char* value) {
  set_has_unit();
  unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.SampledValue.unit)
}
inline void SampledValue::set_unit(const char* value, size_t size) {
  set_has_unit();
  unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.SampledValue.unit)
}
inline ::std::string* SampledValue::mutable_unit() {
  set_has_unit();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.SampledValue.unit)
  return unit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SampledValue::release_unit() {
  clear_has_unit();
  return unit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SampledValue::set_allocated_unit(::std::string* unit) {
  if (unit != NULL) {
    set_has_unit();
  } else {
    clear_has_unit();
  }
  unit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unit);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.SampledValue.unit)
}

// -------------------------------------------------------------------

// MeterValue

// required int64 timestamp = 1;
inline bool MeterValue::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MeterValue::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MeterValue::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MeterValue::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 MeterValue::timestamp() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.MeterValue.timestamp)
  return timestamp_;
}
inline void MeterValue::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.MeterValue.timestamp)
}

// repeated .udorx_pbf.SampledValue sampledValue = 2;
inline int MeterValue::sampledvalue_size() const {
  return sampledvalue_.size();
}
inline void MeterValue::clear_sampledvalue() {
  sampledvalue_.Clear();
}
inline const ::udorx_pbf::SampledValue& MeterValue::sampledvalue(int index) const {
  // @@protoc_insertion_point(field_get:udorx_pbf.MeterValue.sampledValue)
  return sampledvalue_.Get(index);
}
inline ::udorx_pbf::SampledValue* MeterValue::mutable_sampledvalue(int index) {
  // @@protoc_insertion_point(field_mutable:udorx_pbf.MeterValue.sampledValue)
  return sampledvalue_.Mutable(index);
}
inline ::udorx_pbf::SampledValue* MeterValue::add_sampledvalue() {
  // @@protoc_insertion_point(field_add:udorx_pbf.MeterValue.sampledValue)
  return sampledvalue_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::udorx_pbf::SampledValue >*
MeterValue::mutable_sampledvalue() {
  // @@protoc_insertion_point(field_mutable_list:udorx_pbf.MeterValue.sampledValue)
  return &sampledvalue_;
}
inline const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::SampledValue >&
MeterValue::sampledvalue() const {
  // @@protoc_insertion_point(field_list:udorx_pbf.MeterValue.sampledValue)
  return sampledvalue_;
}

// -------------------------------------------------------------------

// MeterValues

// repeated .udorx_pbf.MeterValue transactionData = 1;
inline int MeterValues::transactiondata_size() const {
  return transactiondata_.size();
}
inline void MeterValues::clear_transactiondata() {
  transactiondata_.Clear();
}
inline const ::udorx_pbf::MeterValue& MeterValues::transactiondata(int index) const {
  // @@protoc_insertion_point(field_get:udorx_pbf.MeterValues.transactionData)
  return transactiondata_.Get(index);
}
inline ::udorx_pbf::MeterValue* MeterValues::mutable_transactiondata(int index) {
  // @@protoc_insertion_point(field_mutable:udorx_pbf.MeterValues.transactionData)
  return transactiondata_.Mutable(index);
}
inline ::udorx_pbf::MeterValue* MeterValues::add_transactiondata() {
  // @@protoc_insertion_point(field_add:udorx_pbf.MeterValues.transactionData)
  return transactiondata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::udorx_pbf::MeterValue >*
MeterValues::mutable_transactiondata() {
  // @@protoc_insertion_point(field_mutable_list:udorx_pbf.MeterValues.transactionData)
  return &transactiondata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::MeterValue >&
MeterValues::transactiondata() const {
  // @@protoc_insertion_point(field_list:udorx_pbf.MeterValues.transactionData)
  return transactiondata_;
}

// -------------------------------------------------------------------

// TrData

// required string sern = 1;
inline bool TrData::has_sern() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrData::set_has_sern() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrData::clear_has_sern() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TrData::clear_sern() {
  sern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sern();
}
inline const ::std::string& TrData::sern() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.TrData.sern)
  return sern_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrData::set_sern(const ::std::string& value) {
  set_has_sern();
  sern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.TrData.sern)
}
inline void TrData::set_sern(const char* value) {
  set_has_sern();
  sern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.TrData.sern)
}
inline void TrData::set_sern(const char* value, size_t size) {
  set_has_sern();
  sern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.TrData.sern)
}
inline ::std::string* TrData::mutable_sern() {
  set_has_sern();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.TrData.sern)
  return sern_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrData::release_sern() {
  clear_has_sern();
  return sern_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrData::set_allocated_sern(::std::string* sern) {
  if (sern != NULL) {
    set_has_sern();
  } else {
    clear_has_sern();
  }
  sern_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sern);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.TrData.sern)
}

// required int32 transId = 2;
inline bool TrData::has_transid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrData::set_has_transid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrData::clear_has_transid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrData::clear_transid() {
  transid_ = 0;
  clear_has_transid();
}
inline ::google::protobuf::int32 TrData::transid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.TrData.transId)
  return transid_;
}
inline void TrData::set_transid(::google::protobuf::int32 value) {
  set_has_transid();
  transid_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.TrData.transId)
}

// required int32 connId = 3;
inline bool TrData::has_connid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TrData::set_has_connid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TrData::clear_has_connid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TrData::clear_connid() {
  connid_ = 0;
  clear_has_connid();
}
inline ::google::protobuf::int32 TrData::connid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.TrData.connId)
  return connid_;
}
inline void TrData::set_connid(::google::protobuf::int32 value) {
  set_has_connid();
  connid_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.TrData.connId)
}

// repeated .udorx_pbf.MeterValues mvalues = 4;
inline int TrData::mvalues_size() const {
  return mvalues_.size();
}
inline void TrData::clear_mvalues() {
  mvalues_.Clear();
}
inline const ::udorx_pbf::MeterValues& TrData::mvalues(int index) const {
  // @@protoc_insertion_point(field_get:udorx_pbf.TrData.mvalues)
  return mvalues_.Get(index);
}
inline ::udorx_pbf::MeterValues* TrData::mutable_mvalues(int index) {
  // @@protoc_insertion_point(field_mutable:udorx_pbf.TrData.mvalues)
  return mvalues_.Mutable(index);
}
inline ::udorx_pbf::MeterValues* TrData::add_mvalues() {
  // @@protoc_insertion_point(field_add:udorx_pbf.TrData.mvalues)
  return mvalues_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::udorx_pbf::MeterValues >*
TrData::mutable_mvalues() {
  // @@protoc_insertion_point(field_mutable_list:udorx_pbf.TrData.mvalues)
  return &mvalues_;
}
inline const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::MeterValues >&
TrData::mvalues() const {
  // @@protoc_insertion_point(field_list:udorx_pbf.TrData.mvalues)
  return mvalues_;
}

// -------------------------------------------------------------------

// TrDataList

// repeated .udorx_pbf.TrData tdlist = 4;
inline int TrDataList::tdlist_size() const {
  return tdlist_.size();
}
inline void TrDataList::clear_tdlist() {
  tdlist_.Clear();
}
inline const ::udorx_pbf::TrData& TrDataList::tdlist(int index) const {
  // @@protoc_insertion_point(field_get:udorx_pbf.TrDataList.tdlist)
  return tdlist_.Get(index);
}
inline ::udorx_pbf::TrData* TrDataList::mutable_tdlist(int index) {
  // @@protoc_insertion_point(field_mutable:udorx_pbf.TrDataList.tdlist)
  return tdlist_.Mutable(index);
}
inline ::udorx_pbf::TrData* TrDataList::add_tdlist() {
  // @@protoc_insertion_point(field_add:udorx_pbf.TrDataList.tdlist)
  return tdlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::udorx_pbf::TrData >*
TrDataList::mutable_tdlist() {
  // @@protoc_insertion_point(field_mutable_list:udorx_pbf.TrDataList.tdlist)
  return &tdlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::TrData >&
TrDataList::tdlist() const {
  // @@protoc_insertion_point(field_list:udorx_pbf.TrDataList.tdlist)
  return tdlist_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace udorx_pbf

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_udorx_5fcommon_2eproto__INCLUDED
