// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: udorx_common.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "udorx_common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace udorx_pbf {

namespace {

const ::google::protobuf::Descriptor* PCSIStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PCSIStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* PCSItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PCSItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* PCSList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PCSList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PCSIStatusList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PCSIStatusList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PConf_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PConf_reflection_ = NULL;
const ::google::protobuf::Descriptor* PEmpl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PEmpl_reflection_ = NULL;
const ::google::protobuf::Descriptor* PRegister_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PRegister_reflection_ = NULL;
const ::google::protobuf::Descriptor* CommPacket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CommPacket_reflection_ = NULL;
const ::google::protobuf::Descriptor* PMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* PMsgList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PMsgList_reflection_ = NULL;
const ::google::protobuf::Descriptor* SampledValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SampledValue_reflection_ = NULL;
const ::google::protobuf::Descriptor* MeterValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MeterValue_reflection_ = NULL;
const ::google::protobuf::Descriptor* MeterValues_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MeterValues_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrData_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrDataList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrDataList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_udorx_5fcommon_2eproto() {
  protobuf_AddDesc_udorx_5fcommon_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "udorx_common.proto");
  GOOGLE_CHECK(file != NULL);
  PCSIStatus_descriptor_ = file->message_type(0);
  static const int PCSIStatus_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSIStatus, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSIStatus, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSIStatus, objb_),
  };
  PCSIStatus_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PCSIStatus_descriptor_,
      PCSIStatus::default_instance_,
      PCSIStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSIStatus, _has_bits_[0]),
      -1,
      -1,
      sizeof(PCSIStatus),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSIStatus, _internal_metadata_),
      -1);
  PCSItem_descriptor_ = file->message_type(1);
  static const int PCSItem_offsets_[22] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, caller_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, param1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, reference_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, serialn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, instrs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, certflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, createdts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, lastupdtdts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, servicegroup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, lat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, lon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, profid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, objb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, ipaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, fwver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, tz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, dls_),
  };
  PCSItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PCSItem_descriptor_,
      PCSItem::default_instance_,
      PCSItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, _has_bits_[0]),
      -1,
      -1,
      sizeof(PCSItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSItem, _internal_metadata_),
      -1);
  PCSList_descriptor_ = file->message_type(2);
  static const int PCSList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSList, cs_items_),
  };
  PCSList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PCSList_descriptor_,
      PCSList::default_instance_,
      PCSList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSList, _has_bits_[0]),
      -1,
      -1,
      sizeof(PCSList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSList, _internal_metadata_),
      -1);
  PCSIStatusList_descriptor_ = file->message_type(3);
  static const int PCSIStatusList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSIStatusList, cs_sts_items_),
  };
  PCSIStatusList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PCSIStatusList_descriptor_,
      PCSIStatusList::default_instance_,
      PCSIStatusList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSIStatusList, _has_bits_[0]),
      -1,
      -1,
      sizeof(PCSIStatusList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PCSIStatusList, _internal_metadata_),
      -1);
  PConf_descriptor_ = file->message_type(4);
  static const int PConf_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PConf, utcoff_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PConf, dls_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PConf, param1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PConf, param2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PConf, param3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PConf, param4_),
  };
  PConf_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PConf_descriptor_,
      PConf::default_instance_,
      PConf_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PConf, _has_bits_[0]),
      -1,
      -1,
      sizeof(PConf),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PConf, _internal_metadata_),
      -1);
  PEmpl_descriptor_ = file->message_type(5);
  static const int PEmpl_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PEmpl, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PEmpl, drname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PEmpl, user_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PEmpl, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PEmpl, pass_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PEmpl, license_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PEmpl, country_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PEmpl, sign_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PEmpl, cid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PEmpl, cycle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PEmpl, h_exc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PEmpl, tz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PEmpl, haddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PEmpl, superv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PEmpl, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PEmpl, orgname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PEmpl, orgaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PEmpl, photo_),
  };
  PEmpl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PEmpl_descriptor_,
      PEmpl::default_instance_,
      PEmpl_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PEmpl, _has_bits_[0]),
      -1,
      -1,
      sizeof(PEmpl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PEmpl, _internal_metadata_),
      -1);
  PRegister_descriptor_ = file->message_type(6);
  static const int PRegister_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRegister, user_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRegister, pass_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRegister, fname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRegister, email_),
  };
  PRegister_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PRegister_descriptor_,
      PRegister::default_instance_,
      PRegister_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRegister, _has_bits_[0]),
      -1,
      -1,
      sizeof(PRegister),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRegister, _internal_metadata_),
      -1);
  CommPacket_descriptor_ = file->message_type(7);
  static const int CommPacket_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommPacket, req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommPacket, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommPacket, cid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommPacket, user_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommPacket, payload_),
  };
  CommPacket_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CommPacket_descriptor_,
      CommPacket::default_instance_,
      CommPacket_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommPacket, _has_bits_[0]),
      -1,
      -1,
      sizeof(CommPacket),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommPacket, _internal_metadata_),
      -1);
  PMsg_descriptor_ = file->message_type(8);
  static const int PMsg_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PMsg, mid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PMsg, sn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PMsg, scid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PMsg, ddid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PMsg, dcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PMsg, dn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PMsg, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PMsg, mt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PMsg, media_files_),
  };
  PMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PMsg_descriptor_,
      PMsg::default_instance_,
      PMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PMsg, _has_bits_[0]),
      -1,
      -1,
      sizeof(PMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PMsg, _internal_metadata_),
      -1);
  PMsgList_descriptor_ = file->message_type(9);
  static const int PMsgList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PMsgList, msgs_),
  };
  PMsgList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PMsgList_descriptor_,
      PMsgList::default_instance_,
      PMsgList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PMsgList, _has_bits_[0]),
      -1,
      -1,
      sizeof(PMsgList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PMsgList, _internal_metadata_),
      -1);
  SampledValue_descriptor_ = file->message_type(10);
  static const int SampledValue_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SampledValue, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SampledValue, context_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SampledValue, format_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SampledValue, measurand_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SampledValue, phase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SampledValue, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SampledValue, unit_),
  };
  SampledValue_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SampledValue_descriptor_,
      SampledValue::default_instance_,
      SampledValue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SampledValue, _has_bits_[0]),
      -1,
      -1,
      sizeof(SampledValue),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SampledValue, _internal_metadata_),
      -1);
  MeterValue_descriptor_ = file->message_type(11);
  static const int MeterValue_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeterValue, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeterValue, sampledvalue_),
  };
  MeterValue_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MeterValue_descriptor_,
      MeterValue::default_instance_,
      MeterValue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeterValue, _has_bits_[0]),
      -1,
      -1,
      sizeof(MeterValue),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeterValue, _internal_metadata_),
      -1);
  MeterValues_descriptor_ = file->message_type(12);
  static const int MeterValues_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeterValues, transactiondata_),
  };
  MeterValues_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MeterValues_descriptor_,
      MeterValues::default_instance_,
      MeterValues_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeterValues, _has_bits_[0]),
      -1,
      -1,
      sizeof(MeterValues),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeterValues, _internal_metadata_),
      -1);
  TrData_descriptor_ = file->message_type(13);
  static const int TrData_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrData, sern_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrData, transid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrData, connid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrData, mvalues_),
  };
  TrData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TrData_descriptor_,
      TrData::default_instance_,
      TrData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrData, _has_bits_[0]),
      -1,
      -1,
      sizeof(TrData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrData, _internal_metadata_),
      -1);
  TrDataList_descriptor_ = file->message_type(14);
  static const int TrDataList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrDataList, tdlist_),
  };
  TrDataList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TrDataList_descriptor_,
      TrDataList::default_instance_,
      TrDataList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrDataList, _has_bits_[0]),
      -1,
      -1,
      sizeof(TrDataList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrDataList, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_udorx_5fcommon_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PCSIStatus_descriptor_, &PCSIStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PCSItem_descriptor_, &PCSItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PCSList_descriptor_, &PCSList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PCSIStatusList_descriptor_, &PCSIStatusList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PConf_descriptor_, &PConf::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PEmpl_descriptor_, &PEmpl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PRegister_descriptor_, &PRegister::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CommPacket_descriptor_, &CommPacket::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PMsg_descriptor_, &PMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PMsgList_descriptor_, &PMsgList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SampledValue_descriptor_, &SampledValue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MeterValue_descriptor_, &MeterValue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MeterValues_descriptor_, &MeterValues::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TrData_descriptor_, &TrData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TrDataList_descriptor_, &TrDataList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_udorx_5fcommon_2eproto() {
  delete PCSIStatus::default_instance_;
  delete PCSIStatus_reflection_;
  delete PCSItem::default_instance_;
  delete PCSItem_reflection_;
  delete PCSList::default_instance_;
  delete PCSList_reflection_;
  delete PCSIStatusList::default_instance_;
  delete PCSIStatusList_reflection_;
  delete PConf::default_instance_;
  delete PConf_reflection_;
  delete PEmpl::default_instance_;
  delete PEmpl_reflection_;
  delete PRegister::default_instance_;
  delete PRegister_reflection_;
  delete CommPacket::default_instance_;
  delete CommPacket_reflection_;
  delete PMsg::default_instance_;
  delete PMsg_reflection_;
  delete PMsgList::default_instance_;
  delete PMsgList_reflection_;
  delete SampledValue::default_instance_;
  delete SampledValue_reflection_;
  delete MeterValue::default_instance_;
  delete MeterValue_reflection_;
  delete MeterValues::default_instance_;
  delete MeterValues_reflection_;
  delete TrData::default_instance_;
  delete TrData_reflection_;
  delete TrDataList::default_instance_;
  delete TrDataList_reflection_;
}

void protobuf_AddDesc_udorx_5fcommon_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022udorx_common.proto\022\tudorx_pbf\"6\n\nPCSIS"
    "tatus\022\n\n\002ID\030\001 \002(\003\022\016\n\006status\030\002 \002(\005\022\014\n\004Obj"
    "B\030\003 \002(\014\"\352\002\n\007PCSItem\022\n\n\002ID\030\001 \002(\003\022\014\n\004type\030"
    "\002 \002(\005\022\016\n\006Caller\030\003 \002(\t\022\016\n\006Param1\030\004 \001(\t\022\021\n"
    "\tReference\030\005 \002(\t\022\017\n\007SerialN\030\006 \002(\t\022\017\n\007Add"
    "ress\030\007 \001(\t\022\016\n\006Instrs\030\010 \002(\t\022\020\n\010CertFlag\030\t"
    " \002(\005\022\021\n\tCreatedTS\030\n \001(\003\022\023\n\013LastUpdtdTS\030\013"
    " \001(\003\022\016\n\006status\030\014 \002(\005\022\024\n\014serviceGroup\030\r \002"
    "(\005\022\020\n\010ClientID\030\016 \002(\005\022\013\n\003Lat\030\017 \002(\002\022\013\n\003Lon"
    "\030\020 \002(\002\022\016\n\006ProfID\030\021 \001(\005\022\014\n\004ObjB\030\022 \001(\014\022\016\n\006"
    "IPAddr\030\023 \001(\t\022\r\n\005FWVer\030\024 \001(\t\022\n\n\002tz\030\025 \001(\005\022"
    "\013\n\003dls\030\026 \001(\005\"/\n\007PCSList\022$\n\010cs_items\030\001 \003("
    "\0132\022.udorx_pbf.PCSItem\"=\n\016PCSIStatusList\022"
    "+\n\014cs_sts_items\030\001 \003(\0132\025.udorx_pbf.PCSISt"
    "atus\"d\n\005PConf\022\016\n\006utcOff\030\001 \002(\005\022\013\n\003dls\030\002 \002"
    "(\005\022\016\n\006param1\030\003 \001(\005\022\016\n\006param2\030\004 \001(\005\022\016\n\006pa"
    "ram3\030\005 \001(\t\022\016\n\006param4\030\006 \001(\t\"\224\002\n\005PEmpl\022\n\n\002"
    "ID\030\001 \002(\005\022\016\n\006DrName\030\002 \002(\t\022\014\n\004User\030\003 \001(\t\022\r"
    "\n\005Email\030\004 \001(\t\022\014\n\004Pass\030\005 \001(\t\022\017\n\007License\030\006"
    " \001(\t\022\017\n\007Country\030\007 \001(\t\022\014\n\004Sign\030\010 \001(\014\022\013\n\003C"
    "ID\030\t \001(\005\022\r\n\005Cycle\030\n \001(\005\022\r\n\005h_exc\030\013 \001(\005\022\n"
    "\n\002TZ\030\014 \001(\005\022\r\n\005haddr\030\r \001(\t\022\016\n\006superv\030\016 \001("
    "\005\022\r\n\005State\030\017 \001(\t\022\017\n\007OrgName\030\020 \001(\t\022\017\n\007Org"
    "Addr\030\021 \001(\t\022\r\n\005photo\030\022 \001(\t\"E\n\tPRegister\022\014"
    "\n\004user\030\001 \002(\t\022\014\n\004pass\030\002 \002(\t\022\r\n\005fname\030\003 \002("
    "\t\022\r\n\005email\030\004 \002(\t\"R\n\nCommPacket\022\013\n\003req\030\001 "
    "\002(\005\022\013\n\003rID\030\002 \002(\021\022\013\n\003cID\030\003 \002(\021\022\014\n\004user\030\004 "
    "\002(\t\022\017\n\007payload\030\005 \002(\014\"\203\001\n\004PMsg\022\013\n\003mid\030\001 \002"
    "(\t\022\n\n\002sN\030\002 \002(\t\022\014\n\004sCID\030\003 \002(\005\022\014\n\004dDID\030\004 \002"
    "(\005\022\014\n\004dCID\030\005 \002(\005\022\n\n\002dN\030\006 \002(\t\022\013\n\003msg\030\007 \002("
    "\t\022\n\n\002mT\030\010 \002(\005\022\023\n\013media_files\030\t \003(\t\")\n\010PM"
    "sgList\022\035\n\004msgs\030\001 \003(\0132\017.udorx_pbf.PMsg\"\200\001"
    "\n\014SampledValue\022\r\n\005value\030\001 \002(\t\022\017\n\007context"
    "\030\002 \001(\t\022\016\n\006format\030\003 \001(\t\022\021\n\tmeasurand\030\004 \001("
    "\t\022\r\n\005phase\030\005 \001(\t\022\020\n\010location\030\006 \001(\t\022\014\n\004un"
    "it\030\007 \001(\t\"N\n\nMeterValue\022\021\n\ttimestamp\030\001 \002("
    "\003\022-\n\014sampledValue\030\002 \003(\0132\027.udorx_pbf.Samp"
    "ledValue\"=\n\013MeterValues\022.\n\017transactionDa"
    "ta\030\001 \003(\0132\025.udorx_pbf.MeterValue\"`\n\006TrDat"
    "a\022\014\n\004sern\030\001 \002(\t\022\017\n\007transId\030\002 \002(\005\022\016\n\006conn"
    "Id\030\003 \002(\005\022\'\n\007mvalues\030\004 \003(\0132\026.udorx_pbf.Me"
    "terValues\"/\n\nTrDataList\022!\n\006tdlist\030\004 \003(\0132"
    "\021.udorx_pbf.TrDataB#\n\024com.mkr.models.pro"
    "toB\013CommPackets", 1735);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "udorx_common.proto", &protobuf_RegisterTypes);
  PCSIStatus::default_instance_ = new PCSIStatus();
  PCSItem::default_instance_ = new PCSItem();
  PCSList::default_instance_ = new PCSList();
  PCSIStatusList::default_instance_ = new PCSIStatusList();
  PConf::default_instance_ = new PConf();
  PEmpl::default_instance_ = new PEmpl();
  PRegister::default_instance_ = new PRegister();
  CommPacket::default_instance_ = new CommPacket();
  PMsg::default_instance_ = new PMsg();
  PMsgList::default_instance_ = new PMsgList();
  SampledValue::default_instance_ = new SampledValue();
  MeterValue::default_instance_ = new MeterValue();
  MeterValues::default_instance_ = new MeterValues();
  TrData::default_instance_ = new TrData();
  TrDataList::default_instance_ = new TrDataList();
  PCSIStatus::default_instance_->InitAsDefaultInstance();
  PCSItem::default_instance_->InitAsDefaultInstance();
  PCSList::default_instance_->InitAsDefaultInstance();
  PCSIStatusList::default_instance_->InitAsDefaultInstance();
  PConf::default_instance_->InitAsDefaultInstance();
  PEmpl::default_instance_->InitAsDefaultInstance();
  PRegister::default_instance_->InitAsDefaultInstance();
  CommPacket::default_instance_->InitAsDefaultInstance();
  PMsg::default_instance_->InitAsDefaultInstance();
  PMsgList::default_instance_->InitAsDefaultInstance();
  SampledValue::default_instance_->InitAsDefaultInstance();
  MeterValue::default_instance_->InitAsDefaultInstance();
  MeterValues::default_instance_->InitAsDefaultInstance();
  TrData::default_instance_->InitAsDefaultInstance();
  TrDataList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_udorx_5fcommon_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_udorx_5fcommon_2eproto {
  StaticDescriptorInitializer_udorx_5fcommon_2eproto() {
    protobuf_AddDesc_udorx_5fcommon_2eproto();
  }
} static_descriptor_initializer_udorx_5fcommon_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PCSIStatus::kIDFieldNumber;
const int PCSIStatus::kStatusFieldNumber;
const int PCSIStatus::kObjBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PCSIStatus::PCSIStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:udorx_pbf.PCSIStatus)
}

void PCSIStatus::InitAsDefaultInstance() {
}

PCSIStatus::PCSIStatus(const PCSIStatus& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:udorx_pbf.PCSIStatus)
}

void PCSIStatus::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  status_ = 0;
  objb_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PCSIStatus::~PCSIStatus() {
  // @@protoc_insertion_point(destructor:udorx_pbf.PCSIStatus)
  SharedDtor();
}

void PCSIStatus::SharedDtor() {
  objb_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PCSIStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PCSIStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PCSIStatus_descriptor_;
}

const PCSIStatus& PCSIStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_udorx_5fcommon_2eproto();
  return *default_instance_;
}

PCSIStatus* PCSIStatus::default_instance_ = NULL;

PCSIStatus* PCSIStatus::New(::google::protobuf::Arena* arena) const {
  PCSIStatus* n = new PCSIStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PCSIStatus::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    id_ = GOOGLE_LONGLONG(0);
    status_ = 0;
    if (has_objb()) {
      objb_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PCSIStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:udorx_pbf.PCSIStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 ID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // required int32 status = 2;
      case 2: {
        if (tag == 16) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ObjB;
        break;
      }

      // required bytes ObjB = 3;
      case 3: {
        if (tag == 26) {
         parse_ObjB:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_objb()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:udorx_pbf.PCSIStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:udorx_pbf.PCSIStatus)
  return false;
#undef DO_
}

void PCSIStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:udorx_pbf.PCSIStatus)
  // required int64 ID = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // required int32 status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }

  // required bytes ObjB = 3;
  if (has_objb()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->objb(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:udorx_pbf.PCSIStatus)
}

::google::protobuf::uint8* PCSIStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:udorx_pbf.PCSIStatus)
  // required int64 ID = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // required int32 status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }

  // required bytes ObjB = 3;
  if (has_objb()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->objb(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:udorx_pbf.PCSIStatus)
  return target;
}

int PCSIStatus::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_id()) {
    // required int64 ID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  if (has_status()) {
    // required int32 status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  if (has_objb()) {
    // required bytes ObjB = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->objb());
  }

  return total_size;
}
int PCSIStatus::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int64 ID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());

    // required int32 status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());

    // required bytes ObjB = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->objb());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PCSIStatus::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PCSIStatus* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PCSIStatus>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PCSIStatus::MergeFrom(const PCSIStatus& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_objb()) {
      set_has_objb();
      objb_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.objb_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PCSIStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PCSIStatus::CopyFrom(const PCSIStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PCSIStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void PCSIStatus::Swap(PCSIStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PCSIStatus::InternalSwap(PCSIStatus* other) {
  std::swap(id_, other->id_);
  std::swap(status_, other->status_);
  objb_.Swap(&other->objb_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PCSIStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PCSIStatus_descriptor_;
  metadata.reflection = PCSIStatus_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PCSIStatus

// required int64 ID = 1;
bool PCSIStatus::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PCSIStatus::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void PCSIStatus::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void PCSIStatus::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
 ::google::protobuf::int64 PCSIStatus::id() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSIStatus.ID)
  return id_;
}
 void PCSIStatus::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSIStatus.ID)
}

// required int32 status = 2;
bool PCSIStatus::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PCSIStatus::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
void PCSIStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
void PCSIStatus::clear_status() {
  status_ = 0;
  clear_has_status();
}
 ::google::protobuf::int32 PCSIStatus::status() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSIStatus.status)
  return status_;
}
 void PCSIStatus::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSIStatus.status)
}

// required bytes ObjB = 3;
bool PCSIStatus::has_objb() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PCSIStatus::set_has_objb() {
  _has_bits_[0] |= 0x00000004u;
}
void PCSIStatus::clear_has_objb() {
  _has_bits_[0] &= ~0x00000004u;
}
void PCSIStatus::clear_objb() {
  objb_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_objb();
}
 const ::std::string& PCSIStatus::objb() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSIStatus.ObjB)
  return objb_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PCSIStatus::set_objb(const ::std::string& value) {
  set_has_objb();
  objb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSIStatus.ObjB)
}
 void PCSIStatus::set_objb(const char* value) {
  set_has_objb();
  objb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PCSIStatus.ObjB)
}
 void PCSIStatus::set_objb(const void* value, size_t size) {
  set_has_objb();
  objb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PCSIStatus.ObjB)
}
 ::std::string* PCSIStatus::mutable_objb() {
  set_has_objb();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSIStatus.ObjB)
  return objb_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PCSIStatus::release_objb() {
  clear_has_objb();
  return objb_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PCSIStatus::set_allocated_objb(::std::string* objb) {
  if (objb != NULL) {
    set_has_objb();
  } else {
    clear_has_objb();
  }
  objb_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), objb);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PCSIStatus.ObjB)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PCSItem::kIDFieldNumber;
const int PCSItem::kTypeFieldNumber;
const int PCSItem::kCallerFieldNumber;
const int PCSItem::kParam1FieldNumber;
const int PCSItem::kReferenceFieldNumber;
const int PCSItem::kSerialNFieldNumber;
const int PCSItem::kAddressFieldNumber;
const int PCSItem::kInstrsFieldNumber;
const int PCSItem::kCertFlagFieldNumber;
const int PCSItem::kCreatedTSFieldNumber;
const int PCSItem::kLastUpdtdTSFieldNumber;
const int PCSItem::kStatusFieldNumber;
const int PCSItem::kServiceGroupFieldNumber;
const int PCSItem::kClientIDFieldNumber;
const int PCSItem::kLatFieldNumber;
const int PCSItem::kLonFieldNumber;
const int PCSItem::kProfIDFieldNumber;
const int PCSItem::kObjBFieldNumber;
const int PCSItem::kIPAddrFieldNumber;
const int PCSItem::kFWVerFieldNumber;
const int PCSItem::kTzFieldNumber;
const int PCSItem::kDlsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PCSItem::PCSItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:udorx_pbf.PCSItem)
}

void PCSItem::InitAsDefaultInstance() {
}

PCSItem::PCSItem(const PCSItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:udorx_pbf.PCSItem)
}

void PCSItem::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  type_ = 0;
  caller_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reference_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certflag_ = 0;
  createdts_ = GOOGLE_LONGLONG(0);
  lastupdtdts_ = GOOGLE_LONGLONG(0);
  status_ = 0;
  servicegroup_ = 0;
  clientid_ = 0;
  lat_ = 0;
  lon_ = 0;
  profid_ = 0;
  objb_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ipaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fwver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tz_ = 0;
  dls_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PCSItem::~PCSItem() {
  // @@protoc_insertion_point(destructor:udorx_pbf.PCSItem)
  SharedDtor();
}

void PCSItem::SharedDtor() {
  caller_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reference_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  objb_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ipaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fwver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PCSItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PCSItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PCSItem_descriptor_;
}

const PCSItem& PCSItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_udorx_5fcommon_2eproto();
  return *default_instance_;
}

PCSItem* PCSItem::default_instance_ = NULL;

PCSItem* PCSItem::New(::google::protobuf::Arena* arena) const {
  PCSItem* n = new PCSItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PCSItem::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PCSItem*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    id_ = GOOGLE_LONGLONG(0);
    type_ = 0;
    if (has_caller()) {
      caller_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_param1()) {
      param1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_reference()) {
      reference_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_serialn()) {
      serialn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_address()) {
      address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_instrs()) {
      instrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ZR_(createdts_, lon_);
    certflag_ = 0;
  }
  if (_has_bits_[16 / 32] & 4128768u) {
    ZR_(tz_, dls_);
    profid_ = 0;
    if (has_objb()) {
      objb_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_ipaddr()) {
      ipaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_fwver()) {
      fwver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PCSItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:udorx_pbf.PCSItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 ID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required int32 type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Caller;
        break;
      }

      // required string Caller = 3;
      case 3: {
        if (tag == 26) {
         parse_Caller:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_caller()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->caller().data(), this->caller().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PCSItem.Caller");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Param1;
        break;
      }

      // optional string Param1 = 4;
      case 4: {
        if (tag == 34) {
         parse_Param1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param1().data(), this->param1().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PCSItem.Param1");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Reference;
        break;
      }

      // required string Reference = 5;
      case 5: {
        if (tag == 42) {
         parse_Reference:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reference()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reference().data(), this->reference().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PCSItem.Reference");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_SerialN;
        break;
      }

      // required string SerialN = 6;
      case 6: {
        if (tag == 50) {
         parse_SerialN:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serialn()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->serialn().data(), this->serialn().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PCSItem.SerialN");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_Address;
        break;
      }

      // optional string Address = 7;
      case 7: {
        if (tag == 58) {
         parse_Address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PCSItem.Address");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_Instrs;
        break;
      }

      // required string Instrs = 8;
      case 8: {
        if (tag == 66) {
         parse_Instrs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instrs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->instrs().data(), this->instrs().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PCSItem.Instrs");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_CertFlag;
        break;
      }

      // required int32 CertFlag = 9;
      case 9: {
        if (tag == 72) {
         parse_CertFlag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &certflag_)));
          set_has_certflag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_CreatedTS;
        break;
      }

      // optional int64 CreatedTS = 10;
      case 10: {
        if (tag == 80) {
         parse_CreatedTS:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &createdts_)));
          set_has_createdts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_LastUpdtdTS;
        break;
      }

      // optional int64 LastUpdtdTS = 11;
      case 11: {
        if (tag == 88) {
         parse_LastUpdtdTS:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lastupdtdts_)));
          set_has_lastupdtdts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_status;
        break;
      }

      // required int32 status = 12;
      case 12: {
        if (tag == 96) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_serviceGroup;
        break;
      }

      // required int32 serviceGroup = 13;
      case 13: {
        if (tag == 104) {
         parse_serviceGroup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &servicegroup_)));
          set_has_servicegroup();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_ClientID;
        break;
      }

      // required int32 ClientID = 14;
      case 14: {
        if (tag == 112) {
         parse_ClientID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clientid_)));
          set_has_clientid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(125)) goto parse_Lat;
        break;
      }

      // required float Lat = 15;
      case 15: {
        if (tag == 125) {
         parse_Lat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lat_)));
          set_has_lat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(133)) goto parse_Lon;
        break;
      }

      // required float Lon = 16;
      case 16: {
        if (tag == 133) {
         parse_Lon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lon_)));
          set_has_lon();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_ProfID;
        break;
      }

      // optional int32 ProfID = 17;
      case 17: {
        if (tag == 136) {
         parse_ProfID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &profid_)));
          set_has_profid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_ObjB;
        break;
      }

      // optional bytes ObjB = 18;
      case 18: {
        if (tag == 146) {
         parse_ObjB:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_objb()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_IPAddr;
        break;
      }

      // optional string IPAddr = 19;
      case 19: {
        if (tag == 154) {
         parse_IPAddr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ipaddr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ipaddr().data(), this->ipaddr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PCSItem.IPAddr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_FWVer;
        break;
      }

      // optional string FWVer = 20;
      case 20: {
        if (tag == 162) {
         parse_FWVer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fwver()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fwver().data(), this->fwver().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PCSItem.FWVer");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_tz;
        break;
      }

      // optional int32 tz = 21;
      case 21: {
        if (tag == 168) {
         parse_tz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tz_)));
          set_has_tz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_dls;
        break;
      }

      // optional int32 dls = 22;
      case 22: {
        if (tag == 176) {
         parse_dls:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dls_)));
          set_has_dls();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:udorx_pbf.PCSItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:udorx_pbf.PCSItem)
  return false;
#undef DO_
}

void PCSItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:udorx_pbf.PCSItem)
  // required int64 ID = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // required int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // required string Caller = 3;
  if (has_caller()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->caller().data(), this->caller().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PCSItem.Caller");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->caller(), output);
  }

  // optional string Param1 = 4;
  if (has_param1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param1().data(), this->param1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PCSItem.Param1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->param1(), output);
  }

  // required string Reference = 5;
  if (has_reference()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reference().data(), this->reference().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PCSItem.Reference");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->reference(), output);
  }

  // required string SerialN = 6;
  if (has_serialn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serialn().data(), this->serialn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PCSItem.SerialN");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->serialn(), output);
  }

  // optional string Address = 7;
  if (has_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PCSItem.Address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->address(), output);
  }

  // required string Instrs = 8;
  if (has_instrs()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->instrs().data(), this->instrs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PCSItem.Instrs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->instrs(), output);
  }

  // required int32 CertFlag = 9;
  if (has_certflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->certflag(), output);
  }

  // optional int64 CreatedTS = 10;
  if (has_createdts()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->createdts(), output);
  }

  // optional int64 LastUpdtdTS = 11;
  if (has_lastupdtdts()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->lastupdtdts(), output);
  }

  // required int32 status = 12;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->status(), output);
  }

  // required int32 serviceGroup = 13;
  if (has_servicegroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->servicegroup(), output);
  }

  // required int32 ClientID = 14;
  if (has_clientid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->clientid(), output);
  }

  // required float Lat = 15;
  if (has_lat()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->lat(), output);
  }

  // required float Lon = 16;
  if (has_lon()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(16, this->lon(), output);
  }

  // optional int32 ProfID = 17;
  if (has_profid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->profid(), output);
  }

  // optional bytes ObjB = 18;
  if (has_objb()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      18, this->objb(), output);
  }

  // optional string IPAddr = 19;
  if (has_ipaddr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ipaddr().data(), this->ipaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PCSItem.IPAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->ipaddr(), output);
  }

  // optional string FWVer = 20;
  if (has_fwver()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fwver().data(), this->fwver().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PCSItem.FWVer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->fwver(), output);
  }

  // optional int32 tz = 21;
  if (has_tz()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->tz(), output);
  }

  // optional int32 dls = 22;
  if (has_dls()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->dls(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:udorx_pbf.PCSItem)
}

::google::protobuf::uint8* PCSItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:udorx_pbf.PCSItem)
  // required int64 ID = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // required int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // required string Caller = 3;
  if (has_caller()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->caller().data(), this->caller().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PCSItem.Caller");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->caller(), target);
  }

  // optional string Param1 = 4;
  if (has_param1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param1().data(), this->param1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PCSItem.Param1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->param1(), target);
  }

  // required string Reference = 5;
  if (has_reference()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reference().data(), this->reference().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PCSItem.Reference");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->reference(), target);
  }

  // required string SerialN = 6;
  if (has_serialn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serialn().data(), this->serialn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PCSItem.SerialN");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->serialn(), target);
  }

  // optional string Address = 7;
  if (has_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PCSItem.Address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->address(), target);
  }

  // required string Instrs = 8;
  if (has_instrs()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->instrs().data(), this->instrs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PCSItem.Instrs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->instrs(), target);
  }

  // required int32 CertFlag = 9;
  if (has_certflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->certflag(), target);
  }

  // optional int64 CreatedTS = 10;
  if (has_createdts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->createdts(), target);
  }

  // optional int64 LastUpdtdTS = 11;
  if (has_lastupdtdts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->lastupdtdts(), target);
  }

  // required int32 status = 12;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->status(), target);
  }

  // required int32 serviceGroup = 13;
  if (has_servicegroup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->servicegroup(), target);
  }

  // required int32 ClientID = 14;
  if (has_clientid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->clientid(), target);
  }

  // required float Lat = 15;
  if (has_lat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->lat(), target);
  }

  // required float Lon = 16;
  if (has_lon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(16, this->lon(), target);
  }

  // optional int32 ProfID = 17;
  if (has_profid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->profid(), target);
  }

  // optional bytes ObjB = 18;
  if (has_objb()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        18, this->objb(), target);
  }

  // optional string IPAddr = 19;
  if (has_ipaddr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ipaddr().data(), this->ipaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PCSItem.IPAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->ipaddr(), target);
  }

  // optional string FWVer = 20;
  if (has_fwver()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fwver().data(), this->fwver().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PCSItem.FWVer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->fwver(), target);
  }

  // optional int32 tz = 21;
  if (has_tz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->tz(), target);
  }

  // optional int32 dls = 22;
  if (has_dls()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->dls(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:udorx_pbf.PCSItem)
  return target;
}

int PCSItem::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_id()) {
    // required int64 ID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  if (has_type()) {
    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  if (has_caller()) {
    // required string Caller = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->caller());
  }

  if (has_reference()) {
    // required string Reference = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reference());
  }

  if (has_serialn()) {
    // required string SerialN = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serialn());
  }

  if (has_instrs()) {
    // required string Instrs = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instrs());
  }

  if (has_certflag()) {
    // required int32 CertFlag = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->certflag());
  }

  if (has_status()) {
    // required int32 status = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  if (has_servicegroup()) {
    // required int32 serviceGroup = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->servicegroup());
  }

  if (has_clientid()) {
    // required int32 ClientID = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->clientid());
  }

  if (has_lat()) {
    // required float Lat = 15;
    total_size += 1 + 4;
  }

  if (has_lon()) {
    // required float Lon = 16;
    total_size += 2 + 4;
  }

  return total_size;
}
int PCSItem::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000f9b7) ^ 0x0000f9b7) == 0) {  // All required fields are present.
    // required int64 ID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());

    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

    // required string Caller = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->caller());

    // required string Reference = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reference());

    // required string SerialN = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serialn());

    // required string Instrs = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instrs());

    // required int32 CertFlag = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->certflag());

    // required int32 status = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());

    // required int32 serviceGroup = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->servicegroup());

    // required int32 ClientID = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->clientid());

    // required float Lat = 15;
    total_size += 1 + 4;

    // required float Lon = 16;
    total_size += 2 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[3 / 32] & 72u) {
    // optional string Param1 = 4;
    if (has_param1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param1());
    }

    // optional string Address = 7;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address());
    }

  }
  if (_has_bits_[9 / 32] & 1536u) {
    // optional int64 CreatedTS = 10;
    if (has_createdts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->createdts());
    }

    // optional int64 LastUpdtdTS = 11;
    if (has_lastupdtdts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->lastupdtdts());
    }

  }
  if (_has_bits_[16 / 32] & 4128768u) {
    // optional int32 ProfID = 17;
    if (has_profid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->profid());
    }

    // optional bytes ObjB = 18;
    if (has_objb()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->objb());
    }

    // optional string IPAddr = 19;
    if (has_ipaddr()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ipaddr());
    }

    // optional string FWVer = 20;
    if (has_fwver()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fwver());
    }

    // optional int32 tz = 21;
    if (has_tz()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tz());
    }

    // optional int32 dls = 22;
    if (has_dls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dls());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PCSItem::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PCSItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PCSItem>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PCSItem::MergeFrom(const PCSItem& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_caller()) {
      set_has_caller();
      caller_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.caller_);
    }
    if (from.has_param1()) {
      set_has_param1();
      param1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param1_);
    }
    if (from.has_reference()) {
      set_has_reference();
      reference_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reference_);
    }
    if (from.has_serialn()) {
      set_has_serialn();
      serialn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialn_);
    }
    if (from.has_address()) {
      set_has_address();
      address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
    }
    if (from.has_instrs()) {
      set_has_instrs();
      instrs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrs_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_certflag()) {
      set_certflag(from.certflag());
    }
    if (from.has_createdts()) {
      set_createdts(from.createdts());
    }
    if (from.has_lastupdtdts()) {
      set_lastupdtdts(from.lastupdtdts());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_servicegroup()) {
      set_servicegroup(from.servicegroup());
    }
    if (from.has_clientid()) {
      set_clientid(from.clientid());
    }
    if (from.has_lat()) {
      set_lat(from.lat());
    }
    if (from.has_lon()) {
      set_lon(from.lon());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_profid()) {
      set_profid(from.profid());
    }
    if (from.has_objb()) {
      set_has_objb();
      objb_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.objb_);
    }
    if (from.has_ipaddr()) {
      set_has_ipaddr();
      ipaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ipaddr_);
    }
    if (from.has_fwver()) {
      set_has_fwver();
      fwver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fwver_);
    }
    if (from.has_tz()) {
      set_tz(from.tz());
    }
    if (from.has_dls()) {
      set_dls(from.dls());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PCSItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PCSItem::CopyFrom(const PCSItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PCSItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000f9b7) != 0x0000f9b7) return false;

  return true;
}

void PCSItem::Swap(PCSItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PCSItem::InternalSwap(PCSItem* other) {
  std::swap(id_, other->id_);
  std::swap(type_, other->type_);
  caller_.Swap(&other->caller_);
  param1_.Swap(&other->param1_);
  reference_.Swap(&other->reference_);
  serialn_.Swap(&other->serialn_);
  address_.Swap(&other->address_);
  instrs_.Swap(&other->instrs_);
  std::swap(certflag_, other->certflag_);
  std::swap(createdts_, other->createdts_);
  std::swap(lastupdtdts_, other->lastupdtdts_);
  std::swap(status_, other->status_);
  std::swap(servicegroup_, other->servicegroup_);
  std::swap(clientid_, other->clientid_);
  std::swap(lat_, other->lat_);
  std::swap(lon_, other->lon_);
  std::swap(profid_, other->profid_);
  objb_.Swap(&other->objb_);
  ipaddr_.Swap(&other->ipaddr_);
  fwver_.Swap(&other->fwver_);
  std::swap(tz_, other->tz_);
  std::swap(dls_, other->dls_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PCSItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PCSItem_descriptor_;
  metadata.reflection = PCSItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PCSItem

// required int64 ID = 1;
bool PCSItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PCSItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void PCSItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void PCSItem::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
 ::google::protobuf::int64 PCSItem::id() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.ID)
  return id_;
}
 void PCSItem::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.ID)
}

// required int32 type = 2;
bool PCSItem::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PCSItem::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void PCSItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void PCSItem::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::google::protobuf::int32 PCSItem::type() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.type)
  return type_;
}
 void PCSItem::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.type)
}

// required string Caller = 3;
bool PCSItem::has_caller() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PCSItem::set_has_caller() {
  _has_bits_[0] |= 0x00000004u;
}
void PCSItem::clear_has_caller() {
  _has_bits_[0] &= ~0x00000004u;
}
void PCSItem::clear_caller() {
  caller_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_caller();
}
 const ::std::string& PCSItem::caller() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.Caller)
  return caller_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PCSItem::set_caller(const ::std::string& value) {
  set_has_caller();
  caller_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.Caller)
}
 void PCSItem::set_caller(const char* value) {
  set_has_caller();
  caller_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PCSItem.Caller)
}
 void PCSItem::set_caller(const char* value, size_t size) {
  set_has_caller();
  caller_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PCSItem.Caller)
}
 ::std::string* PCSItem::mutable_caller() {
  set_has_caller();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSItem.Caller)
  return caller_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PCSItem::release_caller() {
  clear_has_caller();
  return caller_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PCSItem::set_allocated_caller(::std::string* caller) {
  if (caller != NULL) {
    set_has_caller();
  } else {
    clear_has_caller();
  }
  caller_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), caller);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PCSItem.Caller)
}

// optional string Param1 = 4;
bool PCSItem::has_param1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PCSItem::set_has_param1() {
  _has_bits_[0] |= 0x00000008u;
}
void PCSItem::clear_has_param1() {
  _has_bits_[0] &= ~0x00000008u;
}
void PCSItem::clear_param1() {
  param1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_param1();
}
 const ::std::string& PCSItem::param1() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.Param1)
  return param1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PCSItem::set_param1(const ::std::string& value) {
  set_has_param1();
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.Param1)
}
 void PCSItem::set_param1(const char* value) {
  set_has_param1();
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PCSItem.Param1)
}
 void PCSItem::set_param1(const char* value, size_t size) {
  set_has_param1();
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PCSItem.Param1)
}
 ::std::string* PCSItem::mutable_param1() {
  set_has_param1();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSItem.Param1)
  return param1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PCSItem::release_param1() {
  clear_has_param1();
  return param1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PCSItem::set_allocated_param1(::std::string* param1) {
  if (param1 != NULL) {
    set_has_param1();
  } else {
    clear_has_param1();
  }
  param1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param1);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PCSItem.Param1)
}

// required string Reference = 5;
bool PCSItem::has_reference() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PCSItem::set_has_reference() {
  _has_bits_[0] |= 0x00000010u;
}
void PCSItem::clear_has_reference() {
  _has_bits_[0] &= ~0x00000010u;
}
void PCSItem::clear_reference() {
  reference_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reference();
}
 const ::std::string& PCSItem::reference() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.Reference)
  return reference_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PCSItem::set_reference(const ::std::string& value) {
  set_has_reference();
  reference_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.Reference)
}
 void PCSItem::set_reference(const char* value) {
  set_has_reference();
  reference_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PCSItem.Reference)
}
 void PCSItem::set_reference(const char* value, size_t size) {
  set_has_reference();
  reference_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PCSItem.Reference)
}
 ::std::string* PCSItem::mutable_reference() {
  set_has_reference();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSItem.Reference)
  return reference_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PCSItem::release_reference() {
  clear_has_reference();
  return reference_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PCSItem::set_allocated_reference(::std::string* reference) {
  if (reference != NULL) {
    set_has_reference();
  } else {
    clear_has_reference();
  }
  reference_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PCSItem.Reference)
}

// required string SerialN = 6;
bool PCSItem::has_serialn() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PCSItem::set_has_serialn() {
  _has_bits_[0] |= 0x00000020u;
}
void PCSItem::clear_has_serialn() {
  _has_bits_[0] &= ~0x00000020u;
}
void PCSItem::clear_serialn() {
  serialn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_serialn();
}
 const ::std::string& PCSItem::serialn() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.SerialN)
  return serialn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PCSItem::set_serialn(const ::std::string& value) {
  set_has_serialn();
  serialn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.SerialN)
}
 void PCSItem::set_serialn(const char* value) {
  set_has_serialn();
  serialn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PCSItem.SerialN)
}
 void PCSItem::set_serialn(const char* value, size_t size) {
  set_has_serialn();
  serialn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PCSItem.SerialN)
}
 ::std::string* PCSItem::mutable_serialn() {
  set_has_serialn();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSItem.SerialN)
  return serialn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PCSItem::release_serialn() {
  clear_has_serialn();
  return serialn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PCSItem::set_allocated_serialn(::std::string* serialn) {
  if (serialn != NULL) {
    set_has_serialn();
  } else {
    clear_has_serialn();
  }
  serialn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serialn);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PCSItem.SerialN)
}

// optional string Address = 7;
bool PCSItem::has_address() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PCSItem::set_has_address() {
  _has_bits_[0] |= 0x00000040u;
}
void PCSItem::clear_has_address() {
  _has_bits_[0] &= ~0x00000040u;
}
void PCSItem::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address();
}
 const ::std::string& PCSItem::address() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.Address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PCSItem::set_address(const ::std::string& value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.Address)
}
 void PCSItem::set_address(const char* value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PCSItem.Address)
}
 void PCSItem::set_address(const char* value, size_t size) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PCSItem.Address)
}
 ::std::string* PCSItem::mutable_address() {
  set_has_address();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSItem.Address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PCSItem::release_address() {
  clear_has_address();
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PCSItem::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    set_has_address();
  } else {
    clear_has_address();
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PCSItem.Address)
}

// required string Instrs = 8;
bool PCSItem::has_instrs() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void PCSItem::set_has_instrs() {
  _has_bits_[0] |= 0x00000080u;
}
void PCSItem::clear_has_instrs() {
  _has_bits_[0] &= ~0x00000080u;
}
void PCSItem::clear_instrs() {
  instrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_instrs();
}
 const ::std::string& PCSItem::instrs() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.Instrs)
  return instrs_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PCSItem::set_instrs(const ::std::string& value) {
  set_has_instrs();
  instrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.Instrs)
}
 void PCSItem::set_instrs(const char* value) {
  set_has_instrs();
  instrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PCSItem.Instrs)
}
 void PCSItem::set_instrs(const char* value, size_t size) {
  set_has_instrs();
  instrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PCSItem.Instrs)
}
 ::std::string* PCSItem::mutable_instrs() {
  set_has_instrs();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSItem.Instrs)
  return instrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PCSItem::release_instrs() {
  clear_has_instrs();
  return instrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PCSItem::set_allocated_instrs(::std::string* instrs) {
  if (instrs != NULL) {
    set_has_instrs();
  } else {
    clear_has_instrs();
  }
  instrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instrs);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PCSItem.Instrs)
}

// required int32 CertFlag = 9;
bool PCSItem::has_certflag() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void PCSItem::set_has_certflag() {
  _has_bits_[0] |= 0x00000100u;
}
void PCSItem::clear_has_certflag() {
  _has_bits_[0] &= ~0x00000100u;
}
void PCSItem::clear_certflag() {
  certflag_ = 0;
  clear_has_certflag();
}
 ::google::protobuf::int32 PCSItem::certflag() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.CertFlag)
  return certflag_;
}
 void PCSItem::set_certflag(::google::protobuf::int32 value) {
  set_has_certflag();
  certflag_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.CertFlag)
}

// optional int64 CreatedTS = 10;
bool PCSItem::has_createdts() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void PCSItem::set_has_createdts() {
  _has_bits_[0] |= 0x00000200u;
}
void PCSItem::clear_has_createdts() {
  _has_bits_[0] &= ~0x00000200u;
}
void PCSItem::clear_createdts() {
  createdts_ = GOOGLE_LONGLONG(0);
  clear_has_createdts();
}
 ::google::protobuf::int64 PCSItem::createdts() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.CreatedTS)
  return createdts_;
}
 void PCSItem::set_createdts(::google::protobuf::int64 value) {
  set_has_createdts();
  createdts_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.CreatedTS)
}

// optional int64 LastUpdtdTS = 11;
bool PCSItem::has_lastupdtdts() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void PCSItem::set_has_lastupdtdts() {
  _has_bits_[0] |= 0x00000400u;
}
void PCSItem::clear_has_lastupdtdts() {
  _has_bits_[0] &= ~0x00000400u;
}
void PCSItem::clear_lastupdtdts() {
  lastupdtdts_ = GOOGLE_LONGLONG(0);
  clear_has_lastupdtdts();
}
 ::google::protobuf::int64 PCSItem::lastupdtdts() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.LastUpdtdTS)
  return lastupdtdts_;
}
 void PCSItem::set_lastupdtdts(::google::protobuf::int64 value) {
  set_has_lastupdtdts();
  lastupdtdts_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.LastUpdtdTS)
}

// required int32 status = 12;
bool PCSItem::has_status() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void PCSItem::set_has_status() {
  _has_bits_[0] |= 0x00000800u;
}
void PCSItem::clear_has_status() {
  _has_bits_[0] &= ~0x00000800u;
}
void PCSItem::clear_status() {
  status_ = 0;
  clear_has_status();
}
 ::google::protobuf::int32 PCSItem::status() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.status)
  return status_;
}
 void PCSItem::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.status)
}

// required int32 serviceGroup = 13;
bool PCSItem::has_servicegroup() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void PCSItem::set_has_servicegroup() {
  _has_bits_[0] |= 0x00001000u;
}
void PCSItem::clear_has_servicegroup() {
  _has_bits_[0] &= ~0x00001000u;
}
void PCSItem::clear_servicegroup() {
  servicegroup_ = 0;
  clear_has_servicegroup();
}
 ::google::protobuf::int32 PCSItem::servicegroup() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.serviceGroup)
  return servicegroup_;
}
 void PCSItem::set_servicegroup(::google::protobuf::int32 value) {
  set_has_servicegroup();
  servicegroup_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.serviceGroup)
}

// required int32 ClientID = 14;
bool PCSItem::has_clientid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void PCSItem::set_has_clientid() {
  _has_bits_[0] |= 0x00002000u;
}
void PCSItem::clear_has_clientid() {
  _has_bits_[0] &= ~0x00002000u;
}
void PCSItem::clear_clientid() {
  clientid_ = 0;
  clear_has_clientid();
}
 ::google::protobuf::int32 PCSItem::clientid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.ClientID)
  return clientid_;
}
 void PCSItem::set_clientid(::google::protobuf::int32 value) {
  set_has_clientid();
  clientid_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.ClientID)
}

// required float Lat = 15;
bool PCSItem::has_lat() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void PCSItem::set_has_lat() {
  _has_bits_[0] |= 0x00004000u;
}
void PCSItem::clear_has_lat() {
  _has_bits_[0] &= ~0x00004000u;
}
void PCSItem::clear_lat() {
  lat_ = 0;
  clear_has_lat();
}
 float PCSItem::lat() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.Lat)
  return lat_;
}
 void PCSItem::set_lat(float value) {
  set_has_lat();
  lat_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.Lat)
}

// required float Lon = 16;
bool PCSItem::has_lon() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void PCSItem::set_has_lon() {
  _has_bits_[0] |= 0x00008000u;
}
void PCSItem::clear_has_lon() {
  _has_bits_[0] &= ~0x00008000u;
}
void PCSItem::clear_lon() {
  lon_ = 0;
  clear_has_lon();
}
 float PCSItem::lon() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.Lon)
  return lon_;
}
 void PCSItem::set_lon(float value) {
  set_has_lon();
  lon_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.Lon)
}

// optional int32 ProfID = 17;
bool PCSItem::has_profid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void PCSItem::set_has_profid() {
  _has_bits_[0] |= 0x00010000u;
}
void PCSItem::clear_has_profid() {
  _has_bits_[0] &= ~0x00010000u;
}
void PCSItem::clear_profid() {
  profid_ = 0;
  clear_has_profid();
}
 ::google::protobuf::int32 PCSItem::profid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.ProfID)
  return profid_;
}
 void PCSItem::set_profid(::google::protobuf::int32 value) {
  set_has_profid();
  profid_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.ProfID)
}

// optional bytes ObjB = 18;
bool PCSItem::has_objb() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void PCSItem::set_has_objb() {
  _has_bits_[0] |= 0x00020000u;
}
void PCSItem::clear_has_objb() {
  _has_bits_[0] &= ~0x00020000u;
}
void PCSItem::clear_objb() {
  objb_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_objb();
}
 const ::std::string& PCSItem::objb() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.ObjB)
  return objb_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PCSItem::set_objb(const ::std::string& value) {
  set_has_objb();
  objb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.ObjB)
}
 void PCSItem::set_objb(const char* value) {
  set_has_objb();
  objb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PCSItem.ObjB)
}
 void PCSItem::set_objb(const void* value, size_t size) {
  set_has_objb();
  objb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PCSItem.ObjB)
}
 ::std::string* PCSItem::mutable_objb() {
  set_has_objb();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSItem.ObjB)
  return objb_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PCSItem::release_objb() {
  clear_has_objb();
  return objb_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PCSItem::set_allocated_objb(::std::string* objb) {
  if (objb != NULL) {
    set_has_objb();
  } else {
    clear_has_objb();
  }
  objb_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), objb);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PCSItem.ObjB)
}

// optional string IPAddr = 19;
bool PCSItem::has_ipaddr() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void PCSItem::set_has_ipaddr() {
  _has_bits_[0] |= 0x00040000u;
}
void PCSItem::clear_has_ipaddr() {
  _has_bits_[0] &= ~0x00040000u;
}
void PCSItem::clear_ipaddr() {
  ipaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ipaddr();
}
 const ::std::string& PCSItem::ipaddr() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.IPAddr)
  return ipaddr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PCSItem::set_ipaddr(const ::std::string& value) {
  set_has_ipaddr();
  ipaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.IPAddr)
}
 void PCSItem::set_ipaddr(const char* value) {
  set_has_ipaddr();
  ipaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PCSItem.IPAddr)
}
 void PCSItem::set_ipaddr(const char* value, size_t size) {
  set_has_ipaddr();
  ipaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PCSItem.IPAddr)
}
 ::std::string* PCSItem::mutable_ipaddr() {
  set_has_ipaddr();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSItem.IPAddr)
  return ipaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PCSItem::release_ipaddr() {
  clear_has_ipaddr();
  return ipaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PCSItem::set_allocated_ipaddr(::std::string* ipaddr) {
  if (ipaddr != NULL) {
    set_has_ipaddr();
  } else {
    clear_has_ipaddr();
  }
  ipaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ipaddr);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PCSItem.IPAddr)
}

// optional string FWVer = 20;
bool PCSItem::has_fwver() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void PCSItem::set_has_fwver() {
  _has_bits_[0] |= 0x00080000u;
}
void PCSItem::clear_has_fwver() {
  _has_bits_[0] &= ~0x00080000u;
}
void PCSItem::clear_fwver() {
  fwver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fwver();
}
 const ::std::string& PCSItem::fwver() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.FWVer)
  return fwver_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PCSItem::set_fwver(const ::std::string& value) {
  set_has_fwver();
  fwver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.FWVer)
}
 void PCSItem::set_fwver(const char* value) {
  set_has_fwver();
  fwver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PCSItem.FWVer)
}
 void PCSItem::set_fwver(const char* value, size_t size) {
  set_has_fwver();
  fwver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PCSItem.FWVer)
}
 ::std::string* PCSItem::mutable_fwver() {
  set_has_fwver();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSItem.FWVer)
  return fwver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PCSItem::release_fwver() {
  clear_has_fwver();
  return fwver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PCSItem::set_allocated_fwver(::std::string* fwver) {
  if (fwver != NULL) {
    set_has_fwver();
  } else {
    clear_has_fwver();
  }
  fwver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fwver);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PCSItem.FWVer)
}

// optional int32 tz = 21;
bool PCSItem::has_tz() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void PCSItem::set_has_tz() {
  _has_bits_[0] |= 0x00100000u;
}
void PCSItem::clear_has_tz() {
  _has_bits_[0] &= ~0x00100000u;
}
void PCSItem::clear_tz() {
  tz_ = 0;
  clear_has_tz();
}
 ::google::protobuf::int32 PCSItem::tz() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.tz)
  return tz_;
}
 void PCSItem::set_tz(::google::protobuf::int32 value) {
  set_has_tz();
  tz_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.tz)
}

// optional int32 dls = 22;
bool PCSItem::has_dls() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void PCSItem::set_has_dls() {
  _has_bits_[0] |= 0x00200000u;
}
void PCSItem::clear_has_dls() {
  _has_bits_[0] &= ~0x00200000u;
}
void PCSItem::clear_dls() {
  dls_ = 0;
  clear_has_dls();
}
 ::google::protobuf::int32 PCSItem::dls() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSItem.dls)
  return dls_;
}
 void PCSItem::set_dls(::google::protobuf::int32 value) {
  set_has_dls();
  dls_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PCSItem.dls)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PCSList::kCsItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PCSList::PCSList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:udorx_pbf.PCSList)
}

void PCSList::InitAsDefaultInstance() {
}

PCSList::PCSList(const PCSList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:udorx_pbf.PCSList)
}

void PCSList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PCSList::~PCSList() {
  // @@protoc_insertion_point(destructor:udorx_pbf.PCSList)
  SharedDtor();
}

void PCSList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PCSList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PCSList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PCSList_descriptor_;
}

const PCSList& PCSList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_udorx_5fcommon_2eproto();
  return *default_instance_;
}

PCSList* PCSList::default_instance_ = NULL;

PCSList* PCSList::New(::google::protobuf::Arena* arena) const {
  PCSList* n = new PCSList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PCSList::Clear() {
  cs_items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PCSList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:udorx_pbf.PCSList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .udorx_pbf.PCSItem cs_items = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_cs_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_cs_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_cs_items;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:udorx_pbf.PCSList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:udorx_pbf.PCSList)
  return false;
#undef DO_
}

void PCSList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:udorx_pbf.PCSList)
  // repeated .udorx_pbf.PCSItem cs_items = 1;
  for (unsigned int i = 0, n = this->cs_items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cs_items(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:udorx_pbf.PCSList)
}

::google::protobuf::uint8* PCSList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:udorx_pbf.PCSList)
  // repeated .udorx_pbf.PCSItem cs_items = 1;
  for (unsigned int i = 0, n = this->cs_items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cs_items(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:udorx_pbf.PCSList)
  return target;
}

int PCSList::ByteSize() const {
  int total_size = 0;

  // repeated .udorx_pbf.PCSItem cs_items = 1;
  total_size += 1 * this->cs_items_size();
  for (int i = 0; i < this->cs_items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cs_items(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PCSList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PCSList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PCSList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PCSList::MergeFrom(const PCSList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  cs_items_.MergeFrom(from.cs_items_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PCSList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PCSList::CopyFrom(const PCSList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PCSList::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->cs_items())) return false;
  return true;
}

void PCSList::Swap(PCSList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PCSList::InternalSwap(PCSList* other) {
  cs_items_.UnsafeArenaSwap(&other->cs_items_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PCSList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PCSList_descriptor_;
  metadata.reflection = PCSList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PCSList

// repeated .udorx_pbf.PCSItem cs_items = 1;
int PCSList::cs_items_size() const {
  return cs_items_.size();
}
void PCSList::clear_cs_items() {
  cs_items_.Clear();
}
const ::udorx_pbf::PCSItem& PCSList::cs_items(int index) const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSList.cs_items)
  return cs_items_.Get(index);
}
::udorx_pbf::PCSItem* PCSList::mutable_cs_items(int index) {
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSList.cs_items)
  return cs_items_.Mutable(index);
}
::udorx_pbf::PCSItem* PCSList::add_cs_items() {
  // @@protoc_insertion_point(field_add:udorx_pbf.PCSList.cs_items)
  return cs_items_.Add();
}
::google::protobuf::RepeatedPtrField< ::udorx_pbf::PCSItem >*
PCSList::mutable_cs_items() {
  // @@protoc_insertion_point(field_mutable_list:udorx_pbf.PCSList.cs_items)
  return &cs_items_;
}
const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PCSItem >&
PCSList::cs_items() const {
  // @@protoc_insertion_point(field_list:udorx_pbf.PCSList.cs_items)
  return cs_items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PCSIStatusList::kCsStsItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PCSIStatusList::PCSIStatusList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:udorx_pbf.PCSIStatusList)
}

void PCSIStatusList::InitAsDefaultInstance() {
}

PCSIStatusList::PCSIStatusList(const PCSIStatusList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:udorx_pbf.PCSIStatusList)
}

void PCSIStatusList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PCSIStatusList::~PCSIStatusList() {
  // @@protoc_insertion_point(destructor:udorx_pbf.PCSIStatusList)
  SharedDtor();
}

void PCSIStatusList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PCSIStatusList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PCSIStatusList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PCSIStatusList_descriptor_;
}

const PCSIStatusList& PCSIStatusList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_udorx_5fcommon_2eproto();
  return *default_instance_;
}

PCSIStatusList* PCSIStatusList::default_instance_ = NULL;

PCSIStatusList* PCSIStatusList::New(::google::protobuf::Arena* arena) const {
  PCSIStatusList* n = new PCSIStatusList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PCSIStatusList::Clear() {
  cs_sts_items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PCSIStatusList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:udorx_pbf.PCSIStatusList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .udorx_pbf.PCSIStatus cs_sts_items = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_cs_sts_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_cs_sts_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_cs_sts_items;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:udorx_pbf.PCSIStatusList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:udorx_pbf.PCSIStatusList)
  return false;
#undef DO_
}

void PCSIStatusList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:udorx_pbf.PCSIStatusList)
  // repeated .udorx_pbf.PCSIStatus cs_sts_items = 1;
  for (unsigned int i = 0, n = this->cs_sts_items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cs_sts_items(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:udorx_pbf.PCSIStatusList)
}

::google::protobuf::uint8* PCSIStatusList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:udorx_pbf.PCSIStatusList)
  // repeated .udorx_pbf.PCSIStatus cs_sts_items = 1;
  for (unsigned int i = 0, n = this->cs_sts_items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cs_sts_items(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:udorx_pbf.PCSIStatusList)
  return target;
}

int PCSIStatusList::ByteSize() const {
  int total_size = 0;

  // repeated .udorx_pbf.PCSIStatus cs_sts_items = 1;
  total_size += 1 * this->cs_sts_items_size();
  for (int i = 0; i < this->cs_sts_items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cs_sts_items(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PCSIStatusList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PCSIStatusList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PCSIStatusList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PCSIStatusList::MergeFrom(const PCSIStatusList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  cs_sts_items_.MergeFrom(from.cs_sts_items_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PCSIStatusList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PCSIStatusList::CopyFrom(const PCSIStatusList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PCSIStatusList::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->cs_sts_items())) return false;
  return true;
}

void PCSIStatusList::Swap(PCSIStatusList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PCSIStatusList::InternalSwap(PCSIStatusList* other) {
  cs_sts_items_.UnsafeArenaSwap(&other->cs_sts_items_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PCSIStatusList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PCSIStatusList_descriptor_;
  metadata.reflection = PCSIStatusList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PCSIStatusList

// repeated .udorx_pbf.PCSIStatus cs_sts_items = 1;
int PCSIStatusList::cs_sts_items_size() const {
  return cs_sts_items_.size();
}
void PCSIStatusList::clear_cs_sts_items() {
  cs_sts_items_.Clear();
}
const ::udorx_pbf::PCSIStatus& PCSIStatusList::cs_sts_items(int index) const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PCSIStatusList.cs_sts_items)
  return cs_sts_items_.Get(index);
}
::udorx_pbf::PCSIStatus* PCSIStatusList::mutable_cs_sts_items(int index) {
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PCSIStatusList.cs_sts_items)
  return cs_sts_items_.Mutable(index);
}
::udorx_pbf::PCSIStatus* PCSIStatusList::add_cs_sts_items() {
  // @@protoc_insertion_point(field_add:udorx_pbf.PCSIStatusList.cs_sts_items)
  return cs_sts_items_.Add();
}
::google::protobuf::RepeatedPtrField< ::udorx_pbf::PCSIStatus >*
PCSIStatusList::mutable_cs_sts_items() {
  // @@protoc_insertion_point(field_mutable_list:udorx_pbf.PCSIStatusList.cs_sts_items)
  return &cs_sts_items_;
}
const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PCSIStatus >&
PCSIStatusList::cs_sts_items() const {
  // @@protoc_insertion_point(field_list:udorx_pbf.PCSIStatusList.cs_sts_items)
  return cs_sts_items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PConf::kUtcOffFieldNumber;
const int PConf::kDlsFieldNumber;
const int PConf::kParam1FieldNumber;
const int PConf::kParam2FieldNumber;
const int PConf::kParam3FieldNumber;
const int PConf::kParam4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PConf::PConf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:udorx_pbf.PConf)
}

void PConf::InitAsDefaultInstance() {
}

PConf::PConf(const PConf& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:udorx_pbf.PConf)
}

void PConf::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  utcoff_ = 0;
  dls_ = 0;
  param1_ = 0;
  param2_ = 0;
  param3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PConf::~PConf() {
  // @@protoc_insertion_point(destructor:udorx_pbf.PConf)
  SharedDtor();
}

void PConf::SharedDtor() {
  param3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param4_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PConf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PConf::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PConf_descriptor_;
}

const PConf& PConf::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_udorx_5fcommon_2eproto();
  return *default_instance_;
}

PConf* PConf::default_instance_ = NULL;

PConf* PConf::New(::google::protobuf::Arena* arena) const {
  PConf* n = new PConf;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PConf::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PConf*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(utcoff_, param2_);
    if (has_param3()) {
      param3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_param4()) {
      param4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PConf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:udorx_pbf.PConf)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 utcOff = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &utcoff_)));
          set_has_utcoff();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dls;
        break;
      }

      // required int32 dls = 2;
      case 2: {
        if (tag == 16) {
         parse_dls:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dls_)));
          set_has_dls();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_param1;
        break;
      }

      // optional int32 param1 = 3;
      case 3: {
        if (tag == 24) {
         parse_param1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param1_)));
          set_has_param1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_param2;
        break;
      }

      // optional int32 param2 = 4;
      case 4: {
        if (tag == 32) {
         parse_param2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param2_)));
          set_has_param2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_param3;
        break;
      }

      // optional string param3 = 5;
      case 5: {
        if (tag == 42) {
         parse_param3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param3().data(), this->param3().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PConf.param3");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_param4;
        break;
      }

      // optional string param4 = 6;
      case 6: {
        if (tag == 50) {
         parse_param4:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param4()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param4().data(), this->param4().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PConf.param4");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:udorx_pbf.PConf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:udorx_pbf.PConf)
  return false;
#undef DO_
}

void PConf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:udorx_pbf.PConf)
  // required int32 utcOff = 1;
  if (has_utcoff()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->utcoff(), output);
  }

  // required int32 dls = 2;
  if (has_dls()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dls(), output);
  }

  // optional int32 param1 = 3;
  if (has_param1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->param1(), output);
  }

  // optional int32 param2 = 4;
  if (has_param2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->param2(), output);
  }

  // optional string param3 = 5;
  if (has_param3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param3().data(), this->param3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PConf.param3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->param3(), output);
  }

  // optional string param4 = 6;
  if (has_param4()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param4().data(), this->param4().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PConf.param4");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->param4(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:udorx_pbf.PConf)
}

::google::protobuf::uint8* PConf::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:udorx_pbf.PConf)
  // required int32 utcOff = 1;
  if (has_utcoff()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->utcoff(), target);
  }

  // required int32 dls = 2;
  if (has_dls()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dls(), target);
  }

  // optional int32 param1 = 3;
  if (has_param1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->param1(), target);
  }

  // optional int32 param2 = 4;
  if (has_param2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->param2(), target);
  }

  // optional string param3 = 5;
  if (has_param3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param3().data(), this->param3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PConf.param3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->param3(), target);
  }

  // optional string param4 = 6;
  if (has_param4()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param4().data(), this->param4().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PConf.param4");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->param4(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:udorx_pbf.PConf)
  return target;
}

int PConf::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_utcoff()) {
    // required int32 utcOff = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->utcoff());
  }

  if (has_dls()) {
    // required int32 dls = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dls());
  }

  return total_size;
}
int PConf::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 utcOff = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->utcoff());

    // required int32 dls = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dls());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 60u) {
    // optional int32 param1 = 3;
    if (has_param1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->param1());
    }

    // optional int32 param2 = 4;
    if (has_param2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->param2());
    }

    // optional string param3 = 5;
    if (has_param3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param3());
    }

    // optional string param4 = 6;
    if (has_param4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param4());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PConf::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PConf* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PConf>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PConf::MergeFrom(const PConf& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_utcoff()) {
      set_utcoff(from.utcoff());
    }
    if (from.has_dls()) {
      set_dls(from.dls());
    }
    if (from.has_param1()) {
      set_param1(from.param1());
    }
    if (from.has_param2()) {
      set_param2(from.param2());
    }
    if (from.has_param3()) {
      set_has_param3();
      param3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param3_);
    }
    if (from.has_param4()) {
      set_has_param4();
      param4_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param4_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PConf::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PConf::CopyFrom(const PConf& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PConf::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PConf::Swap(PConf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PConf::InternalSwap(PConf* other) {
  std::swap(utcoff_, other->utcoff_);
  std::swap(dls_, other->dls_);
  std::swap(param1_, other->param1_);
  std::swap(param2_, other->param2_);
  param3_.Swap(&other->param3_);
  param4_.Swap(&other->param4_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PConf::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PConf_descriptor_;
  metadata.reflection = PConf_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PConf

// required int32 utcOff = 1;
bool PConf::has_utcoff() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PConf::set_has_utcoff() {
  _has_bits_[0] |= 0x00000001u;
}
void PConf::clear_has_utcoff() {
  _has_bits_[0] &= ~0x00000001u;
}
void PConf::clear_utcoff() {
  utcoff_ = 0;
  clear_has_utcoff();
}
 ::google::protobuf::int32 PConf::utcoff() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PConf.utcOff)
  return utcoff_;
}
 void PConf::set_utcoff(::google::protobuf::int32 value) {
  set_has_utcoff();
  utcoff_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PConf.utcOff)
}

// required int32 dls = 2;
bool PConf::has_dls() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PConf::set_has_dls() {
  _has_bits_[0] |= 0x00000002u;
}
void PConf::clear_has_dls() {
  _has_bits_[0] &= ~0x00000002u;
}
void PConf::clear_dls() {
  dls_ = 0;
  clear_has_dls();
}
 ::google::protobuf::int32 PConf::dls() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PConf.dls)
  return dls_;
}
 void PConf::set_dls(::google::protobuf::int32 value) {
  set_has_dls();
  dls_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PConf.dls)
}

// optional int32 param1 = 3;
bool PConf::has_param1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PConf::set_has_param1() {
  _has_bits_[0] |= 0x00000004u;
}
void PConf::clear_has_param1() {
  _has_bits_[0] &= ~0x00000004u;
}
void PConf::clear_param1() {
  param1_ = 0;
  clear_has_param1();
}
 ::google::protobuf::int32 PConf::param1() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PConf.param1)
  return param1_;
}
 void PConf::set_param1(::google::protobuf::int32 value) {
  set_has_param1();
  param1_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PConf.param1)
}

// optional int32 param2 = 4;
bool PConf::has_param2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PConf::set_has_param2() {
  _has_bits_[0] |= 0x00000008u;
}
void PConf::clear_has_param2() {
  _has_bits_[0] &= ~0x00000008u;
}
void PConf::clear_param2() {
  param2_ = 0;
  clear_has_param2();
}
 ::google::protobuf::int32 PConf::param2() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PConf.param2)
  return param2_;
}
 void PConf::set_param2(::google::protobuf::int32 value) {
  set_has_param2();
  param2_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PConf.param2)
}

// optional string param3 = 5;
bool PConf::has_param3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PConf::set_has_param3() {
  _has_bits_[0] |= 0x00000010u;
}
void PConf::clear_has_param3() {
  _has_bits_[0] &= ~0x00000010u;
}
void PConf::clear_param3() {
  param3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_param3();
}
 const ::std::string& PConf::param3() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PConf.param3)
  return param3_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PConf::set_param3(const ::std::string& value) {
  set_has_param3();
  param3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PConf.param3)
}
 void PConf::set_param3(const char* value) {
  set_has_param3();
  param3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PConf.param3)
}
 void PConf::set_param3(const char* value, size_t size) {
  set_has_param3();
  param3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PConf.param3)
}
 ::std::string* PConf::mutable_param3() {
  set_has_param3();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PConf.param3)
  return param3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PConf::release_param3() {
  clear_has_param3();
  return param3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PConf::set_allocated_param3(::std::string* param3) {
  if (param3 != NULL) {
    set_has_param3();
  } else {
    clear_has_param3();
  }
  param3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param3);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PConf.param3)
}

// optional string param4 = 6;
bool PConf::has_param4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PConf::set_has_param4() {
  _has_bits_[0] |= 0x00000020u;
}
void PConf::clear_has_param4() {
  _has_bits_[0] &= ~0x00000020u;
}
void PConf::clear_param4() {
  param4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_param4();
}
 const ::std::string& PConf::param4() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PConf.param4)
  return param4_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PConf::set_param4(const ::std::string& value) {
  set_has_param4();
  param4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PConf.param4)
}
 void PConf::set_param4(const char* value) {
  set_has_param4();
  param4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PConf.param4)
}
 void PConf::set_param4(const char* value, size_t size) {
  set_has_param4();
  param4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PConf.param4)
}
 ::std::string* PConf::mutable_param4() {
  set_has_param4();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PConf.param4)
  return param4_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PConf::release_param4() {
  clear_has_param4();
  return param4_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PConf::set_allocated_param4(::std::string* param4) {
  if (param4 != NULL) {
    set_has_param4();
  } else {
    clear_has_param4();
  }
  param4_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param4);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PConf.param4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PEmpl::kIDFieldNumber;
const int PEmpl::kDrNameFieldNumber;
const int PEmpl::kUserFieldNumber;
const int PEmpl::kEmailFieldNumber;
const int PEmpl::kPassFieldNumber;
const int PEmpl::kLicenseFieldNumber;
const int PEmpl::kCountryFieldNumber;
const int PEmpl::kSignFieldNumber;
const int PEmpl::kCIDFieldNumber;
const int PEmpl::kCycleFieldNumber;
const int PEmpl::kHExcFieldNumber;
const int PEmpl::kTZFieldNumber;
const int PEmpl::kHaddrFieldNumber;
const int PEmpl::kSupervFieldNumber;
const int PEmpl::kStateFieldNumber;
const int PEmpl::kOrgNameFieldNumber;
const int PEmpl::kOrgAddrFieldNumber;
const int PEmpl::kPhotoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PEmpl::PEmpl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:udorx_pbf.PEmpl)
}

void PEmpl::InitAsDefaultInstance() {
}

PEmpl::PEmpl(const PEmpl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:udorx_pbf.PEmpl)
}

void PEmpl::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  drname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  license_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cid_ = 0;
  cycle_ = 0;
  h_exc_ = 0;
  tz_ = 0;
  haddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  superv_ = 0;
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orgname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orgaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  photo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PEmpl::~PEmpl() {
  // @@protoc_insertion_point(destructor:udorx_pbf.PEmpl)
  SharedDtor();
}

void PEmpl::SharedDtor() {
  drname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  license_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  haddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orgname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orgaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  photo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PEmpl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PEmpl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PEmpl_descriptor_;
}

const PEmpl& PEmpl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_udorx_5fcommon_2eproto();
  return *default_instance_;
}

PEmpl* PEmpl::default_instance_ = NULL;

PEmpl* PEmpl::New(::google::protobuf::Arena* arena) const {
  PEmpl* n = new PEmpl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PEmpl::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PEmpl*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    id_ = 0;
    if (has_drname()) {
      drname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_user()) {
      user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_email()) {
      email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_pass()) {
      pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_license()) {
      license_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_country()) {
      country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_sign()) {
      sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ZR_(cycle_, h_exc_);
    ZR_(tz_, superv_);
    cid_ = 0;
    if (has_haddr()) {
      haddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_state()) {
      state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_orgname()) {
      orgname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[16 / 32] & 196608u) {
    if (has_orgaddr()) {
      orgaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_photo()) {
      photo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PEmpl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:udorx_pbf.PEmpl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_DrName;
        break;
      }

      // required string DrName = 2;
      case 2: {
        if (tag == 18) {
         parse_DrName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_drname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->drname().data(), this->drname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PEmpl.DrName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_User;
        break;
      }

      // optional string User = 3;
      case 3: {
        if (tag == 26) {
         parse_User:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user().data(), this->user().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PEmpl.User");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Email;
        break;
      }

      // optional string Email = 4;
      case 4: {
        if (tag == 34) {
         parse_Email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PEmpl.Email");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Pass;
        break;
      }

      // optional string Pass = 5;
      case 5: {
        if (tag == 42) {
         parse_Pass:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pass()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pass().data(), this->pass().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PEmpl.Pass");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_License;
        break;
      }

      // optional string License = 6;
      case 6: {
        if (tag == 50) {
         parse_License:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_license()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->license().data(), this->license().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PEmpl.License");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_Country;
        break;
      }

      // optional string Country = 7;
      case 7: {
        if (tag == 58) {
         parse_Country:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country().data(), this->country().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PEmpl.Country");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_Sign;
        break;
      }

      // optional bytes Sign = 8;
      case 8: {
        if (tag == 66) {
         parse_Sign:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sign()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_CID;
        break;
      }

      // optional int32 CID = 9;
      case 9: {
        if (tag == 72) {
         parse_CID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cid_)));
          set_has_cid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_Cycle;
        break;
      }

      // optional int32 Cycle = 10;
      case 10: {
        if (tag == 80) {
         parse_Cycle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cycle_)));
          set_has_cycle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_h_exc;
        break;
      }

      // optional int32 h_exc = 11;
      case 11: {
        if (tag == 88) {
         parse_h_exc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &h_exc_)));
          set_has_h_exc();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_TZ;
        break;
      }

      // optional int32 TZ = 12;
      case 12: {
        if (tag == 96) {
         parse_TZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tz_)));
          set_has_tz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_haddr;
        break;
      }

      // optional string haddr = 13;
      case 13: {
        if (tag == 106) {
         parse_haddr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_haddr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->haddr().data(), this->haddr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PEmpl.haddr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_superv;
        break;
      }

      // optional int32 superv = 14;
      case 14: {
        if (tag == 112) {
         parse_superv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &superv_)));
          set_has_superv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_State;
        break;
      }

      // optional string State = 15;
      case 15: {
        if (tag == 122) {
         parse_State:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->state().data(), this->state().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PEmpl.State");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_OrgName;
        break;
      }

      // optional string OrgName = 16;
      case 16: {
        if (tag == 130) {
         parse_OrgName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orgname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->orgname().data(), this->orgname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PEmpl.OrgName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_OrgAddr;
        break;
      }

      // optional string OrgAddr = 17;
      case 17: {
        if (tag == 138) {
         parse_OrgAddr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orgaddr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->orgaddr().data(), this->orgaddr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PEmpl.OrgAddr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_photo;
        break;
      }

      // optional string photo = 18;
      case 18: {
        if (tag == 146) {
         parse_photo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_photo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->photo().data(), this->photo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PEmpl.photo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:udorx_pbf.PEmpl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:udorx_pbf.PEmpl)
  return false;
#undef DO_
}

void PEmpl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:udorx_pbf.PEmpl)
  // required int32 ID = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required string DrName = 2;
  if (has_drname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->drname().data(), this->drname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PEmpl.DrName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->drname(), output);
  }

  // optional string User = 3;
  if (has_user()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), this->user().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PEmpl.User");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->user(), output);
  }

  // optional string Email = 4;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PEmpl.Email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->email(), output);
  }

  // optional string Pass = 5;
  if (has_pass()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pass().data(), this->pass().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PEmpl.Pass");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->pass(), output);
  }

  // optional string License = 6;
  if (has_license()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->license().data(), this->license().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PEmpl.License");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->license(), output);
  }

  // optional string Country = 7;
  if (has_country()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PEmpl.Country");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->country(), output);
  }

  // optional bytes Sign = 8;
  if (has_sign()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->sign(), output);
  }

  // optional int32 CID = 9;
  if (has_cid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->cid(), output);
  }

  // optional int32 Cycle = 10;
  if (has_cycle()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->cycle(), output);
  }

  // optional int32 h_exc = 11;
  if (has_h_exc()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->h_exc(), output);
  }

  // optional int32 TZ = 12;
  if (has_tz()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->tz(), output);
  }

  // optional string haddr = 13;
  if (has_haddr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->haddr().data(), this->haddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PEmpl.haddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->haddr(), output);
  }

  // optional int32 superv = 14;
  if (has_superv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->superv(), output);
  }

  // optional string State = 15;
  if (has_state()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), this->state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PEmpl.State");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->state(), output);
  }

  // optional string OrgName = 16;
  if (has_orgname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orgname().data(), this->orgname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PEmpl.OrgName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->orgname(), output);
  }

  // optional string OrgAddr = 17;
  if (has_orgaddr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orgaddr().data(), this->orgaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PEmpl.OrgAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->orgaddr(), output);
  }

  // optional string photo = 18;
  if (has_photo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->photo().data(), this->photo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PEmpl.photo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->photo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:udorx_pbf.PEmpl)
}

::google::protobuf::uint8* PEmpl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:udorx_pbf.PEmpl)
  // required int32 ID = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required string DrName = 2;
  if (has_drname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->drname().data(), this->drname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PEmpl.DrName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->drname(), target);
  }

  // optional string User = 3;
  if (has_user()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), this->user().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PEmpl.User");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->user(), target);
  }

  // optional string Email = 4;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PEmpl.Email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->email(), target);
  }

  // optional string Pass = 5;
  if (has_pass()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pass().data(), this->pass().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PEmpl.Pass");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->pass(), target);
  }

  // optional string License = 6;
  if (has_license()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->license().data(), this->license().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PEmpl.License");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->license(), target);
  }

  // optional string Country = 7;
  if (has_country()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PEmpl.Country");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->country(), target);
  }

  // optional bytes Sign = 8;
  if (has_sign()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->sign(), target);
  }

  // optional int32 CID = 9;
  if (has_cid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->cid(), target);
  }

  // optional int32 Cycle = 10;
  if (has_cycle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->cycle(), target);
  }

  // optional int32 h_exc = 11;
  if (has_h_exc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->h_exc(), target);
  }

  // optional int32 TZ = 12;
  if (has_tz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->tz(), target);
  }

  // optional string haddr = 13;
  if (has_haddr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->haddr().data(), this->haddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PEmpl.haddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->haddr(), target);
  }

  // optional int32 superv = 14;
  if (has_superv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->superv(), target);
  }

  // optional string State = 15;
  if (has_state()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), this->state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PEmpl.State");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->state(), target);
  }

  // optional string OrgName = 16;
  if (has_orgname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orgname().data(), this->orgname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PEmpl.OrgName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->orgname(), target);
  }

  // optional string OrgAddr = 17;
  if (has_orgaddr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->orgaddr().data(), this->orgaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PEmpl.OrgAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->orgaddr(), target);
  }

  // optional string photo = 18;
  if (has_photo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->photo().data(), this->photo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PEmpl.photo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->photo(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:udorx_pbf.PEmpl)
  return target;
}

int PEmpl::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_id()) {
    // required int32 ID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_drname()) {
    // required string DrName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->drname());
  }

  return total_size;
}
int PEmpl::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 ID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required string DrName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->drname());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 252u) {
    // optional string User = 3;
    if (has_user()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user());
    }

    // optional string Email = 4;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }

    // optional string Pass = 5;
    if (has_pass()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pass());
    }

    // optional string License = 6;
    if (has_license()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->license());
    }

    // optional string Country = 7;
    if (has_country()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country());
    }

    // optional bytes Sign = 8;
    if (has_sign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sign());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 CID = 9;
    if (has_cid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cid());
    }

    // optional int32 Cycle = 10;
    if (has_cycle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cycle());
    }

    // optional int32 h_exc = 11;
    if (has_h_exc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->h_exc());
    }

    // optional int32 TZ = 12;
    if (has_tz()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tz());
    }

    // optional string haddr = 13;
    if (has_haddr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->haddr());
    }

    // optional int32 superv = 14;
    if (has_superv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->superv());
    }

    // optional string State = 15;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->state());
    }

    // optional string OrgName = 16;
    if (has_orgname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->orgname());
    }

  }
  if (_has_bits_[16 / 32] & 196608u) {
    // optional string OrgAddr = 17;
    if (has_orgaddr()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->orgaddr());
    }

    // optional string photo = 18;
    if (has_photo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->photo());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PEmpl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PEmpl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PEmpl>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PEmpl::MergeFrom(const PEmpl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_drname()) {
      set_has_drname();
      drname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drname_);
    }
    if (from.has_user()) {
      set_has_user();
      user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
    }
    if (from.has_email()) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (from.has_pass()) {
      set_has_pass();
      pass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pass_);
    }
    if (from.has_license()) {
      set_has_license();
      license_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.license_);
    }
    if (from.has_country()) {
      set_has_country();
      country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
    }
    if (from.has_sign()) {
      set_has_sign();
      sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_cid()) {
      set_cid(from.cid());
    }
    if (from.has_cycle()) {
      set_cycle(from.cycle());
    }
    if (from.has_h_exc()) {
      set_h_exc(from.h_exc());
    }
    if (from.has_tz()) {
      set_tz(from.tz());
    }
    if (from.has_haddr()) {
      set_has_haddr();
      haddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.haddr_);
    }
    if (from.has_superv()) {
      set_superv(from.superv());
    }
    if (from.has_state()) {
      set_has_state();
      state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
    }
    if (from.has_orgname()) {
      set_has_orgname();
      orgname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orgname_);
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_orgaddr()) {
      set_has_orgaddr();
      orgaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orgaddr_);
    }
    if (from.has_photo()) {
      set_has_photo();
      photo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.photo_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PEmpl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PEmpl::CopyFrom(const PEmpl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PEmpl::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PEmpl::Swap(PEmpl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PEmpl::InternalSwap(PEmpl* other) {
  std::swap(id_, other->id_);
  drname_.Swap(&other->drname_);
  user_.Swap(&other->user_);
  email_.Swap(&other->email_);
  pass_.Swap(&other->pass_);
  license_.Swap(&other->license_);
  country_.Swap(&other->country_);
  sign_.Swap(&other->sign_);
  std::swap(cid_, other->cid_);
  std::swap(cycle_, other->cycle_);
  std::swap(h_exc_, other->h_exc_);
  std::swap(tz_, other->tz_);
  haddr_.Swap(&other->haddr_);
  std::swap(superv_, other->superv_);
  state_.Swap(&other->state_);
  orgname_.Swap(&other->orgname_);
  orgaddr_.Swap(&other->orgaddr_);
  photo_.Swap(&other->photo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PEmpl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PEmpl_descriptor_;
  metadata.reflection = PEmpl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PEmpl

// required int32 ID = 1;
bool PEmpl::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PEmpl::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void PEmpl::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void PEmpl::clear_id() {
  id_ = 0;
  clear_has_id();
}
 ::google::protobuf::int32 PEmpl::id() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.ID)
  return id_;
}
 void PEmpl::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.ID)
}

// required string DrName = 2;
bool PEmpl::has_drname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PEmpl::set_has_drname() {
  _has_bits_[0] |= 0x00000002u;
}
void PEmpl::clear_has_drname() {
  _has_bits_[0] &= ~0x00000002u;
}
void PEmpl::clear_drname() {
  drname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_drname();
}
 const ::std::string& PEmpl::drname() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.DrName)
  return drname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_drname(const ::std::string& value) {
  set_has_drname();
  drname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.DrName)
}
 void PEmpl::set_drname(const char* value) {
  set_has_drname();
  drname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.DrName)
}
 void PEmpl::set_drname(const char* value, size_t size) {
  set_has_drname();
  drname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.DrName)
}
 ::std::string* PEmpl::mutable_drname() {
  set_has_drname();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.DrName)
  return drname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PEmpl::release_drname() {
  clear_has_drname();
  return drname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_allocated_drname(::std::string* drname) {
  if (drname != NULL) {
    set_has_drname();
  } else {
    clear_has_drname();
  }
  drname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), drname);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.DrName)
}

// optional string User = 3;
bool PEmpl::has_user() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PEmpl::set_has_user() {
  _has_bits_[0] |= 0x00000004u;
}
void PEmpl::clear_has_user() {
  _has_bits_[0] &= ~0x00000004u;
}
void PEmpl::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user();
}
 const ::std::string& PEmpl::user() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.User)
  return user_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_user(const ::std::string& value) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.User)
}
 void PEmpl::set_user(const char* value) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.User)
}
 void PEmpl::set_user(const char* value, size_t size) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.User)
}
 ::std::string* PEmpl::mutable_user() {
  set_has_user();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.User)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PEmpl::release_user() {
  clear_has_user();
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_allocated_user(::std::string* user) {
  if (user != NULL) {
    set_has_user();
  } else {
    clear_has_user();
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.User)
}

// optional string Email = 4;
bool PEmpl::has_email() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PEmpl::set_has_email() {
  _has_bits_[0] |= 0x00000008u;
}
void PEmpl::clear_has_email() {
  _has_bits_[0] &= ~0x00000008u;
}
void PEmpl::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
 const ::std::string& PEmpl::email() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.Email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.Email)
}
 void PEmpl::set_email(const char* value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.Email)
}
 void PEmpl::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.Email)
}
 ::std::string* PEmpl::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.Email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PEmpl::release_email() {
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.Email)
}

// optional string Pass = 5;
bool PEmpl::has_pass() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PEmpl::set_has_pass() {
  _has_bits_[0] |= 0x00000010u;
}
void PEmpl::clear_has_pass() {
  _has_bits_[0] &= ~0x00000010u;
}
void PEmpl::clear_pass() {
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pass();
}
 const ::std::string& PEmpl::pass() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.Pass)
  return pass_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_pass(const ::std::string& value) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.Pass)
}
 void PEmpl::set_pass(const char* value) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.Pass)
}
 void PEmpl::set_pass(const char* value, size_t size) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.Pass)
}
 ::std::string* PEmpl::mutable_pass() {
  set_has_pass();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.Pass)
  return pass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PEmpl::release_pass() {
  clear_has_pass();
  return pass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_allocated_pass(::std::string* pass) {
  if (pass != NULL) {
    set_has_pass();
  } else {
    clear_has_pass();
  }
  pass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pass);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.Pass)
}

// optional string License = 6;
bool PEmpl::has_license() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PEmpl::set_has_license() {
  _has_bits_[0] |= 0x00000020u;
}
void PEmpl::clear_has_license() {
  _has_bits_[0] &= ~0x00000020u;
}
void PEmpl::clear_license() {
  license_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_license();
}
 const ::std::string& PEmpl::license() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.License)
  return license_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_license(const ::std::string& value) {
  set_has_license();
  license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.License)
}
 void PEmpl::set_license(const char* value) {
  set_has_license();
  license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.License)
}
 void PEmpl::set_license(const char* value, size_t size) {
  set_has_license();
  license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.License)
}
 ::std::string* PEmpl::mutable_license() {
  set_has_license();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.License)
  return license_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PEmpl::release_license() {
  clear_has_license();
  return license_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_allocated_license(::std::string* license) {
  if (license != NULL) {
    set_has_license();
  } else {
    clear_has_license();
  }
  license_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), license);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.License)
}

// optional string Country = 7;
bool PEmpl::has_country() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PEmpl::set_has_country() {
  _has_bits_[0] |= 0x00000040u;
}
void PEmpl::clear_has_country() {
  _has_bits_[0] &= ~0x00000040u;
}
void PEmpl::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country();
}
 const ::std::string& PEmpl::country() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.Country)
  return country_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_country(const ::std::string& value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.Country)
}
 void PEmpl::set_country(const char* value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.Country)
}
 void PEmpl::set_country(const char* value, size_t size) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.Country)
}
 ::std::string* PEmpl::mutable_country() {
  set_has_country();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.Country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PEmpl::release_country() {
  clear_has_country();
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    set_has_country();
  } else {
    clear_has_country();
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.Country)
}

// optional bytes Sign = 8;
bool PEmpl::has_sign() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void PEmpl::set_has_sign() {
  _has_bits_[0] |= 0x00000080u;
}
void PEmpl::clear_has_sign() {
  _has_bits_[0] &= ~0x00000080u;
}
void PEmpl::clear_sign() {
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sign();
}
 const ::std::string& PEmpl::sign() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.Sign)
  return sign_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_sign(const ::std::string& value) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.Sign)
}
 void PEmpl::set_sign(const char* value) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.Sign)
}
 void PEmpl::set_sign(const void* value, size_t size) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.Sign)
}
 ::std::string* PEmpl::mutable_sign() {
  set_has_sign();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.Sign)
  return sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PEmpl::release_sign() {
  clear_has_sign();
  return sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_allocated_sign(::std::string* sign) {
  if (sign != NULL) {
    set_has_sign();
  } else {
    clear_has_sign();
  }
  sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.Sign)
}

// optional int32 CID = 9;
bool PEmpl::has_cid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void PEmpl::set_has_cid() {
  _has_bits_[0] |= 0x00000100u;
}
void PEmpl::clear_has_cid() {
  _has_bits_[0] &= ~0x00000100u;
}
void PEmpl::clear_cid() {
  cid_ = 0;
  clear_has_cid();
}
 ::google::protobuf::int32 PEmpl::cid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.CID)
  return cid_;
}
 void PEmpl::set_cid(::google::protobuf::int32 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.CID)
}

// optional int32 Cycle = 10;
bool PEmpl::has_cycle() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void PEmpl::set_has_cycle() {
  _has_bits_[0] |= 0x00000200u;
}
void PEmpl::clear_has_cycle() {
  _has_bits_[0] &= ~0x00000200u;
}
void PEmpl::clear_cycle() {
  cycle_ = 0;
  clear_has_cycle();
}
 ::google::protobuf::int32 PEmpl::cycle() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.Cycle)
  return cycle_;
}
 void PEmpl::set_cycle(::google::protobuf::int32 value) {
  set_has_cycle();
  cycle_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.Cycle)
}

// optional int32 h_exc = 11;
bool PEmpl::has_h_exc() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void PEmpl::set_has_h_exc() {
  _has_bits_[0] |= 0x00000400u;
}
void PEmpl::clear_has_h_exc() {
  _has_bits_[0] &= ~0x00000400u;
}
void PEmpl::clear_h_exc() {
  h_exc_ = 0;
  clear_has_h_exc();
}
 ::google::protobuf::int32 PEmpl::h_exc() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.h_exc)
  return h_exc_;
}
 void PEmpl::set_h_exc(::google::protobuf::int32 value) {
  set_has_h_exc();
  h_exc_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.h_exc)
}

// optional int32 TZ = 12;
bool PEmpl::has_tz() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void PEmpl::set_has_tz() {
  _has_bits_[0] |= 0x00000800u;
}
void PEmpl::clear_has_tz() {
  _has_bits_[0] &= ~0x00000800u;
}
void PEmpl::clear_tz() {
  tz_ = 0;
  clear_has_tz();
}
 ::google::protobuf::int32 PEmpl::tz() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.TZ)
  return tz_;
}
 void PEmpl::set_tz(::google::protobuf::int32 value) {
  set_has_tz();
  tz_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.TZ)
}

// optional string haddr = 13;
bool PEmpl::has_haddr() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void PEmpl::set_has_haddr() {
  _has_bits_[0] |= 0x00001000u;
}
void PEmpl::clear_has_haddr() {
  _has_bits_[0] &= ~0x00001000u;
}
void PEmpl::clear_haddr() {
  haddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_haddr();
}
 const ::std::string& PEmpl::haddr() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.haddr)
  return haddr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_haddr(const ::std::string& value) {
  set_has_haddr();
  haddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.haddr)
}
 void PEmpl::set_haddr(const char* value) {
  set_has_haddr();
  haddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.haddr)
}
 void PEmpl::set_haddr(const char* value, size_t size) {
  set_has_haddr();
  haddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.haddr)
}
 ::std::string* PEmpl::mutable_haddr() {
  set_has_haddr();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.haddr)
  return haddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PEmpl::release_haddr() {
  clear_has_haddr();
  return haddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_allocated_haddr(::std::string* haddr) {
  if (haddr != NULL) {
    set_has_haddr();
  } else {
    clear_has_haddr();
  }
  haddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), haddr);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.haddr)
}

// optional int32 superv = 14;
bool PEmpl::has_superv() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void PEmpl::set_has_superv() {
  _has_bits_[0] |= 0x00002000u;
}
void PEmpl::clear_has_superv() {
  _has_bits_[0] &= ~0x00002000u;
}
void PEmpl::clear_superv() {
  superv_ = 0;
  clear_has_superv();
}
 ::google::protobuf::int32 PEmpl::superv() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.superv)
  return superv_;
}
 void PEmpl::set_superv(::google::protobuf::int32 value) {
  set_has_superv();
  superv_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.superv)
}

// optional string State = 15;
bool PEmpl::has_state() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void PEmpl::set_has_state() {
  _has_bits_[0] |= 0x00004000u;
}
void PEmpl::clear_has_state() {
  _has_bits_[0] &= ~0x00004000u;
}
void PEmpl::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_state();
}
 const ::std::string& PEmpl::state() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.State)
  return state_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_state(const ::std::string& value) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.State)
}
 void PEmpl::set_state(const char* value) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.State)
}
 void PEmpl::set_state(const char* value, size_t size) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.State)
}
 ::std::string* PEmpl::mutable_state() {
  set_has_state();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.State)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PEmpl::release_state() {
  clear_has_state();
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_allocated_state(::std::string* state) {
  if (state != NULL) {
    set_has_state();
  } else {
    clear_has_state();
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.State)
}

// optional string OrgName = 16;
bool PEmpl::has_orgname() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void PEmpl::set_has_orgname() {
  _has_bits_[0] |= 0x00008000u;
}
void PEmpl::clear_has_orgname() {
  _has_bits_[0] &= ~0x00008000u;
}
void PEmpl::clear_orgname() {
  orgname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_orgname();
}
 const ::std::string& PEmpl::orgname() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.OrgName)
  return orgname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_orgname(const ::std::string& value) {
  set_has_orgname();
  orgname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.OrgName)
}
 void PEmpl::set_orgname(const char* value) {
  set_has_orgname();
  orgname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.OrgName)
}
 void PEmpl::set_orgname(const char* value, size_t size) {
  set_has_orgname();
  orgname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.OrgName)
}
 ::std::string* PEmpl::mutable_orgname() {
  set_has_orgname();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.OrgName)
  return orgname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PEmpl::release_orgname() {
  clear_has_orgname();
  return orgname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_allocated_orgname(::std::string* orgname) {
  if (orgname != NULL) {
    set_has_orgname();
  } else {
    clear_has_orgname();
  }
  orgname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orgname);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.OrgName)
}

// optional string OrgAddr = 17;
bool PEmpl::has_orgaddr() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void PEmpl::set_has_orgaddr() {
  _has_bits_[0] |= 0x00010000u;
}
void PEmpl::clear_has_orgaddr() {
  _has_bits_[0] &= ~0x00010000u;
}
void PEmpl::clear_orgaddr() {
  orgaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_orgaddr();
}
 const ::std::string& PEmpl::orgaddr() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.OrgAddr)
  return orgaddr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_orgaddr(const ::std::string& value) {
  set_has_orgaddr();
  orgaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.OrgAddr)
}
 void PEmpl::set_orgaddr(const char* value) {
  set_has_orgaddr();
  orgaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.OrgAddr)
}
 void PEmpl::set_orgaddr(const char* value, size_t size) {
  set_has_orgaddr();
  orgaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.OrgAddr)
}
 ::std::string* PEmpl::mutable_orgaddr() {
  set_has_orgaddr();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.OrgAddr)
  return orgaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PEmpl::release_orgaddr() {
  clear_has_orgaddr();
  return orgaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_allocated_orgaddr(::std::string* orgaddr) {
  if (orgaddr != NULL) {
    set_has_orgaddr();
  } else {
    clear_has_orgaddr();
  }
  orgaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orgaddr);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.OrgAddr)
}

// optional string photo = 18;
bool PEmpl::has_photo() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void PEmpl::set_has_photo() {
  _has_bits_[0] |= 0x00020000u;
}
void PEmpl::clear_has_photo() {
  _has_bits_[0] &= ~0x00020000u;
}
void PEmpl::clear_photo() {
  photo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_photo();
}
 const ::std::string& PEmpl::photo() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PEmpl.photo)
  return photo_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_photo(const ::std::string& value) {
  set_has_photo();
  photo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PEmpl.photo)
}
 void PEmpl::set_photo(const char* value) {
  set_has_photo();
  photo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PEmpl.photo)
}
 void PEmpl::set_photo(const char* value, size_t size) {
  set_has_photo();
  photo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PEmpl.photo)
}
 ::std::string* PEmpl::mutable_photo() {
  set_has_photo();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PEmpl.photo)
  return photo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PEmpl::release_photo() {
  clear_has_photo();
  return photo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PEmpl::set_allocated_photo(::std::string* photo) {
  if (photo != NULL) {
    set_has_photo();
  } else {
    clear_has_photo();
  }
  photo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), photo);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PEmpl.photo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PRegister::kUserFieldNumber;
const int PRegister::kPassFieldNumber;
const int PRegister::kFnameFieldNumber;
const int PRegister::kEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PRegister::PRegister()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:udorx_pbf.PRegister)
}

void PRegister::InitAsDefaultInstance() {
}

PRegister::PRegister(const PRegister& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:udorx_pbf.PRegister)
}

void PRegister::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PRegister::~PRegister() {
  // @@protoc_insertion_point(destructor:udorx_pbf.PRegister)
  SharedDtor();
}

void PRegister::SharedDtor() {
  user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PRegister::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PRegister::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PRegister_descriptor_;
}

const PRegister& PRegister::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_udorx_5fcommon_2eproto();
  return *default_instance_;
}

PRegister* PRegister::default_instance_ = NULL;

PRegister* PRegister::New(::google::protobuf::Arena* arena) const {
  PRegister* n = new PRegister;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PRegister::Clear() {
  if (_has_bits_[0 / 32] & 15u) {
    if (has_user()) {
      user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_pass()) {
      pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_fname()) {
      fname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_email()) {
      email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PRegister::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:udorx_pbf.PRegister)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string user = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user().data(), this->user().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PRegister.user");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pass;
        break;
      }

      // required string pass = 2;
      case 2: {
        if (tag == 18) {
         parse_pass:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pass()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pass().data(), this->pass().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PRegister.pass");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_fname;
        break;
      }

      // required string fname = 3;
      case 3: {
        if (tag == 26) {
         parse_fname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fname().data(), this->fname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PRegister.fname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_email;
        break;
      }

      // required string email = 4;
      case 4: {
        if (tag == 34) {
         parse_email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PRegister.email");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:udorx_pbf.PRegister)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:udorx_pbf.PRegister)
  return false;
#undef DO_
}

void PRegister::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:udorx_pbf.PRegister)
  // required string user = 1;
  if (has_user()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), this->user().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PRegister.user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user(), output);
  }

  // required string pass = 2;
  if (has_pass()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pass().data(), this->pass().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PRegister.pass");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pass(), output);
  }

  // required string fname = 3;
  if (has_fname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fname().data(), this->fname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PRegister.fname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->fname(), output);
  }

  // required string email = 4;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PRegister.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->email(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:udorx_pbf.PRegister)
}

::google::protobuf::uint8* PRegister::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:udorx_pbf.PRegister)
  // required string user = 1;
  if (has_user()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), this->user().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PRegister.user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user(), target);
  }

  // required string pass = 2;
  if (has_pass()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pass().data(), this->pass().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PRegister.pass");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pass(), target);
  }

  // required string fname = 3;
  if (has_fname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fname().data(), this->fname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PRegister.fname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->fname(), target);
  }

  // required string email = 4;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PRegister.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->email(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:udorx_pbf.PRegister)
  return target;
}

int PRegister::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_user()) {
    // required string user = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());
  }

  if (has_pass()) {
    // required string pass = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pass());
  }

  if (has_fname()) {
    // required string fname = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fname());
  }

  if (has_email()) {
    // required string email = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  return total_size;
}
int PRegister::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string user = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());

    // required string pass = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pass());

    // required string fname = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fname());

    // required string email = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PRegister::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PRegister* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PRegister>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PRegister::MergeFrom(const PRegister& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user()) {
      set_has_user();
      user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
    }
    if (from.has_pass()) {
      set_has_pass();
      pass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pass_);
    }
    if (from.has_fname()) {
      set_has_fname();
      fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fname_);
    }
    if (from.has_email()) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PRegister::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PRegister::CopyFrom(const PRegister& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PRegister::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void PRegister::Swap(PRegister* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PRegister::InternalSwap(PRegister* other) {
  user_.Swap(&other->user_);
  pass_.Swap(&other->pass_);
  fname_.Swap(&other->fname_);
  email_.Swap(&other->email_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PRegister::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PRegister_descriptor_;
  metadata.reflection = PRegister_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PRegister

// required string user = 1;
bool PRegister::has_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PRegister::set_has_user() {
  _has_bits_[0] |= 0x00000001u;
}
void PRegister::clear_has_user() {
  _has_bits_[0] &= ~0x00000001u;
}
void PRegister::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user();
}
 const ::std::string& PRegister::user() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PRegister.user)
  return user_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PRegister::set_user(const ::std::string& value) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PRegister.user)
}
 void PRegister::set_user(const char* value) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PRegister.user)
}
 void PRegister::set_user(const char* value, size_t size) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PRegister.user)
}
 ::std::string* PRegister::mutable_user() {
  set_has_user();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PRegister.user)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PRegister::release_user() {
  clear_has_user();
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PRegister::set_allocated_user(::std::string* user) {
  if (user != NULL) {
    set_has_user();
  } else {
    clear_has_user();
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PRegister.user)
}

// required string pass = 2;
bool PRegister::has_pass() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PRegister::set_has_pass() {
  _has_bits_[0] |= 0x00000002u;
}
void PRegister::clear_has_pass() {
  _has_bits_[0] &= ~0x00000002u;
}
void PRegister::clear_pass() {
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pass();
}
 const ::std::string& PRegister::pass() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PRegister.pass)
  return pass_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PRegister::set_pass(const ::std::string& value) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PRegister.pass)
}
 void PRegister::set_pass(const char* value) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PRegister.pass)
}
 void PRegister::set_pass(const char* value, size_t size) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PRegister.pass)
}
 ::std::string* PRegister::mutable_pass() {
  set_has_pass();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PRegister.pass)
  return pass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PRegister::release_pass() {
  clear_has_pass();
  return pass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PRegister::set_allocated_pass(::std::string* pass) {
  if (pass != NULL) {
    set_has_pass();
  } else {
    clear_has_pass();
  }
  pass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pass);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PRegister.pass)
}

// required string fname = 3;
bool PRegister::has_fname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PRegister::set_has_fname() {
  _has_bits_[0] |= 0x00000004u;
}
void PRegister::clear_has_fname() {
  _has_bits_[0] &= ~0x00000004u;
}
void PRegister::clear_fname() {
  fname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fname();
}
 const ::std::string& PRegister::fname() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PRegister.fname)
  return fname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PRegister::set_fname(const ::std::string& value) {
  set_has_fname();
  fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PRegister.fname)
}
 void PRegister::set_fname(const char* value) {
  set_has_fname();
  fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PRegister.fname)
}
 void PRegister::set_fname(const char* value, size_t size) {
  set_has_fname();
  fname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PRegister.fname)
}
 ::std::string* PRegister::mutable_fname() {
  set_has_fname();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PRegister.fname)
  return fname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PRegister::release_fname() {
  clear_has_fname();
  return fname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PRegister::set_allocated_fname(::std::string* fname) {
  if (fname != NULL) {
    set_has_fname();
  } else {
    clear_has_fname();
  }
  fname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fname);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PRegister.fname)
}

// required string email = 4;
bool PRegister::has_email() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PRegister::set_has_email() {
  _has_bits_[0] |= 0x00000008u;
}
void PRegister::clear_has_email() {
  _has_bits_[0] &= ~0x00000008u;
}
void PRegister::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
 const ::std::string& PRegister::email() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PRegister.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PRegister::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PRegister.email)
}
 void PRegister::set_email(const char* value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PRegister.email)
}
 void PRegister::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PRegister.email)
}
 ::std::string* PRegister::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PRegister.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PRegister::release_email() {
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PRegister::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PRegister.email)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommPacket::kReqFieldNumber;
const int CommPacket::kRIDFieldNumber;
const int CommPacket::kCIDFieldNumber;
const int CommPacket::kUserFieldNumber;
const int CommPacket::kPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommPacket::CommPacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:udorx_pbf.CommPacket)
}

void CommPacket::InitAsDefaultInstance() {
}

CommPacket::CommPacket(const CommPacket& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:udorx_pbf.CommPacket)
}

void CommPacket::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  req_ = 0;
  rid_ = 0;
  cid_ = 0;
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CommPacket::~CommPacket() {
  // @@protoc_insertion_point(destructor:udorx_pbf.CommPacket)
  SharedDtor();
}

void CommPacket::SharedDtor() {
  user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CommPacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommPacket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommPacket_descriptor_;
}

const CommPacket& CommPacket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_udorx_5fcommon_2eproto();
  return *default_instance_;
}

CommPacket* CommPacket::default_instance_ = NULL;

CommPacket* CommPacket::New(::google::protobuf::Arena* arena) const {
  CommPacket* n = new CommPacket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommPacket::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CommPacket*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(req_, rid_);
    cid_ = 0;
    if (has_user()) {
      user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_payload()) {
      payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CommPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:udorx_pbf.CommPacket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 req = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &req_)));
          set_has_req();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rID;
        break;
      }

      // required sint32 rID = 2;
      case 2: {
        if (tag == 16) {
         parse_rID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &rid_)));
          set_has_rid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_cID;
        break;
      }

      // required sint32 cID = 3;
      case 3: {
        if (tag == 24) {
         parse_cID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &cid_)));
          set_has_cid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_user;
        break;
      }

      // required string user = 4;
      case 4: {
        if (tag == 34) {
         parse_user:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user().data(), this->user().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.CommPacket.user");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_payload;
        break;
      }

      // required bytes payload = 5;
      case 5: {
        if (tag == 42) {
         parse_payload:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:udorx_pbf.CommPacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:udorx_pbf.CommPacket)
  return false;
#undef DO_
}

void CommPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:udorx_pbf.CommPacket)
  // required int32 req = 1;
  if (has_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->req(), output);
  }

  // required sint32 rID = 2;
  if (has_rid()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->rid(), output);
  }

  // required sint32 cID = 3;
  if (has_cid()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->cid(), output);
  }

  // required string user = 4;
  if (has_user()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), this->user().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.CommPacket.user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->user(), output);
  }

  // required bytes payload = 5;
  if (has_payload()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->payload(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:udorx_pbf.CommPacket)
}

::google::protobuf::uint8* CommPacket::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:udorx_pbf.CommPacket)
  // required int32 req = 1;
  if (has_req()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->req(), target);
  }

  // required sint32 rID = 2;
  if (has_rid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->rid(), target);
  }

  // required sint32 cID = 3;
  if (has_cid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->cid(), target);
  }

  // required string user = 4;
  if (has_user()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), this->user().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.CommPacket.user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->user(), target);
  }

  // required bytes payload = 5;
  if (has_payload()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->payload(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:udorx_pbf.CommPacket)
  return target;
}

int CommPacket::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_req()) {
    // required int32 req = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->req());
  }

  if (has_rid()) {
    // required sint32 rID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->rid());
  }

  if (has_cid()) {
    // required sint32 cID = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->cid());
  }

  if (has_user()) {
    // required string user = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());
  }

  if (has_payload()) {
    // required bytes payload = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());
  }

  return total_size;
}
int CommPacket::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required int32 req = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->req());

    // required sint32 rID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->rid());

    // required sint32 cID = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->cid());

    // required string user = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());

    // required bytes payload = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommPacket::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CommPacket* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CommPacket>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CommPacket::MergeFrom(const CommPacket& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_req()) {
      set_req(from.req());
    }
    if (from.has_rid()) {
      set_rid(from.rid());
    }
    if (from.has_cid()) {
      set_cid(from.cid());
    }
    if (from.has_user()) {
      set_has_user();
      user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
    }
    if (from.has_payload()) {
      set_has_payload();
      payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CommPacket::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommPacket::CopyFrom(const CommPacket& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommPacket::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void CommPacket::Swap(CommPacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommPacket::InternalSwap(CommPacket* other) {
  std::swap(req_, other->req_);
  std::swap(rid_, other->rid_);
  std::swap(cid_, other->cid_);
  user_.Swap(&other->user_);
  payload_.Swap(&other->payload_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommPacket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CommPacket_descriptor_;
  metadata.reflection = CommPacket_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CommPacket

// required int32 req = 1;
bool CommPacket::has_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CommPacket::set_has_req() {
  _has_bits_[0] |= 0x00000001u;
}
void CommPacket::clear_has_req() {
  _has_bits_[0] &= ~0x00000001u;
}
void CommPacket::clear_req() {
  req_ = 0;
  clear_has_req();
}
 ::google::protobuf::int32 CommPacket::req() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.CommPacket.req)
  return req_;
}
 void CommPacket::set_req(::google::protobuf::int32 value) {
  set_has_req();
  req_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.CommPacket.req)
}

// required sint32 rID = 2;
bool CommPacket::has_rid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CommPacket::set_has_rid() {
  _has_bits_[0] |= 0x00000002u;
}
void CommPacket::clear_has_rid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CommPacket::clear_rid() {
  rid_ = 0;
  clear_has_rid();
}
 ::google::protobuf::int32 CommPacket::rid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.CommPacket.rID)
  return rid_;
}
 void CommPacket::set_rid(::google::protobuf::int32 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.CommPacket.rID)
}

// required sint32 cID = 3;
bool CommPacket::has_cid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CommPacket::set_has_cid() {
  _has_bits_[0] |= 0x00000004u;
}
void CommPacket::clear_has_cid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CommPacket::clear_cid() {
  cid_ = 0;
  clear_has_cid();
}
 ::google::protobuf::int32 CommPacket::cid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.CommPacket.cID)
  return cid_;
}
 void CommPacket::set_cid(::google::protobuf::int32 value) {
  set_has_cid();
  cid_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.CommPacket.cID)
}

// required string user = 4;
bool CommPacket::has_user() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CommPacket::set_has_user() {
  _has_bits_[0] |= 0x00000008u;
}
void CommPacket::clear_has_user() {
  _has_bits_[0] &= ~0x00000008u;
}
void CommPacket::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user();
}
 const ::std::string& CommPacket::user() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.CommPacket.user)
  return user_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CommPacket::set_user(const ::std::string& value) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.CommPacket.user)
}
 void CommPacket::set_user(const char* value) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.CommPacket.user)
}
 void CommPacket::set_user(const char* value, size_t size) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.CommPacket.user)
}
 ::std::string* CommPacket::mutable_user() {
  set_has_user();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.CommPacket.user)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CommPacket::release_user() {
  clear_has_user();
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CommPacket::set_allocated_user(::std::string* user) {
  if (user != NULL) {
    set_has_user();
  } else {
    clear_has_user();
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.CommPacket.user)
}

// required bytes payload = 5;
bool CommPacket::has_payload() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CommPacket::set_has_payload() {
  _has_bits_[0] |= 0x00000010u;
}
void CommPacket::clear_has_payload() {
  _has_bits_[0] &= ~0x00000010u;
}
void CommPacket::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_payload();
}
 const ::std::string& CommPacket::payload() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.CommPacket.payload)
  return payload_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CommPacket::set_payload(const ::std::string& value) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.CommPacket.payload)
}
 void CommPacket::set_payload(const char* value) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.CommPacket.payload)
}
 void CommPacket::set_payload(const void* value, size_t size) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.CommPacket.payload)
}
 ::std::string* CommPacket::mutable_payload() {
  set_has_payload();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.CommPacket.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CommPacket::release_payload() {
  clear_has_payload();
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CommPacket::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    set_has_payload();
  } else {
    clear_has_payload();
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.CommPacket.payload)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PMsg::kMidFieldNumber;
const int PMsg::kSNFieldNumber;
const int PMsg::kSCIDFieldNumber;
const int PMsg::kDDIDFieldNumber;
const int PMsg::kDCIDFieldNumber;
const int PMsg::kDNFieldNumber;
const int PMsg::kMsgFieldNumber;
const int PMsg::kMTFieldNumber;
const int PMsg::kMediaFilesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PMsg::PMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:udorx_pbf.PMsg)
}

void PMsg::InitAsDefaultInstance() {
}

PMsg::PMsg(const PMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:udorx_pbf.PMsg)
}

void PMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  mid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scid_ = 0;
  ddid_ = 0;
  dcid_ = 0;
  dn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mt_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PMsg::~PMsg() {
  // @@protoc_insertion_point(destructor:udorx_pbf.PMsg)
  SharedDtor();
}

void PMsg::SharedDtor() {
  mid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PMsg_descriptor_;
}

const PMsg& PMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_udorx_5fcommon_2eproto();
  return *default_instance_;
}

PMsg* PMsg::default_instance_ = NULL;

PMsg* PMsg::New(::google::protobuf::Arena* arena) const {
  PMsg* n = new PMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PMsg::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PMsg*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(scid_, ddid_);
    ZR_(dcid_, mt_);
    if (has_mid()) {
      mid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_sn()) {
      sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_dn()) {
      dn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_msg()) {
      msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  media_files_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:udorx_pbf.PMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string mid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mid().data(), this->mid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PMsg.mid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sN;
        break;
      }

      // required string sN = 2;
      case 2: {
        if (tag == 18) {
         parse_sN:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sn()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sn().data(), this->sn().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PMsg.sN");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_sCID;
        break;
      }

      // required int32 sCID = 3;
      case 3: {
        if (tag == 24) {
         parse_sCID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scid_)));
          set_has_scid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_dDID;
        break;
      }

      // required int32 dDID = 4;
      case 4: {
        if (tag == 32) {
         parse_dDID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ddid_)));
          set_has_ddid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_dCID;
        break;
      }

      // required int32 dCID = 5;
      case 5: {
        if (tag == 40) {
         parse_dCID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dcid_)));
          set_has_dcid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_dN;
        break;
      }

      // required string dN = 6;
      case 6: {
        if (tag == 50) {
         parse_dN:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dn()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dn().data(), this->dn().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PMsg.dN");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_msg;
        break;
      }

      // required string msg = 7;
      case 7: {
        if (tag == 58) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PMsg.msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_mT;
        break;
      }

      // required int32 mT = 8;
      case 8: {
        if (tag == 64) {
         parse_mT:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mt_)));
          set_has_mt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_media_files;
        break;
      }

      // repeated string media_files = 9;
      case 9: {
        if (tag == 74) {
         parse_media_files:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_media_files()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->media_files(this->media_files_size() - 1).data(),
            this->media_files(this->media_files_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.PMsg.media_files");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_media_files;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:udorx_pbf.PMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:udorx_pbf.PMsg)
  return false;
#undef DO_
}

void PMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:udorx_pbf.PMsg)
  // required string mid = 1;
  if (has_mid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mid().data(), this->mid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PMsg.mid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mid(), output);
  }

  // required string sN = 2;
  if (has_sn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sn().data(), this->sn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PMsg.sN");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sn(), output);
  }

  // required int32 sCID = 3;
  if (has_scid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->scid(), output);
  }

  // required int32 dDID = 4;
  if (has_ddid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ddid(), output);
  }

  // required int32 dCID = 5;
  if (has_dcid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->dcid(), output);
  }

  // required string dN = 6;
  if (has_dn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dn().data(), this->dn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PMsg.dN");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->dn(), output);
  }

  // required string msg = 7;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PMsg.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->msg(), output);
  }

  // required int32 mT = 8;
  if (has_mt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->mt(), output);
  }

  // repeated string media_files = 9;
  for (int i = 0; i < this->media_files_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->media_files(i).data(), this->media_files(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PMsg.media_files");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->media_files(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:udorx_pbf.PMsg)
}

::google::protobuf::uint8* PMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:udorx_pbf.PMsg)
  // required string mid = 1;
  if (has_mid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mid().data(), this->mid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PMsg.mid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mid(), target);
  }

  // required string sN = 2;
  if (has_sn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sn().data(), this->sn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PMsg.sN");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sn(), target);
  }

  // required int32 sCID = 3;
  if (has_scid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->scid(), target);
  }

  // required int32 dDID = 4;
  if (has_ddid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->ddid(), target);
  }

  // required int32 dCID = 5;
  if (has_dcid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->dcid(), target);
  }

  // required string dN = 6;
  if (has_dn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dn().data(), this->dn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PMsg.dN");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->dn(), target);
  }

  // required string msg = 7;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PMsg.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->msg(), target);
  }

  // required int32 mT = 8;
  if (has_mt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->mt(), target);
  }

  // repeated string media_files = 9;
  for (int i = 0; i < this->media_files_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->media_files(i).data(), this->media_files(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.PMsg.media_files");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->media_files(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:udorx_pbf.PMsg)
  return target;
}

int PMsg::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_mid()) {
    // required string mid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mid());
  }

  if (has_sn()) {
    // required string sN = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sn());
  }

  if (has_scid()) {
    // required int32 sCID = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scid());
  }

  if (has_ddid()) {
    // required int32 dDID = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ddid());
  }

  if (has_dcid()) {
    // required int32 dCID = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dcid());
  }

  if (has_dn()) {
    // required string dN = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dn());
  }

  if (has_msg()) {
    // required string msg = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  if (has_mt()) {
    // required int32 mT = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mt());
  }

  return total_size;
}
int PMsg::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x000000ff) ^ 0x000000ff) == 0) {  // All required fields are present.
    // required string mid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mid());

    // required string sN = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sn());

    // required int32 sCID = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scid());

    // required int32 dDID = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ddid());

    // required int32 dCID = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dcid());

    // required string dN = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dn());

    // required string msg = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());

    // required int32 mT = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mt());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string media_files = 9;
  total_size += 1 * this->media_files_size();
  for (int i = 0; i < this->media_files_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->media_files(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PMsg::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PMsg>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PMsg::MergeFrom(const PMsg& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  media_files_.MergeFrom(from.media_files_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mid()) {
      set_has_mid();
      mid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mid_);
    }
    if (from.has_sn()) {
      set_has_sn();
      sn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sn_);
    }
    if (from.has_scid()) {
      set_scid(from.scid());
    }
    if (from.has_ddid()) {
      set_ddid(from.ddid());
    }
    if (from.has_dcid()) {
      set_dcid(from.dcid());
    }
    if (from.has_dn()) {
      set_has_dn();
      dn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dn_);
    }
    if (from.has_msg()) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (from.has_mt()) {
      set_mt(from.mt());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PMsg::CopyFrom(const PMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void PMsg::Swap(PMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PMsg::InternalSwap(PMsg* other) {
  mid_.Swap(&other->mid_);
  sn_.Swap(&other->sn_);
  std::swap(scid_, other->scid_);
  std::swap(ddid_, other->ddid_);
  std::swap(dcid_, other->dcid_);
  dn_.Swap(&other->dn_);
  msg_.Swap(&other->msg_);
  std::swap(mt_, other->mt_);
  media_files_.UnsafeArenaSwap(&other->media_files_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PMsg_descriptor_;
  metadata.reflection = PMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PMsg

// required string mid = 1;
bool PMsg::has_mid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PMsg::set_has_mid() {
  _has_bits_[0] |= 0x00000001u;
}
void PMsg::clear_has_mid() {
  _has_bits_[0] &= ~0x00000001u;
}
void PMsg::clear_mid() {
  mid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mid();
}
 const ::std::string& PMsg::mid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PMsg.mid)
  return mid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PMsg::set_mid(const ::std::string& value) {
  set_has_mid();
  mid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PMsg.mid)
}
 void PMsg::set_mid(const char* value) {
  set_has_mid();
  mid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PMsg.mid)
}
 void PMsg::set_mid(const char* value, size_t size) {
  set_has_mid();
  mid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PMsg.mid)
}
 ::std::string* PMsg::mutable_mid() {
  set_has_mid();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PMsg.mid)
  return mid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PMsg::release_mid() {
  clear_has_mid();
  return mid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PMsg::set_allocated_mid(::std::string* mid) {
  if (mid != NULL) {
    set_has_mid();
  } else {
    clear_has_mid();
  }
  mid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mid);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PMsg.mid)
}

// required string sN = 2;
bool PMsg::has_sn() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PMsg::set_has_sn() {
  _has_bits_[0] |= 0x00000002u;
}
void PMsg::clear_has_sn() {
  _has_bits_[0] &= ~0x00000002u;
}
void PMsg::clear_sn() {
  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sn();
}
 const ::std::string& PMsg::sn() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PMsg.sN)
  return sn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PMsg::set_sn(const ::std::string& value) {
  set_has_sn();
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PMsg.sN)
}
 void PMsg::set_sn(const char* value) {
  set_has_sn();
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PMsg.sN)
}
 void PMsg::set_sn(const char* value, size_t size) {
  set_has_sn();
  sn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PMsg.sN)
}
 ::std::string* PMsg::mutable_sn() {
  set_has_sn();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PMsg.sN)
  return sn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PMsg::release_sn() {
  clear_has_sn();
  return sn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PMsg::set_allocated_sn(::std::string* sn) {
  if (sn != NULL) {
    set_has_sn();
  } else {
    clear_has_sn();
  }
  sn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sn);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PMsg.sN)
}

// required int32 sCID = 3;
bool PMsg::has_scid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PMsg::set_has_scid() {
  _has_bits_[0] |= 0x00000004u;
}
void PMsg::clear_has_scid() {
  _has_bits_[0] &= ~0x00000004u;
}
void PMsg::clear_scid() {
  scid_ = 0;
  clear_has_scid();
}
 ::google::protobuf::int32 PMsg::scid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PMsg.sCID)
  return scid_;
}
 void PMsg::set_scid(::google::protobuf::int32 value) {
  set_has_scid();
  scid_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PMsg.sCID)
}

// required int32 dDID = 4;
bool PMsg::has_ddid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PMsg::set_has_ddid() {
  _has_bits_[0] |= 0x00000008u;
}
void PMsg::clear_has_ddid() {
  _has_bits_[0] &= ~0x00000008u;
}
void PMsg::clear_ddid() {
  ddid_ = 0;
  clear_has_ddid();
}
 ::google::protobuf::int32 PMsg::ddid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PMsg.dDID)
  return ddid_;
}
 void PMsg::set_ddid(::google::protobuf::int32 value) {
  set_has_ddid();
  ddid_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PMsg.dDID)
}

// required int32 dCID = 5;
bool PMsg::has_dcid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PMsg::set_has_dcid() {
  _has_bits_[0] |= 0x00000010u;
}
void PMsg::clear_has_dcid() {
  _has_bits_[0] &= ~0x00000010u;
}
void PMsg::clear_dcid() {
  dcid_ = 0;
  clear_has_dcid();
}
 ::google::protobuf::int32 PMsg::dcid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PMsg.dCID)
  return dcid_;
}
 void PMsg::set_dcid(::google::protobuf::int32 value) {
  set_has_dcid();
  dcid_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PMsg.dCID)
}

// required string dN = 6;
bool PMsg::has_dn() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PMsg::set_has_dn() {
  _has_bits_[0] |= 0x00000020u;
}
void PMsg::clear_has_dn() {
  _has_bits_[0] &= ~0x00000020u;
}
void PMsg::clear_dn() {
  dn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dn();
}
 const ::std::string& PMsg::dn() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PMsg.dN)
  return dn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PMsg::set_dn(const ::std::string& value) {
  set_has_dn();
  dn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PMsg.dN)
}
 void PMsg::set_dn(const char* value) {
  set_has_dn();
  dn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PMsg.dN)
}
 void PMsg::set_dn(const char* value, size_t size) {
  set_has_dn();
  dn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PMsg.dN)
}
 ::std::string* PMsg::mutable_dn() {
  set_has_dn();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PMsg.dN)
  return dn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PMsg::release_dn() {
  clear_has_dn();
  return dn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PMsg::set_allocated_dn(::std::string* dn) {
  if (dn != NULL) {
    set_has_dn();
  } else {
    clear_has_dn();
  }
  dn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dn);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PMsg.dN)
}

// required string msg = 7;
bool PMsg::has_msg() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PMsg::set_has_msg() {
  _has_bits_[0] |= 0x00000040u;
}
void PMsg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000040u;
}
void PMsg::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
 const ::std::string& PMsg::msg() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PMsg.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PMsg::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.PMsg.msg)
}
 void PMsg::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PMsg.msg)
}
 void PMsg::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PMsg.msg)
}
 ::std::string* PMsg::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PMsg.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PMsg::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PMsg::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.PMsg.msg)
}

// required int32 mT = 8;
bool PMsg::has_mt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void PMsg::set_has_mt() {
  _has_bits_[0] |= 0x00000080u;
}
void PMsg::clear_has_mt() {
  _has_bits_[0] &= ~0x00000080u;
}
void PMsg::clear_mt() {
  mt_ = 0;
  clear_has_mt();
}
 ::google::protobuf::int32 PMsg::mt() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PMsg.mT)
  return mt_;
}
 void PMsg::set_mt(::google::protobuf::int32 value) {
  set_has_mt();
  mt_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.PMsg.mT)
}

// repeated string media_files = 9;
int PMsg::media_files_size() const {
  return media_files_.size();
}
void PMsg::clear_media_files() {
  media_files_.Clear();
}
 const ::std::string& PMsg::media_files(int index) const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PMsg.media_files)
  return media_files_.Get(index);
}
 ::std::string* PMsg::mutable_media_files(int index) {
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PMsg.media_files)
  return media_files_.Mutable(index);
}
 void PMsg::set_media_files(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:udorx_pbf.PMsg.media_files)
  media_files_.Mutable(index)->assign(value);
}
 void PMsg::set_media_files(int index, const char* value) {
  media_files_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:udorx_pbf.PMsg.media_files)
}
 void PMsg::set_media_files(int index, const char* value, size_t size) {
  media_files_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.PMsg.media_files)
}
 ::std::string* PMsg::add_media_files() {
  return media_files_.Add();
}
 void PMsg::add_media_files(const ::std::string& value) {
  media_files_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:udorx_pbf.PMsg.media_files)
}
 void PMsg::add_media_files(const char* value) {
  media_files_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:udorx_pbf.PMsg.media_files)
}
 void PMsg::add_media_files(const char* value, size_t size) {
  media_files_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:udorx_pbf.PMsg.media_files)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
PMsg::media_files() const {
  // @@protoc_insertion_point(field_list:udorx_pbf.PMsg.media_files)
  return media_files_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
PMsg::mutable_media_files() {
  // @@protoc_insertion_point(field_mutable_list:udorx_pbf.PMsg.media_files)
  return &media_files_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PMsgList::kMsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PMsgList::PMsgList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:udorx_pbf.PMsgList)
}

void PMsgList::InitAsDefaultInstance() {
}

PMsgList::PMsgList(const PMsgList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:udorx_pbf.PMsgList)
}

void PMsgList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PMsgList::~PMsgList() {
  // @@protoc_insertion_point(destructor:udorx_pbf.PMsgList)
  SharedDtor();
}

void PMsgList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PMsgList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PMsgList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PMsgList_descriptor_;
}

const PMsgList& PMsgList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_udorx_5fcommon_2eproto();
  return *default_instance_;
}

PMsgList* PMsgList::default_instance_ = NULL;

PMsgList* PMsgList::New(::google::protobuf::Arena* arena) const {
  PMsgList* n = new PMsgList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PMsgList::Clear() {
  msgs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PMsgList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:udorx_pbf.PMsgList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .udorx_pbf.PMsg msgs = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_msgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_msgs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_msgs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:udorx_pbf.PMsgList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:udorx_pbf.PMsgList)
  return false;
#undef DO_
}

void PMsgList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:udorx_pbf.PMsgList)
  // repeated .udorx_pbf.PMsg msgs = 1;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->msgs(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:udorx_pbf.PMsgList)
}

::google::protobuf::uint8* PMsgList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:udorx_pbf.PMsgList)
  // repeated .udorx_pbf.PMsg msgs = 1;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->msgs(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:udorx_pbf.PMsgList)
  return target;
}

int PMsgList::ByteSize() const {
  int total_size = 0;

  // repeated .udorx_pbf.PMsg msgs = 1;
  total_size += 1 * this->msgs_size();
  for (int i = 0; i < this->msgs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->msgs(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PMsgList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PMsgList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PMsgList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PMsgList::MergeFrom(const PMsgList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  msgs_.MergeFrom(from.msgs_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PMsgList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PMsgList::CopyFrom(const PMsgList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PMsgList::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->msgs())) return false;
  return true;
}

void PMsgList::Swap(PMsgList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PMsgList::InternalSwap(PMsgList* other) {
  msgs_.UnsafeArenaSwap(&other->msgs_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PMsgList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PMsgList_descriptor_;
  metadata.reflection = PMsgList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PMsgList

// repeated .udorx_pbf.PMsg msgs = 1;
int PMsgList::msgs_size() const {
  return msgs_.size();
}
void PMsgList::clear_msgs() {
  msgs_.Clear();
}
const ::udorx_pbf::PMsg& PMsgList::msgs(int index) const {
  // @@protoc_insertion_point(field_get:udorx_pbf.PMsgList.msgs)
  return msgs_.Get(index);
}
::udorx_pbf::PMsg* PMsgList::mutable_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:udorx_pbf.PMsgList.msgs)
  return msgs_.Mutable(index);
}
::udorx_pbf::PMsg* PMsgList::add_msgs() {
  // @@protoc_insertion_point(field_add:udorx_pbf.PMsgList.msgs)
  return msgs_.Add();
}
::google::protobuf::RepeatedPtrField< ::udorx_pbf::PMsg >*
PMsgList::mutable_msgs() {
  // @@protoc_insertion_point(field_mutable_list:udorx_pbf.PMsgList.msgs)
  return &msgs_;
}
const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::PMsg >&
PMsgList::msgs() const {
  // @@protoc_insertion_point(field_list:udorx_pbf.PMsgList.msgs)
  return msgs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SampledValue::kValueFieldNumber;
const int SampledValue::kContextFieldNumber;
const int SampledValue::kFormatFieldNumber;
const int SampledValue::kMeasurandFieldNumber;
const int SampledValue::kPhaseFieldNumber;
const int SampledValue::kLocationFieldNumber;
const int SampledValue::kUnitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SampledValue::SampledValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:udorx_pbf.SampledValue)
}

void SampledValue::InitAsDefaultInstance() {
}

SampledValue::SampledValue(const SampledValue& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:udorx_pbf.SampledValue)
}

void SampledValue::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  measurand_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phase_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SampledValue::~SampledValue() {
  // @@protoc_insertion_point(destructor:udorx_pbf.SampledValue)
  SharedDtor();
}

void SampledValue::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  measurand_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phase_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SampledValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SampledValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SampledValue_descriptor_;
}

const SampledValue& SampledValue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_udorx_5fcommon_2eproto();
  return *default_instance_;
}

SampledValue* SampledValue::default_instance_ = NULL;

SampledValue* SampledValue::New(::google::protobuf::Arena* arena) const {
  SampledValue* n = new SampledValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SampledValue::Clear() {
  if (_has_bits_[0 / 32] & 127u) {
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_context()) {
      context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_format()) {
      format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_measurand()) {
      measurand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_phase()) {
      phase_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_location()) {
      location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_unit()) {
      unit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SampledValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:udorx_pbf.SampledValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string value = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.SampledValue.value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_context;
        break;
      }

      // optional string context = 2;
      case 2: {
        if (tag == 18) {
         parse_context:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_context()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->context().data(), this->context().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.SampledValue.context");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_format;
        break;
      }

      // optional string format = 3;
      case 3: {
        if (tag == 26) {
         parse_format:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_format()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->format().data(), this->format().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.SampledValue.format");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_measurand;
        break;
      }

      // optional string measurand = 4;
      case 4: {
        if (tag == 34) {
         parse_measurand:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_measurand()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->measurand().data(), this->measurand().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.SampledValue.measurand");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_phase;
        break;
      }

      // optional string phase = 5;
      case 5: {
        if (tag == 42) {
         parse_phase:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phase()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phase().data(), this->phase().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.SampledValue.phase");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_location;
        break;
      }

      // optional string location = 6;
      case 6: {
        if (tag == 50) {
         parse_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->location().data(), this->location().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.SampledValue.location");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_unit;
        break;
      }

      // optional string unit = 7;
      case 7: {
        if (tag == 58) {
         parse_unit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unit()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->unit().data(), this->unit().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.SampledValue.unit");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:udorx_pbf.SampledValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:udorx_pbf.SampledValue)
  return false;
#undef DO_
}

void SampledValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:udorx_pbf.SampledValue)
  // required string value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.SampledValue.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // optional string context = 2;
  if (has_context()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->context().data(), this->context().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.SampledValue.context");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->context(), output);
  }

  // optional string format = 3;
  if (has_format()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->format().data(), this->format().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.SampledValue.format");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->format(), output);
  }

  // optional string measurand = 4;
  if (has_measurand()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->measurand().data(), this->measurand().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.SampledValue.measurand");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->measurand(), output);
  }

  // optional string phase = 5;
  if (has_phase()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phase().data(), this->phase().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.SampledValue.phase");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->phase(), output);
  }

  // optional string location = 6;
  if (has_location()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.SampledValue.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->location(), output);
  }

  // optional string unit = 7;
  if (has_unit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unit().data(), this->unit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.SampledValue.unit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->unit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:udorx_pbf.SampledValue)
}

::google::protobuf::uint8* SampledValue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:udorx_pbf.SampledValue)
  // required string value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.SampledValue.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // optional string context = 2;
  if (has_context()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->context().data(), this->context().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.SampledValue.context");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->context(), target);
  }

  // optional string format = 3;
  if (has_format()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->format().data(), this->format().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.SampledValue.format");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->format(), target);
  }

  // optional string measurand = 4;
  if (has_measurand()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->measurand().data(), this->measurand().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.SampledValue.measurand");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->measurand(), target);
  }

  // optional string phase = 5;
  if (has_phase()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phase().data(), this->phase().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.SampledValue.phase");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->phase(), target);
  }

  // optional string location = 6;
  if (has_location()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.SampledValue.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->location(), target);
  }

  // optional string unit = 7;
  if (has_unit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unit().data(), this->unit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.SampledValue.unit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->unit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:udorx_pbf.SampledValue)
  return target;
}

int SampledValue::ByteSize() const {
  int total_size = 0;

  // required string value = 1;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }
  if (_has_bits_[1 / 32] & 126u) {
    // optional string context = 2;
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->context());
    }

    // optional string format = 3;
    if (has_format()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->format());
    }

    // optional string measurand = 4;
    if (has_measurand()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->measurand());
    }

    // optional string phase = 5;
    if (has_phase()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phase());
    }

    // optional string location = 6;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->location());
    }

    // optional string unit = 7;
    if (has_unit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->unit());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SampledValue::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SampledValue* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SampledValue>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SampledValue::MergeFrom(const SampledValue& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (from.has_context()) {
      set_has_context();
      context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.context_);
    }
    if (from.has_format()) {
      set_has_format();
      format_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.format_);
    }
    if (from.has_measurand()) {
      set_has_measurand();
      measurand_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.measurand_);
    }
    if (from.has_phase()) {
      set_has_phase();
      phase_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phase_);
    }
    if (from.has_location()) {
      set_has_location();
      location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
    }
    if (from.has_unit()) {
      set_has_unit();
      unit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unit_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SampledValue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SampledValue::CopyFrom(const SampledValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SampledValue::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SampledValue::Swap(SampledValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SampledValue::InternalSwap(SampledValue* other) {
  value_.Swap(&other->value_);
  context_.Swap(&other->context_);
  format_.Swap(&other->format_);
  measurand_.Swap(&other->measurand_);
  phase_.Swap(&other->phase_);
  location_.Swap(&other->location_);
  unit_.Swap(&other->unit_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SampledValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SampledValue_descriptor_;
  metadata.reflection = SampledValue_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SampledValue

// required string value = 1;
bool SampledValue::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SampledValue::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
void SampledValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
void SampledValue::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
 const ::std::string& SampledValue::value() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.SampledValue.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SampledValue::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.SampledValue.value)
}
 void SampledValue::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.SampledValue.value)
}
 void SampledValue::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.SampledValue.value)
}
 ::std::string* SampledValue::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.SampledValue.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SampledValue::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SampledValue::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.SampledValue.value)
}

// optional string context = 2;
bool SampledValue::has_context() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SampledValue::set_has_context() {
  _has_bits_[0] |= 0x00000002u;
}
void SampledValue::clear_has_context() {
  _has_bits_[0] &= ~0x00000002u;
}
void SampledValue::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_context();
}
 const ::std::string& SampledValue::context() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.SampledValue.context)
  return context_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SampledValue::set_context(const ::std::string& value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.SampledValue.context)
}
 void SampledValue::set_context(const char* value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.SampledValue.context)
}
 void SampledValue::set_context(const char* value, size_t size) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.SampledValue.context)
}
 ::std::string* SampledValue::mutable_context() {
  set_has_context();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.SampledValue.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SampledValue::release_context() {
  clear_has_context();
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SampledValue::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    set_has_context();
  } else {
    clear_has_context();
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.SampledValue.context)
}

// optional string format = 3;
bool SampledValue::has_format() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SampledValue::set_has_format() {
  _has_bits_[0] |= 0x00000004u;
}
void SampledValue::clear_has_format() {
  _has_bits_[0] &= ~0x00000004u;
}
void SampledValue::clear_format() {
  format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_format();
}
 const ::std::string& SampledValue::format() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.SampledValue.format)
  return format_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SampledValue::set_format(const ::std::string& value) {
  set_has_format();
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.SampledValue.format)
}
 void SampledValue::set_format(const char* value) {
  set_has_format();
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.SampledValue.format)
}
 void SampledValue::set_format(const char* value, size_t size) {
  set_has_format();
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.SampledValue.format)
}
 ::std::string* SampledValue::mutable_format() {
  set_has_format();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.SampledValue.format)
  return format_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SampledValue::release_format() {
  clear_has_format();
  return format_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SampledValue::set_allocated_format(::std::string* format) {
  if (format != NULL) {
    set_has_format();
  } else {
    clear_has_format();
  }
  format_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), format);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.SampledValue.format)
}

// optional string measurand = 4;
bool SampledValue::has_measurand() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SampledValue::set_has_measurand() {
  _has_bits_[0] |= 0x00000008u;
}
void SampledValue::clear_has_measurand() {
  _has_bits_[0] &= ~0x00000008u;
}
void SampledValue::clear_measurand() {
  measurand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_measurand();
}
 const ::std::string& SampledValue::measurand() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.SampledValue.measurand)
  return measurand_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SampledValue::set_measurand(const ::std::string& value) {
  set_has_measurand();
  measurand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.SampledValue.measurand)
}
 void SampledValue::set_measurand(const char* value) {
  set_has_measurand();
  measurand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.SampledValue.measurand)
}
 void SampledValue::set_measurand(const char* value, size_t size) {
  set_has_measurand();
  measurand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.SampledValue.measurand)
}
 ::std::string* SampledValue::mutable_measurand() {
  set_has_measurand();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.SampledValue.measurand)
  return measurand_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SampledValue::release_measurand() {
  clear_has_measurand();
  return measurand_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SampledValue::set_allocated_measurand(::std::string* measurand) {
  if (measurand != NULL) {
    set_has_measurand();
  } else {
    clear_has_measurand();
  }
  measurand_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), measurand);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.SampledValue.measurand)
}

// optional string phase = 5;
bool SampledValue::has_phase() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SampledValue::set_has_phase() {
  _has_bits_[0] |= 0x00000010u;
}
void SampledValue::clear_has_phase() {
  _has_bits_[0] &= ~0x00000010u;
}
void SampledValue::clear_phase() {
  phase_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phase();
}
 const ::std::string& SampledValue::phase() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.SampledValue.phase)
  return phase_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SampledValue::set_phase(const ::std::string& value) {
  set_has_phase();
  phase_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.SampledValue.phase)
}
 void SampledValue::set_phase(const char* value) {
  set_has_phase();
  phase_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.SampledValue.phase)
}
 void SampledValue::set_phase(const char* value, size_t size) {
  set_has_phase();
  phase_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.SampledValue.phase)
}
 ::std::string* SampledValue::mutable_phase() {
  set_has_phase();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.SampledValue.phase)
  return phase_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SampledValue::release_phase() {
  clear_has_phase();
  return phase_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SampledValue::set_allocated_phase(::std::string* phase) {
  if (phase != NULL) {
    set_has_phase();
  } else {
    clear_has_phase();
  }
  phase_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phase);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.SampledValue.phase)
}

// optional string location = 6;
bool SampledValue::has_location() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SampledValue::set_has_location() {
  _has_bits_[0] |= 0x00000020u;
}
void SampledValue::clear_has_location() {
  _has_bits_[0] &= ~0x00000020u;
}
void SampledValue::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_location();
}
 const ::std::string& SampledValue::location() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.SampledValue.location)
  return location_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SampledValue::set_location(const ::std::string& value) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.SampledValue.location)
}
 void SampledValue::set_location(const char* value) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.SampledValue.location)
}
 void SampledValue::set_location(const char* value, size_t size) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.SampledValue.location)
}
 ::std::string* SampledValue::mutable_location() {
  set_has_location();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.SampledValue.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SampledValue::release_location() {
  clear_has_location();
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SampledValue::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    set_has_location();
  } else {
    clear_has_location();
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.SampledValue.location)
}

// optional string unit = 7;
bool SampledValue::has_unit() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SampledValue::set_has_unit() {
  _has_bits_[0] |= 0x00000040u;
}
void SampledValue::clear_has_unit() {
  _has_bits_[0] &= ~0x00000040u;
}
void SampledValue::clear_unit() {
  unit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_unit();
}
 const ::std::string& SampledValue::unit() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.SampledValue.unit)
  return unit_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SampledValue::set_unit(const ::std::string& value) {
  set_has_unit();
  unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.SampledValue.unit)
}
 void SampledValue::set_unit(const char* value) {
  set_has_unit();
  unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.SampledValue.unit)
}
 void SampledValue::set_unit(const char* value, size_t size) {
  set_has_unit();
  unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.SampledValue.unit)
}
 ::std::string* SampledValue::mutable_unit() {
  set_has_unit();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.SampledValue.unit)
  return unit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SampledValue::release_unit() {
  clear_has_unit();
  return unit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SampledValue::set_allocated_unit(::std::string* unit) {
  if (unit != NULL) {
    set_has_unit();
  } else {
    clear_has_unit();
  }
  unit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unit);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.SampledValue.unit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MeterValue::kTimestampFieldNumber;
const int MeterValue::kSampledValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MeterValue::MeterValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:udorx_pbf.MeterValue)
}

void MeterValue::InitAsDefaultInstance() {
}

MeterValue::MeterValue(const MeterValue& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:udorx_pbf.MeterValue)
}

void MeterValue::SharedCtor() {
  _cached_size_ = 0;
  timestamp_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MeterValue::~MeterValue() {
  // @@protoc_insertion_point(destructor:udorx_pbf.MeterValue)
  SharedDtor();
}

void MeterValue::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MeterValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MeterValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MeterValue_descriptor_;
}

const MeterValue& MeterValue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_udorx_5fcommon_2eproto();
  return *default_instance_;
}

MeterValue* MeterValue::default_instance_ = NULL;

MeterValue* MeterValue::New(::google::protobuf::Arena* arena) const {
  MeterValue* n = new MeterValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MeterValue::Clear() {
  timestamp_ = GOOGLE_LONGLONG(0);
  sampledvalue_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MeterValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:udorx_pbf.MeterValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 timestamp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sampledValue;
        break;
      }

      // repeated .udorx_pbf.SampledValue sampledValue = 2;
      case 2: {
        if (tag == 18) {
         parse_sampledValue:
          DO_(input->IncrementRecursionDepth());
         parse_loop_sampledValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_sampledvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_sampledValue;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:udorx_pbf.MeterValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:udorx_pbf.MeterValue)
  return false;
#undef DO_
}

void MeterValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:udorx_pbf.MeterValue)
  // required int64 timestamp = 1;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->timestamp(), output);
  }

  // repeated .udorx_pbf.SampledValue sampledValue = 2;
  for (unsigned int i = 0, n = this->sampledvalue_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->sampledvalue(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:udorx_pbf.MeterValue)
}

::google::protobuf::uint8* MeterValue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:udorx_pbf.MeterValue)
  // required int64 timestamp = 1;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->timestamp(), target);
  }

  // repeated .udorx_pbf.SampledValue sampledValue = 2;
  for (unsigned int i = 0, n = this->sampledvalue_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->sampledvalue(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:udorx_pbf.MeterValue)
  return target;
}

int MeterValue::ByteSize() const {
  int total_size = 0;

  // required int64 timestamp = 1;
  if (has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }
  // repeated .udorx_pbf.SampledValue sampledValue = 2;
  total_size += 1 * this->sampledvalue_size();
  for (int i = 0; i < this->sampledvalue_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sampledvalue(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MeterValue::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MeterValue* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MeterValue>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MeterValue::MergeFrom(const MeterValue& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  sampledvalue_.MergeFrom(from.sampledvalue_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MeterValue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeterValue::CopyFrom(const MeterValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeterValue::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->sampledvalue())) return false;
  return true;
}

void MeterValue::Swap(MeterValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MeterValue::InternalSwap(MeterValue* other) {
  std::swap(timestamp_, other->timestamp_);
  sampledvalue_.UnsafeArenaSwap(&other->sampledvalue_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MeterValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MeterValue_descriptor_;
  metadata.reflection = MeterValue_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MeterValue

// required int64 timestamp = 1;
bool MeterValue::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MeterValue::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
void MeterValue::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
void MeterValue::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
 ::google::protobuf::int64 MeterValue::timestamp() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.MeterValue.timestamp)
  return timestamp_;
}
 void MeterValue::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.MeterValue.timestamp)
}

// repeated .udorx_pbf.SampledValue sampledValue = 2;
int MeterValue::sampledvalue_size() const {
  return sampledvalue_.size();
}
void MeterValue::clear_sampledvalue() {
  sampledvalue_.Clear();
}
const ::udorx_pbf::SampledValue& MeterValue::sampledvalue(int index) const {
  // @@protoc_insertion_point(field_get:udorx_pbf.MeterValue.sampledValue)
  return sampledvalue_.Get(index);
}
::udorx_pbf::SampledValue* MeterValue::mutable_sampledvalue(int index) {
  // @@protoc_insertion_point(field_mutable:udorx_pbf.MeterValue.sampledValue)
  return sampledvalue_.Mutable(index);
}
::udorx_pbf::SampledValue* MeterValue::add_sampledvalue() {
  // @@protoc_insertion_point(field_add:udorx_pbf.MeterValue.sampledValue)
  return sampledvalue_.Add();
}
::google::protobuf::RepeatedPtrField< ::udorx_pbf::SampledValue >*
MeterValue::mutable_sampledvalue() {
  // @@protoc_insertion_point(field_mutable_list:udorx_pbf.MeterValue.sampledValue)
  return &sampledvalue_;
}
const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::SampledValue >&
MeterValue::sampledvalue() const {
  // @@protoc_insertion_point(field_list:udorx_pbf.MeterValue.sampledValue)
  return sampledvalue_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MeterValues::kTransactionDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MeterValues::MeterValues()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:udorx_pbf.MeterValues)
}

void MeterValues::InitAsDefaultInstance() {
}

MeterValues::MeterValues(const MeterValues& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:udorx_pbf.MeterValues)
}

void MeterValues::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MeterValues::~MeterValues() {
  // @@protoc_insertion_point(destructor:udorx_pbf.MeterValues)
  SharedDtor();
}

void MeterValues::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MeterValues::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MeterValues::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MeterValues_descriptor_;
}

const MeterValues& MeterValues::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_udorx_5fcommon_2eproto();
  return *default_instance_;
}

MeterValues* MeterValues::default_instance_ = NULL;

MeterValues* MeterValues::New(::google::protobuf::Arena* arena) const {
  MeterValues* n = new MeterValues;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MeterValues::Clear() {
  transactiondata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MeterValues::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:udorx_pbf.MeterValues)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .udorx_pbf.MeterValue transactionData = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_transactionData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_transactiondata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_transactionData;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:udorx_pbf.MeterValues)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:udorx_pbf.MeterValues)
  return false;
#undef DO_
}

void MeterValues::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:udorx_pbf.MeterValues)
  // repeated .udorx_pbf.MeterValue transactionData = 1;
  for (unsigned int i = 0, n = this->transactiondata_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->transactiondata(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:udorx_pbf.MeterValues)
}

::google::protobuf::uint8* MeterValues::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:udorx_pbf.MeterValues)
  // repeated .udorx_pbf.MeterValue transactionData = 1;
  for (unsigned int i = 0, n = this->transactiondata_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->transactiondata(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:udorx_pbf.MeterValues)
  return target;
}

int MeterValues::ByteSize() const {
  int total_size = 0;

  // repeated .udorx_pbf.MeterValue transactionData = 1;
  total_size += 1 * this->transactiondata_size();
  for (int i = 0; i < this->transactiondata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->transactiondata(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MeterValues::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MeterValues* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MeterValues>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MeterValues::MergeFrom(const MeterValues& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  transactiondata_.MergeFrom(from.transactiondata_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MeterValues::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeterValues::CopyFrom(const MeterValues& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeterValues::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->transactiondata())) return false;
  return true;
}

void MeterValues::Swap(MeterValues* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MeterValues::InternalSwap(MeterValues* other) {
  transactiondata_.UnsafeArenaSwap(&other->transactiondata_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MeterValues::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MeterValues_descriptor_;
  metadata.reflection = MeterValues_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MeterValues

// repeated .udorx_pbf.MeterValue transactionData = 1;
int MeterValues::transactiondata_size() const {
  return transactiondata_.size();
}
void MeterValues::clear_transactiondata() {
  transactiondata_.Clear();
}
const ::udorx_pbf::MeterValue& MeterValues::transactiondata(int index) const {
  // @@protoc_insertion_point(field_get:udorx_pbf.MeterValues.transactionData)
  return transactiondata_.Get(index);
}
::udorx_pbf::MeterValue* MeterValues::mutable_transactiondata(int index) {
  // @@protoc_insertion_point(field_mutable:udorx_pbf.MeterValues.transactionData)
  return transactiondata_.Mutable(index);
}
::udorx_pbf::MeterValue* MeterValues::add_transactiondata() {
  // @@protoc_insertion_point(field_add:udorx_pbf.MeterValues.transactionData)
  return transactiondata_.Add();
}
::google::protobuf::RepeatedPtrField< ::udorx_pbf::MeterValue >*
MeterValues::mutable_transactiondata() {
  // @@protoc_insertion_point(field_mutable_list:udorx_pbf.MeterValues.transactionData)
  return &transactiondata_;
}
const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::MeterValue >&
MeterValues::transactiondata() const {
  // @@protoc_insertion_point(field_list:udorx_pbf.MeterValues.transactionData)
  return transactiondata_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrData::kSernFieldNumber;
const int TrData::kTransIdFieldNumber;
const int TrData::kConnIdFieldNumber;
const int TrData::kMvaluesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrData::TrData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:udorx_pbf.TrData)
}

void TrData::InitAsDefaultInstance() {
}

TrData::TrData(const TrData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:udorx_pbf.TrData)
}

void TrData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sern_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transid_ = 0;
  connid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrData::~TrData() {
  // @@protoc_insertion_point(destructor:udorx_pbf.TrData)
  SharedDtor();
}

void TrData::SharedDtor() {
  sern_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TrData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrData_descriptor_;
}

const TrData& TrData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_udorx_5fcommon_2eproto();
  return *default_instance_;
}

TrData* TrData::default_instance_ = NULL;

TrData* TrData::New(::google::protobuf::Arena* arena) const {
  TrData* n = new TrData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrData::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TrData*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(transid_, connid_);
    if (has_sern()) {
      sern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  mvalues_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TrData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:udorx_pbf.TrData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sern = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sern()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sern().data(), this->sern().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "udorx_pbf.TrData.sern");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_transId;
        break;
      }

      // required int32 transId = 2;
      case 2: {
        if (tag == 16) {
         parse_transId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transid_)));
          set_has_transid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_connId;
        break;
      }

      // required int32 connId = 3;
      case 3: {
        if (tag == 24) {
         parse_connId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &connid_)));
          set_has_connid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_mvalues;
        break;
      }

      // repeated .udorx_pbf.MeterValues mvalues = 4;
      case 4: {
        if (tag == 34) {
         parse_mvalues:
          DO_(input->IncrementRecursionDepth());
         parse_loop_mvalues:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_mvalues()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_mvalues;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:udorx_pbf.TrData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:udorx_pbf.TrData)
  return false;
#undef DO_
}

void TrData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:udorx_pbf.TrData)
  // required string sern = 1;
  if (has_sern()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sern().data(), this->sern().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.TrData.sern");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sern(), output);
  }

  // required int32 transId = 2;
  if (has_transid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->transid(), output);
  }

  // required int32 connId = 3;
  if (has_connid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->connid(), output);
  }

  // repeated .udorx_pbf.MeterValues mvalues = 4;
  for (unsigned int i = 0, n = this->mvalues_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->mvalues(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:udorx_pbf.TrData)
}

::google::protobuf::uint8* TrData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:udorx_pbf.TrData)
  // required string sern = 1;
  if (has_sern()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sern().data(), this->sern().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "udorx_pbf.TrData.sern");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sern(), target);
  }

  // required int32 transId = 2;
  if (has_transid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->transid(), target);
  }

  // required int32 connId = 3;
  if (has_connid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->connid(), target);
  }

  // repeated .udorx_pbf.MeterValues mvalues = 4;
  for (unsigned int i = 0, n = this->mvalues_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->mvalues(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:udorx_pbf.TrData)
  return target;
}

int TrData::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_sern()) {
    // required string sern = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sern());
  }

  if (has_transid()) {
    // required int32 transId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transid());
  }

  if (has_connid()) {
    // required int32 connId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->connid());
  }

  return total_size;
}
int TrData::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string sern = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sern());

    // required int32 transId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transid());

    // required int32 connId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->connid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .udorx_pbf.MeterValues mvalues = 4;
  total_size += 1 * this->mvalues_size();
  for (int i = 0; i < this->mvalues_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mvalues(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrData::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TrData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TrData>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrData::MergeFrom(const TrData& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  mvalues_.MergeFrom(from.mvalues_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sern()) {
      set_has_sern();
      sern_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sern_);
    }
    if (from.has_transid()) {
      set_transid(from.transid());
    }
    if (from.has_connid()) {
      set_connid(from.connid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TrData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrData::CopyFrom(const TrData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->mvalues())) return false;
  return true;
}

void TrData::Swap(TrData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrData::InternalSwap(TrData* other) {
  sern_.Swap(&other->sern_);
  std::swap(transid_, other->transid_);
  std::swap(connid_, other->connid_);
  mvalues_.UnsafeArenaSwap(&other->mvalues_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrData_descriptor_;
  metadata.reflection = TrData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrData

// required string sern = 1;
bool TrData::has_sern() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TrData::set_has_sern() {
  _has_bits_[0] |= 0x00000001u;
}
void TrData::clear_has_sern() {
  _has_bits_[0] &= ~0x00000001u;
}
void TrData::clear_sern() {
  sern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sern();
}
 const ::std::string& TrData::sern() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.TrData.sern)
  return sern_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TrData::set_sern(const ::std::string& value) {
  set_has_sern();
  sern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:udorx_pbf.TrData.sern)
}
 void TrData::set_sern(const char* value) {
  set_has_sern();
  sern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:udorx_pbf.TrData.sern)
}
 void TrData::set_sern(const char* value, size_t size) {
  set_has_sern();
  sern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:udorx_pbf.TrData.sern)
}
 ::std::string* TrData::mutable_sern() {
  set_has_sern();
  // @@protoc_insertion_point(field_mutable:udorx_pbf.TrData.sern)
  return sern_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TrData::release_sern() {
  clear_has_sern();
  return sern_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TrData::set_allocated_sern(::std::string* sern) {
  if (sern != NULL) {
    set_has_sern();
  } else {
    clear_has_sern();
  }
  sern_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sern);
  // @@protoc_insertion_point(field_set_allocated:udorx_pbf.TrData.sern)
}

// required int32 transId = 2;
bool TrData::has_transid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TrData::set_has_transid() {
  _has_bits_[0] |= 0x00000002u;
}
void TrData::clear_has_transid() {
  _has_bits_[0] &= ~0x00000002u;
}
void TrData::clear_transid() {
  transid_ = 0;
  clear_has_transid();
}
 ::google::protobuf::int32 TrData::transid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.TrData.transId)
  return transid_;
}
 void TrData::set_transid(::google::protobuf::int32 value) {
  set_has_transid();
  transid_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.TrData.transId)
}

// required int32 connId = 3;
bool TrData::has_connid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TrData::set_has_connid() {
  _has_bits_[0] |= 0x00000004u;
}
void TrData::clear_has_connid() {
  _has_bits_[0] &= ~0x00000004u;
}
void TrData::clear_connid() {
  connid_ = 0;
  clear_has_connid();
}
 ::google::protobuf::int32 TrData::connid() const {
  // @@protoc_insertion_point(field_get:udorx_pbf.TrData.connId)
  return connid_;
}
 void TrData::set_connid(::google::protobuf::int32 value) {
  set_has_connid();
  connid_ = value;
  // @@protoc_insertion_point(field_set:udorx_pbf.TrData.connId)
}

// repeated .udorx_pbf.MeterValues mvalues = 4;
int TrData::mvalues_size() const {
  return mvalues_.size();
}
void TrData::clear_mvalues() {
  mvalues_.Clear();
}
const ::udorx_pbf::MeterValues& TrData::mvalues(int index) const {
  // @@protoc_insertion_point(field_get:udorx_pbf.TrData.mvalues)
  return mvalues_.Get(index);
}
::udorx_pbf::MeterValues* TrData::mutable_mvalues(int index) {
  // @@protoc_insertion_point(field_mutable:udorx_pbf.TrData.mvalues)
  return mvalues_.Mutable(index);
}
::udorx_pbf::MeterValues* TrData::add_mvalues() {
  // @@protoc_insertion_point(field_add:udorx_pbf.TrData.mvalues)
  return mvalues_.Add();
}
::google::protobuf::RepeatedPtrField< ::udorx_pbf::MeterValues >*
TrData::mutable_mvalues() {
  // @@protoc_insertion_point(field_mutable_list:udorx_pbf.TrData.mvalues)
  return &mvalues_;
}
const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::MeterValues >&
TrData::mvalues() const {
  // @@protoc_insertion_point(field_list:udorx_pbf.TrData.mvalues)
  return mvalues_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrDataList::kTdlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrDataList::TrDataList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:udorx_pbf.TrDataList)
}

void TrDataList::InitAsDefaultInstance() {
}

TrDataList::TrDataList(const TrDataList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:udorx_pbf.TrDataList)
}

void TrDataList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrDataList::~TrDataList() {
  // @@protoc_insertion_point(destructor:udorx_pbf.TrDataList)
  SharedDtor();
}

void TrDataList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrDataList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrDataList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrDataList_descriptor_;
}

const TrDataList& TrDataList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_udorx_5fcommon_2eproto();
  return *default_instance_;
}

TrDataList* TrDataList::default_instance_ = NULL;

TrDataList* TrDataList::New(::google::protobuf::Arena* arena) const {
  TrDataList* n = new TrDataList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrDataList::Clear() {
  tdlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TrDataList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:udorx_pbf.TrDataList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .udorx_pbf.TrData tdlist = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_tdlist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tdlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_tdlist;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:udorx_pbf.TrDataList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:udorx_pbf.TrDataList)
  return false;
#undef DO_
}

void TrDataList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:udorx_pbf.TrDataList)
  // repeated .udorx_pbf.TrData tdlist = 4;
  for (unsigned int i = 0, n = this->tdlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->tdlist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:udorx_pbf.TrDataList)
}

::google::protobuf::uint8* TrDataList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:udorx_pbf.TrDataList)
  // repeated .udorx_pbf.TrData tdlist = 4;
  for (unsigned int i = 0, n = this->tdlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->tdlist(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:udorx_pbf.TrDataList)
  return target;
}

int TrDataList::ByteSize() const {
  int total_size = 0;

  // repeated .udorx_pbf.TrData tdlist = 4;
  total_size += 1 * this->tdlist_size();
  for (int i = 0; i < this->tdlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tdlist(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrDataList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TrDataList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TrDataList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrDataList::MergeFrom(const TrDataList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  tdlist_.MergeFrom(from.tdlist_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TrDataList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrDataList::CopyFrom(const TrDataList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrDataList::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->tdlist())) return false;
  return true;
}

void TrDataList::Swap(TrDataList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrDataList::InternalSwap(TrDataList* other) {
  tdlist_.UnsafeArenaSwap(&other->tdlist_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrDataList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrDataList_descriptor_;
  metadata.reflection = TrDataList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrDataList

// repeated .udorx_pbf.TrData tdlist = 4;
int TrDataList::tdlist_size() const {
  return tdlist_.size();
}
void TrDataList::clear_tdlist() {
  tdlist_.Clear();
}
const ::udorx_pbf::TrData& TrDataList::tdlist(int index) const {
  // @@protoc_insertion_point(field_get:udorx_pbf.TrDataList.tdlist)
  return tdlist_.Get(index);
}
::udorx_pbf::TrData* TrDataList::mutable_tdlist(int index) {
  // @@protoc_insertion_point(field_mutable:udorx_pbf.TrDataList.tdlist)
  return tdlist_.Mutable(index);
}
::udorx_pbf::TrData* TrDataList::add_tdlist() {
  // @@protoc_insertion_point(field_add:udorx_pbf.TrDataList.tdlist)
  return tdlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::udorx_pbf::TrData >*
TrDataList::mutable_tdlist() {
  // @@protoc_insertion_point(field_mutable_list:udorx_pbf.TrDataList.tdlist)
  return &tdlist_;
}
const ::google::protobuf::RepeatedPtrField< ::udorx_pbf::TrData >&
TrDataList::tdlist() const {
  // @@protoc_insertion_point(field_list:udorx_pbf.TrDataList.tdlist)
  return tdlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace udorx_pbf

// @@protoc_insertion_point(global_scope)
